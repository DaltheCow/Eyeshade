!function(t){var e={};function n(i){if(e[i])return e[i].exports;var r=e[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(i,r,function(e){return t[e]}.bind(null,r));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=12)}({1:function(t,e,n){"use strict";n.d(e,"a",(function(){return i})),n.d(e,"c",(function(){return r})),n.d(e,"b",(function(){return o}));var i=function(t,e){var n="settings"===t?chrome.storage.sync:chrome.storage.local,i=new Promise((function(e){n.get(t,(function(t){return e(t)}))}));return e?i.then(e):i},r=function(t,e,n){var i="settings"===t?chrome.storage.sync:chrome.storage.local,r=new Promise((function(n){i.set(e,(function(){i.get(t,(function(t){return n(t)}))}))}));return n?r.then(n):r},o=function(t,e){var n=t.map((function(t){return{key:t,storage:chrome.storage["settings"===t?"sync":"local"]}})),i=Promise.all(n.map((function(t){var e=t.storage,n=t.key;return new Promise((function(t){e.get(n,(function(e){return t(e)}))}))}))).then((function(e){var n={};return e.forEach((function(e,i){return n[t[i]]=e[t[i]]})),n}));return e?i.then(e):i}},12:function(t,e,n){"use strict";n.r(e);var i=n(1);Object(i.b)(["settings"]).then((function(t){!function(t,e){var n=t.settings||{},r=n.isBlocking,o=n.siteList,s=n.isWhiteListing,u=n.whiteListSites,c=n.redirectLink;r=Boolean(r),s=Boolean(s);var a={isBlocking:r,siteList:o=void 0===o?[]:o,isWhiteListing:s,whiteListSites:u=void 0===u?[]:u,redirectLink:c=c||""},f={};Object(i.c)("settings",{settings:a}).then((function(t){f=Object.assign(f,t),e(f)}))}(t,(function(t){var e=t.settings,n=e.isBlocking,i=e.isWhiteListing,r=e.siteList,s=e.whiteListSites,u=e.redirectLink;(n||i)&&chrome.tabs.query({},(function(t){var e=i?s:r;Array.from(t).forEach((function(t){o(t.id,t.url,e,i,u)}))}))}))})),chrome.tabs.onUpdated.addListener((function(t,e){Object(i.a)("settings",(function(n){var i=n.settings,r=i.isBlocking,s=i.isWhiteListing,u=i.siteList,c=i.whiteListSites,a=i.redirectLink;if((r||s)&&e.url){var f=s?c:u;o(t,e.url,f,s,a)}}))})),chrome.storage.onChanged.addListener((function(t,e){if(t.settings){var n=t.settings,i=n.oldValue,r=n.newValue;if(i&&r){var s=r.isBlocking,u=r.siteList,c=r.isWhiteListing,a=r.whiteListSites,f=r.redirectLink;(s||c)&&chrome.tabs.query({},(function(t){var e=c?a:u;Array.from(t).forEach((function(t){o(t.id,t.url,e,c,f)}))}))}}}));var r=function(t){return["chrome-extension://","chrome:"].some((function(e){return 0===t.indexOf(e)}))};function o(t,e,n){var i=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=arguments.length>4?arguments[4]:void 0;if(!r(e)){var s=n.find((function(t){return 0===e.indexOf("https://"+t)||0===e.indexOf("http://"+t)})),u=s&&!i||!s&&i;u&&chrome.tabs.update(t,{url:o?"https://"+o:"not_available/not_available.html"})}}}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,