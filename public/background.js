!function(t){var e={};function n(i){if(e[i])return e[i].exports;var r=e[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(i,r,function(e){return t[e]}.bind(null,r));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=44)}({43:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.getStorageAll=e.setStorage=e.getStorage=void 0;e.getStorage=(t,e)=>{const n="settings"===t?chrome.storage.sync:chrome.storage.local;let i=new Promise(e=>{n.get(t,t=>e(t))});return e?i.then(e):i};e.setStorage=(t,e,n)=>{const i="settings"===t?chrome.storage.sync:chrome.storage.local;let r=new Promise(n=>{i.set(e,()=>{i.get(t,t=>n(t))})});return n?r.then(n):r};e.getStorageAll=(t,e)=>{const n=t.map(t=>({key:t,storage:chrome.storage["settings"===t?"sync":"local"]}));let i=Promise.all(n.map(t=>{const{storage:e,key:n}=t;return new Promise(t=>{e.get(n,e=>t(e))})})).then(e=>{const n={};return e.forEach((e,i)=>n[t[i]]=e[t[i]]),n});return e?i.then(e):i}},44:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.RedirectEnum=void 0;const i=n(43);var r;!function(t){t.URL="URL",t.BLANK="BLANK",t.ENCOURAGING="ENCOURAGING",t.OFFENSIVE="OFFENSIVE",t.CUSTOM="CUSTOM"}(r=e.RedirectEnum||(e.RedirectEnum={})),(0,i.getStorageAll)(["settings"]).then(t=>{!function(t,e){let n=t.settings||{},{isBlocking:o,siteList:s,isWhiteListing:c,whiteListSites:a,redirectLink:u,redirectOption:l}=n;o=Boolean(o),c=Boolean(c),s=void 0===s?[]:s,a=void 0===a?[]:a,u=u||"",l=l||r.BLANK;const g={isBlocking:o,siteList:s,isWhiteListing:c,whiteListSites:a,redirectLink:u,redirectOption:l};let d={};(0,i.setStorage)("settings",{settings:g}).then(t=>{d=Object.assign(d,t),e(d)})}(t,t=>{const{isBlocking:e,isWhiteListing:n,siteList:i,whiteListSites:r,redirectLink:s,redirectOption:c}=t.settings;(e||n)&&chrome.tabs.query({},(function(t){const e=n?r:i;Array.from(t).forEach(t=>{o(t.id,t.url,e,n,s,c)})}))})}),chrome.tabs.onUpdated.addListener((function(t,e){(0,i.getStorage)("settings",(function(n){const{isBlocking:i,isWhiteListing:r,siteList:s,whiteListSites:c,redirectLink:a,redirectOption:u}=n.settings;if((i||r)&&e.url){const n=r?c:s;o(t,e.url,n,r,a,u)}}))})),chrome.storage.onChanged.addListener((function(t,e){if(t.settings){const{oldValue:e,newValue:n}=t.settings;if(e&&n){const{isBlocking:t,siteList:e,isWhiteListing:i,whiteListSites:r,redirectLink:s,redirectOption:c}=n;(t||i)&&chrome.tabs.query({},(function(t){const n=i?r:e;Array.from(t).forEach(t=>{o(t.id,t.url,n,i,s,c)})}))}}}));function o(t,e,n,i=!1,o,s){if((t=>["chrome-extension://","chrome:"].some(e=>0===t.indexOf(e)))(e))return;const c=n.find(t=>0===e.indexOf("https://"+t)||0===e.indexOf("http://"+t));if(c&&!i||!c&&i){const e=s===r.URL&&o?"https://"+o:"not_available/not_available.html";chrome.tabs.update(t,{url:e})}}}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,