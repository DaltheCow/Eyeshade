!function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=114)}([function(e,t,n){"use strict";function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}n.d(t,"a",(function(){return r}))},function(e,t,n){"use strict";e.exports=n(54)},function(e,t,n){"use strict";e.exports=n(79)},function(e,t,n){"use strict";n.d(t,"b",(function(){return v})),n.d(t,"c",(function(){return k}));var r=n(0),a=n(4),o=n(38),i=n(89),l=n(82);const u=["variant"];function s(e){return 0===e.length}function c(e){const{variant:t}=e,n=Object(a.a)(e,u);let r=t||"";return Object.keys(n).sort().forEach(t=>{r+="color"===t?s(r)?e[t]:Object(l.a)(e[t]):`${s(r)?t:Object(l.a)(t)}${Object(l.a)(e[t].toString())}`}),r}var f=n(110);const d=["name","slot","skipVariantsResolver","skipSx","overridesResolver"],p=["theme"],h=["theme"];function m(e){return 0===Object.keys(e).length}function g(e){return"ownerState"!==e&&"theme"!==e&&"sx"!==e&&"as"!==e}const y=Object(i.a)();var b=n(30);const v=e=>g(e)&&"classes"!==e,k=g,w=function(e={}){const{defaultTheme:t=y,rootShouldForwardProp:n=g,slotShouldForwardProp:i=g,styleFunctionSx:l=f.a}=e;return(e,u={})=>{const{name:s,slot:f,skipVariantsResolver:y,skipSx:b,overridesResolver:v}=u,k=Object(a.a)(u,d),w=void 0!==y?y:f&&"Root"!==f||!1,S=b||!1;let O=g;"Root"===f?O=n:f&&(O=i);const x=Object(o.a)(e,Object(r.a)({shouldForwardProp:O,label:void 0},k)),E=(e,...n)=>{const o=n?n.map(e=>"function"==typeof e&&e.__emotion_real!==e?n=>{let{theme:o}=n,i=Object(a.a)(n,p);return e(Object(r.a)({theme:m(o)?t:o},i))}:e):[];let i=e;s&&v&&o.push(e=>{const n=m(e.theme)?t:e.theme,a=((e,t)=>t.components&&t.components[e]&&t.components[e].styleOverrides?t.components[e].styleOverrides:null)(s,n);if(a){const t={};return Object.entries(a).forEach(([a,o])=>{t[a]="function"==typeof o?o(Object(r.a)({},e,{theme:n})):o}),v(e,t)}return null}),s&&!w&&o.push(e=>{const n=m(e.theme)?t:e.theme;return((e,t,n,r)=>{var a,o;const{ownerState:i={}}=e,l=[],u=null==n||null==(a=n.components)||null==(o=a[r])?void 0:o.variants;return u&&u.forEach(n=>{let r=!0;Object.keys(n.props).forEach(t=>{i[t]!==n.props[t]&&e[t]!==n.props[t]&&(r=!1)}),r&&l.push(t[c(n.props)])}),l})(e,((e,t)=>{let n=[];t&&t.components&&t.components[e]&&t.components[e].variants&&(n=t.components[e].variants);const r={};return n.forEach(e=>{const t=c(e.props);r[t]=e.style}),r})(s,n),n,s)}),S||o.push(e=>{const n=m(e.theme)?t:e.theme;return l(Object(r.a)({},e,{theme:n}))});const u=o.length-n.length;if(Array.isArray(e)&&u>0){const t=new Array(u).fill("");i=[...e,...t],i.raw=[...e.raw,...t]}else"function"==typeof e&&e.__emotion_real!==e&&(i=n=>{let{theme:o}=n,i=Object(a.a)(n,h);return e(Object(r.a)({theme:m(o)?t:o},i))});return x(i,...o)};return x.withConfig&&(E.withConfig=x.withConfig),E}}({defaultTheme:b.a,rootShouldForwardProp:v});t.a=w},function(e,t,n){"use strict";function r(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}n.d(t,"a",(function(){return r}))},function(e,t,n){"use strict";function r(e){var t,n,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=r(e[t]))&&(a&&(a+=" "),a+=n);else for(t in e)e[t]&&(a&&(a+=" "),a+=t);return a}t.a=function(){for(var e,t,n=0,a="";n<arguments.length;)(e=arguments[n++])&&(t=r(e))&&(a&&(a+=" "),a+=t);return a}},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(84),a=n(30);function o({props:e,name:t}){return Object(r.a)({props:e,name:t,defaultTheme:a.a})}},,,function(e,t,n){"use strict";n.d(t,"b",(function(){return o}));var r=n(82),a=n(13);function o(e,t){if(!t||"string"!=typeof t)return null;if(e&&e.vars){const n=("vars."+t).split(".").reduce((e,t)=>e&&e[t]?e[t]:null,e);if(null!=n)return n}return t.split(".").reduce((e,t)=>e&&null!=e[t]?e[t]:null,e)}function i(e,t,n,r=n){let a;return a="function"==typeof e?e(n):Array.isArray(e)?e[n]||r:o(e,n)||r,t&&(a=t(a)),a}t.a=function(e){const{prop:t,cssProperty:n=e.prop,themeKey:l,transform:u}=e,s=e=>{if(null==e[t])return null;const s=e[t],c=o(e.theme,l)||{};return Object(a.b)(e,s,e=>{let a=i(c,u,e);return e===a&&"string"==typeof e&&(a=i(c,u,`${t}${"default"===e?"":Object(r.a)(e)}`,e)),!1===n?a:{[n]:a}})};return s.propTypes={},s.filterProps=[t],s}},,,,function(e,t,n){"use strict";n.d(t,"e",(function(){return r})),n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return i})),n.d(t,"c",(function(){return l})),n.d(t,"d",(function(){return u}));n(0),n(47),n(16);const r={xs:0,sm:600,md:900,lg:1200,xl:1536},a={keys:["xs","sm","md","lg","xl"],up:e=>`@media (min-width:${r[e]}px)`};function o(e,t,n){const o=e.theme||{};if(Array.isArray(t)){const e=o.breakpoints||a;return t.reduce((r,a,o)=>(r[e.up(e.keys[o])]=n(t[o]),r),{})}if("object"==typeof t){const e=o.breakpoints||a;return Object.keys(t).reduce((a,o)=>{if(-1!==Object.keys(e.values||r).indexOf(o)){a[e.up(o)]=n(t[o],o)}else{const e=o;a[e]=t[e]}return a},{})}return n(t)}function i(e={}){var t;return(null==e||null==(t=e.keys)?void 0:t.reduce((t,n)=>(t[e.up(n)]={},t),{}))||{}}function l(e,t){return e.reduce((e,t)=>{const n=e[t];return(!n||0===Object.keys(n).length)&&delete e[t],e},t)}function u({values:e,breakpoints:t,base:n}){const r=n||function(e,t){if("object"!=typeof e)return{};const n={},r=Object.keys(t);return Array.isArray(e)?r.forEach((t,r)=>{r<e.length&&(n[t]=!0)}):r.forEach(t=>{null!=e[t]&&(n[t]=!0)}),n}(e,t),a=Object.keys(r);if(0===a.length)return e;let o;return a.reduce((t,n,r)=>(Array.isArray(e)?(t[n]=null!=e[r]?e[r]:e[o],o=r):(t[n]=null!=e[n]?e[n]:e[o]||e,o=n),t),{})}},function(e,t,n){"use strict";n.d(t,"b",(function(){return p})),n.d(t,"a",(function(){return h})),n.d(t,"d",(function(){return m}));var r=n(13),a=n(9),o=n(16);const i={m:"margin",p:"padding"},l={t:"Top",r:"Right",b:"Bottom",l:"Left",x:["Left","Right"],y:["Top","Bottom"]},u={marginX:"mx",marginY:"my",paddingX:"px",paddingY:"py"},s=function(e){const t={};return n=>(void 0===t[n]&&(t[n]=e(n)),t[n])}(e=>{if(e.length>2){if(!u[e])return[e];e=u[e]}const[t,n]=e.split(""),r=i[t],a=l[n]||"";return Array.isArray(a)?a.map(e=>r+e):[r+a]}),c=["m","mt","mr","mb","ml","mx","my","margin","marginTop","marginRight","marginBottom","marginLeft","marginX","marginY","marginInline","marginInlineStart","marginInlineEnd","marginBlock","marginBlockStart","marginBlockEnd"],f=["p","pt","pr","pb","pl","px","py","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingX","paddingY","paddingInline","paddingInlineStart","paddingInlineEnd","paddingBlock","paddingBlockStart","paddingBlockEnd"],d=[...c,...f];function p(e,t,n,r){var o;const i=null!=(o=Object(a.b)(e,t))?o:n;return"number"==typeof i?e=>"string"==typeof e?e:i*e:Array.isArray(i)?e=>"string"==typeof e?e:i[e]:"function"==typeof i?i:()=>{}}function h(e){return p(e,"spacing",8)}function m(e,t){if("string"==typeof t||null==t)return t;const n=e(Math.abs(t));return t>=0?n:"number"==typeof n?-n:"-"+n}function g(e,t,n,a){if(-1===t.indexOf(n))return null;const o=function(e,t){return n=>e.reduce((e,r)=>(e[r]=m(t,n),e),{})}(s(n),a),i=e[n];return Object(r.b)(e,i,o)}function y(e,t){const n=h(e.theme);return Object.keys(e).map(r=>g(e,t,r,n)).reduce(o.a,{})}function b(e){return y(e,c)}function v(e){return y(e,f)}function k(e){return y(e,d)}b.propTypes={},b.filterProps=c,v.propTypes={},v.filterProps=f,k.propTypes={},k.filterProps=d;t.c=k},function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return o})),n.d(t,"c",(function(){return a}));function r(e,t,n){var r="";return n.split(" ").forEach((function(n){void 0!==e[n]?t.push(e[n]+";"):r+=n+" "})),r}var a=function(e,t,n){var r=e.key+"-"+t.name;!1===n&&void 0===e.registered[r]&&(e.registered[r]=t.styles)},o=function(e,t,n){a(e,t,n);var r=e.key+"-"+t.name;if(void 0===e.inserted[t.name]){var o=t;do{e.insert(t===o?"."+r:"",o,e.sheet,!0);o=o.next}while(void 0!==o)}}},function(e,t,n){"use strict";var r=n(47);t.a=function(e,t){return t?Object(r.a)(e,t,{clone:!1}):e}},function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return y})),n.d(t,"c",(function(){return f})),n.d(t,"d",(function(){return m})),n.d(t,"e",(function(){return l})),n.d(t,"f",(function(){return p})),n.d(t,"g",(function(){return c}));var r=n(1),a=n(41),o=(n(0),n(36),n(50),n(15)),i=n(24),l={}.hasOwnProperty,u=Object(r.createContext)("undefined"!=typeof HTMLElement?Object(a.a)({key:"css"}):null);var s=u.Provider,c=function(e){return Object(r.forwardRef)((function(t,n){var a=Object(r.useContext)(u);return e(t,a,n)}))},f=Object(r.createContext)({});var d=r.useInsertionEffect?r.useInsertionEffect:function(e){e()};function p(e){d(e)}var h="__EMOTION_TYPE_PLEASE_DO_NOT_USE__",m=function(e,t){var n={};for(var r in t)l.call(t,r)&&(n[r]=t[r]);return n[h]=e,n},g=function(e){var t=e.cache,n=e.serialized,r=e.isStringTag;Object(o.c)(t,n,r);p((function(){return Object(o.b)(t,n,r)}));return null},y=c((function(e,t,n){var a=e.css;"string"==typeof a&&void 0!==t.registered[a]&&(a=t.registered[a]);var u=e[h],s=[a],c="";"string"==typeof e.className?c=Object(o.a)(t.registered,s,e.className):null!=e.className&&(c=e.className+" ");var d=Object(i.a)(s,void 0,Object(r.useContext)(f));c+=t.key+"-"+d.name;var p={};for(var m in e)l.call(e,m)&&"css"!==m&&m!==h&&(p[m]=e[m]);return p.ref=n,p.className=c,Object(r.createElement)(r.Fragment,null,Object(r.createElement)(g,{cache:t,serialized:d,isStringTag:"string"==typeof u}),Object(r.createElement)(u,p))}))},function(e,t,n){"use strict";t.a={50:"#ffebee",100:"#ffcdd2",200:"#ef9a9a",300:"#e57373",400:"#ef5350",500:"#f44336",600:"#e53935",700:"#d32f2f",800:"#c62828",900:"#b71c1c",A100:"#ff8a80",A200:"#ff5252",A400:"#ff1744",A700:"#d50000"}},function(e,t,n){"use strict";t.a={50:"#f3e5f5",100:"#e1bee7",200:"#ce93d8",300:"#ba68c8",400:"#ab47bc",500:"#9c27b0",600:"#8e24aa",700:"#7b1fa2",800:"#6a1b9a",900:"#4a148c",A100:"#ea80fc",A200:"#e040fb",A400:"#d500f9",A700:"#aa00ff"}},function(e,t,n){"use strict";t.a={50:"#e3f2fd",100:"#bbdefb",200:"#90caf9",300:"#64b5f6",400:"#42a5f5",500:"#2196f3",600:"#1e88e5",700:"#1976d2",800:"#1565c0",900:"#0d47a1",A100:"#82b1ff",A200:"#448aff",A400:"#2979ff",A700:"#2962ff"}},function(e,t,n){"use strict";t.a={50:"#e1f5fe",100:"#b3e5fc",200:"#81d4fa",300:"#4fc3f7",400:"#29b6f6",500:"#03a9f4",600:"#039be5",700:"#0288d1",800:"#0277bd",900:"#01579b",A100:"#80d8ff",A200:"#40c4ff",A400:"#00b0ff",A700:"#0091ea"}},function(e,t,n){"use strict";t.a={50:"#e8f5e9",100:"#c8e6c9",200:"#a5d6a7",300:"#81c784",400:"#66bb6a",500:"#4caf50",600:"#43a047",700:"#388e3c",800:"#2e7d32",900:"#1b5e20",A100:"#b9f6ca",A200:"#69f0ae",A400:"#00e676",A700:"#00c853"}},function(e,t,n){"use strict";n.r(t);var r=n(58);n.d(t,"default",(function(){return r.a}));var a=n(28);n.d(t,"paperClasses",(function(){return a.a})),n.d(t,"getPaperUtilityClass",(function(){return a.b}))},function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=function(e){for(var t,n=0,r=0,a=e.length;a>=4;++r,a-=4)t=1540483477*(65535&(t=255&e.charCodeAt(r)|(255&e.charCodeAt(++r))<<8|(255&e.charCodeAt(++r))<<16|(255&e.charCodeAt(++r))<<24))+(59797*(t>>>16)<<16),n=1540483477*(65535&(t^=t>>>24))+(59797*(t>>>16)<<16)^1540483477*(65535&n)+(59797*(n>>>16)<<16);switch(a){case 3:n^=(255&e.charCodeAt(r+2))<<16;case 2:n^=(255&e.charCodeAt(r+1))<<8;case 1:n=1540483477*(65535&(n^=255&e.charCodeAt(r)))+(59797*(n>>>16)<<16)}return(((n=1540483477*(65535&(n^=n>>>13))+(59797*(n>>>16)<<16))^n>>>15)>>>0).toString(36)},a={animationIterationCount:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1},o=n(33),i=/[A-Z]|^ms/g,l=/_EMO_([^_]+?)_([^]*?)_EMO_/g,u=function(e){return 45===e.charCodeAt(1)},s=function(e){return null!=e&&"boolean"!=typeof e},c=Object(o.a)((function(e){return u(e)?e:e.replace(i,"-$&").toLowerCase()})),f=function(e,t){switch(e){case"animation":case"animationName":if("string"==typeof t)return t.replace(l,(function(e,t,n){return p={name:t,styles:n,next:p},t}))}return 1===a[e]||u(e)||"number"!=typeof t||0===t?t:t+"px"};function d(e,t,n){if(null==n)return"";if(void 0!==n.__emotion_styles)return n;switch(typeof n){case"boolean":return"";case"object":if(1===n.anim)return p={name:n.name,styles:n.styles,next:p},n.name;if(void 0!==n.styles){var r=n.next;if(void 0!==r)for(;void 0!==r;)p={name:r.name,styles:r.styles,next:p},r=r.next;return n.styles+";"}return function(e,t,n){var r="";if(Array.isArray(n))for(var a=0;a<n.length;a++)r+=d(e,t,n[a])+";";else for(var o in n){var i=n[o];if("object"!=typeof i)null!=t&&void 0!==t[i]?r+=o+"{"+t[i]+"}":s(i)&&(r+=c(o)+":"+f(o,i)+";");else if(!Array.isArray(i)||"string"!=typeof i[0]||null!=t&&void 0!==t[i[0]]){var l=d(e,t,i);switch(o){case"animation":case"animationName":r+=c(o)+":"+l+";";break;default:r+=o+"{"+l+"}"}}else for(var u=0;u<i.length;u++)s(i[u])&&(r+=c(o)+":"+f(o,i[u])+";")}return r}(e,t,n);case"function":if(void 0!==e){var a=p,o=n(e);return p=a,d(e,t,o)}break;case"string":}if(null==t)return n;var i=t[n];return void 0!==i?i:n}var p,h=/label:\s*([^\s;\n{]+)\s*(;|$)/g;var m=function(e,t,n){if(1===e.length&&"object"==typeof e[0]&&null!==e[0]&&void 0!==e[0].styles)return e[0];var a=!0,o="";p=void 0;var i=e[0];null==i||void 0===i.raw?(a=!1,o+=d(n,t,i)):o+=i[0];for(var l=1;l<e.length;l++)o+=d(n,t,e[l]),a&&(o+=i[l]);h.lastIndex=0;for(var u,s="";null!==(u=h.exec(o));)s+="-"+u[1];return{name:r(o)+s,styles:o,next:p}}},function(e,t,n){"use strict";t.a={black:"#000",white:"#fff"}},function(e,t,n){"use strict";t.a={50:"#fff3e0",100:"#ffe0b2",200:"#ffcc80",300:"#ffb74d",400:"#ffa726",500:"#ff9800",600:"#fb8c00",700:"#f57c00",800:"#ef6c00",900:"#e65100",A100:"#ffd180",A200:"#ffab40",A400:"#ff9100",A700:"#ff6d00"}},,function(e,t,n){"use strict";n.d(t,"b",(function(){return o}));var r=n(64),a=n(88);function o(e){return Object(r.a)("MuiPaper",e)}const i=Object(a.a)("MuiPaper",["root","rounded","outlined","elevation","elevation0","elevation1","elevation2","elevation3","elevation4","elevation5","elevation6","elevation7","elevation8","elevation9","elevation10","elevation11","elevation12","elevation13","elevation14","elevation15","elevation16","elevation17","elevation18","elevation19","elevation20","elevation21","elevation22","elevation23","elevation24"]);t.a=i},function(e,t,n){"use strict";n.d(t,"a",(function(){return P}));var r=n(0),a=n(4),o=n(47),i=n(89);var l=n(39),u=n(63),s=n(25),c=n(43),f=n(19),d=n(18),p=n(26),h=n(20),m=n(21),g=n(22);const y=["mode","contrastThreshold","tonalOffset"],b={text:{primary:"rgba(0, 0, 0, 0.87)",secondary:"rgba(0, 0, 0, 0.6)",disabled:"rgba(0, 0, 0, 0.38)"},divider:"rgba(0, 0, 0, 0.12)",background:{paper:s.a.white,default:s.a.white},action:{active:"rgba(0, 0, 0, 0.54)",hover:"rgba(0, 0, 0, 0.04)",hoverOpacity:.04,selected:"rgba(0, 0, 0, 0.08)",selectedOpacity:.08,disabled:"rgba(0, 0, 0, 0.26)",disabledBackground:"rgba(0, 0, 0, 0.12)",disabledOpacity:.38,focus:"rgba(0, 0, 0, 0.12)",focusOpacity:.12,activatedOpacity:.12}},v={text:{primary:s.a.white,secondary:"rgba(255, 255, 255, 0.7)",disabled:"rgba(255, 255, 255, 0.5)",icon:"rgba(255, 255, 255, 0.5)"},divider:"rgba(255, 255, 255, 0.12)",background:{paper:"#121212",default:"#121212"},action:{active:s.a.white,hover:"rgba(255, 255, 255, 0.08)",hoverOpacity:.08,selected:"rgba(255, 255, 255, 0.16)",selectedOpacity:.16,disabled:"rgba(255, 255, 255, 0.3)",disabledBackground:"rgba(255, 255, 255, 0.12)",disabledOpacity:.38,focus:"rgba(255, 255, 255, 0.12)",focusOpacity:.12,activatedOpacity:.24}};function k(e,t,n,r){const a=r.light||r,o=r.dark||1.5*r;e[t]||(e.hasOwnProperty(n)?e[t]=e[n]:"light"===t?e.light=Object(u.j)(e.main,a):"dark"===t&&(e.dark=Object(u.c)(e.main,o)))}function w(e){const{mode:t="light",contrastThreshold:n=3,tonalOffset:i=.2}=e,w=Object(a.a)(e,y),S=e.primary||function(e="light"){return"dark"===e?{main:h.a[200],light:h.a[50],dark:h.a[400]}:{main:h.a[700],light:h.a[400],dark:h.a[800]}}(t),O=e.secondary||function(e="light"){return"dark"===e?{main:f.a[200],light:f.a[50],dark:f.a[400]}:{main:f.a[500],light:f.a[300],dark:f.a[700]}}(t),x=e.error||function(e="light"){return"dark"===e?{main:d.a[500],light:d.a[300],dark:d.a[700]}:{main:d.a[700],light:d.a[400],dark:d.a[800]}}(t),E=e.info||function(e="light"){return"dark"===e?{main:m.a[400],light:m.a[300],dark:m.a[700]}:{main:m.a[700],light:m.a[500],dark:m.a[900]}}(t),_=e.success||function(e="light"){return"dark"===e?{main:g.a[400],light:g.a[300],dark:g.a[700]}:{main:g.a[800],light:g.a[500],dark:g.a[900]}}(t),C=e.warning||function(e="light"){return"dark"===e?{main:p.a[400],light:p.a[300],dark:p.a[700]}:{main:"#ed6c02",light:p.a[500],dark:p.a[900]}}(t);function j(e){return Object(u.f)(e,v.text.primary)>=n?v.text.primary:b.text.primary}const P=({color:e,name:t,mainShade:n=500,lightShade:a=300,darkShade:o=700})=>{if(!(e=Object(r.a)({},e)).main&&e[n]&&(e.main=e[n]),!e.hasOwnProperty("main"))throw new Error(Object(l.a)(11,t?` (${t})`:"",n));if("string"!=typeof e.main)throw new Error(Object(l.a)(12,t?` (${t})`:"",JSON.stringify(e.main)));return k(e,"light",a,i),k(e,"dark",o,i),e.contrastText||(e.contrastText=j(e.main)),e},T={dark:v,light:b};return Object(o.a)(Object(r.a)({common:Object(r.a)({},s.a),mode:t,primary:P({color:S,name:"primary"}),secondary:P({color:O,name:"secondary",mainShade:"A400",lightShade:"A200",darkShade:"A700"}),error:P({color:x,name:"error"}),warning:P({color:C,name:"warning"}),info:P({color:E,name:"info"}),success:P({color:_,name:"success"}),grey:c.a,contrastThreshold:n,getContrastText:j,augmentColor:P,tonalOffset:i},T[t]),w)}var S=n(44);function O(...e){return[`${e[0]}px ${e[1]}px ${e[2]}px ${e[3]}px rgba(0,0,0,0.2)`,`${e[4]}px ${e[5]}px ${e[6]}px ${e[7]}px rgba(0,0,0,0.14)`,`${e[8]}px ${e[9]}px ${e[10]}px ${e[11]}px rgba(0,0,0,0.12)`].join(",")}var x=["none",O(0,2,1,-1,0,1,1,0,0,1,3,0),O(0,3,1,-2,0,2,2,0,0,1,5,0),O(0,3,3,-2,0,3,4,0,0,1,8,0),O(0,2,4,-1,0,4,5,0,0,1,10,0),O(0,3,5,-1,0,5,8,0,0,1,14,0),O(0,3,5,-1,0,6,10,0,0,1,18,0),O(0,4,5,-2,0,7,10,1,0,2,16,1),O(0,5,5,-3,0,8,10,1,0,3,14,2),O(0,5,6,-3,0,9,12,1,0,3,16,2),O(0,6,6,-3,0,10,14,1,0,4,18,3),O(0,6,7,-4,0,11,15,1,0,4,20,3),O(0,7,8,-4,0,12,17,2,0,5,22,4),O(0,7,8,-4,0,13,19,2,0,5,24,4),O(0,7,9,-4,0,14,21,2,0,5,26,4),O(0,8,9,-5,0,15,22,2,0,6,28,5),O(0,8,10,-5,0,16,24,2,0,6,30,5),O(0,8,11,-5,0,17,26,2,0,6,32,5),O(0,9,11,-5,0,18,28,2,0,7,34,6),O(0,9,12,-6,0,19,29,2,0,7,36,6),O(0,10,13,-6,0,20,31,3,0,8,38,7),O(0,10,13,-6,0,21,33,3,0,8,40,7),O(0,10,14,-6,0,22,35,3,0,8,42,7),O(0,11,14,-7,0,23,36,3,0,9,44,8),O(0,11,15,-7,0,24,38,3,0,9,46,8)],E=n(35);var _={mobileStepper:1e3,fab:1050,speedDial:1050,appBar:1100,drawer:1200,modal:1300,snackbar:1400,tooltip:1500};const C=["breakpoints","mixins","spacing","palette","transitions","typography","shape"];function j(e={},...t){const{mixins:n={},palette:l={},transitions:u={},typography:s={}}=e,c=Object(a.a)(e,C),f=w(l),d=Object(i.a)(e);let p=Object(o.a)(d,{mixins:(h=d.breakpoints,d.spacing,m=n,Object(r.a)({toolbar:{minHeight:56,[h.up("xs")+" and (orientation: landscape)"]:{minHeight:48},[h.up("sm")]:{minHeight:64}}},m)),palette:f,shadows:x.slice(),typography:Object(S.a)(f,s),transitions:Object(E.a)(u),zIndex:Object(r.a)({},_)});var h,m;return p=Object(o.a)(p,c),p=t.reduce((e,t)=>Object(o.a)(e,t),p),p}function P(...e){return j(...e)}t.b=j},function(e,t,n){"use strict";var r=n(29);const a=Object(r.b)();t.a=a},,function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}}(),e.exports=n(55)},function(e,t,n){"use strict";t.a=function(e){var t=Object.create(null);return function(n){return void 0===t[n]&&(t[n]=e(n)),t[n]}}},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;function i(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,l,u=i(e),s=1;s<arguments.length;s++){for(var c in n=Object(arguments[s]))a.call(n,c)&&(u[c]=n[c]);if(r){l=r(n);for(var f=0;f<l.length;f++)o.call(n,l[f])&&(u[l[f]]=n[l[f]])}}return u}},function(e,t,n){"use strict";n.d(t,"c",(function(){return i})),n.d(t,"b",(function(){return l})),n.d(t,"a",(function(){return c}));var r=n(4),a=n(0);const o=["duration","easing","delay"],i={easeInOut:"cubic-bezier(0.4, 0, 0.2, 1)",easeOut:"cubic-bezier(0.0, 0, 0.2, 1)",easeIn:"cubic-bezier(0.4, 0, 1, 1)",sharp:"cubic-bezier(0.4, 0, 0.6, 1)"},l={shortest:150,shorter:200,short:250,standard:300,complex:375,enteringScreen:225,leavingScreen:195};function u(e){return Math.round(e)+"ms"}function s(e){if(!e)return 0;const t=e/36;return Math.round(10*(4+15*t**.25+t/5))}function c(e){const t=Object(a.a)({},i,e.easing),n=Object(a.a)({},l,e.duration);return Object(a.a)({getAutoHeightDuration:s,create:(e=["all"],a={})=>{const{duration:i=n.standard,easing:l=t.easeInOut,delay:s=0}=a;Object(r.a)(a,o);return(Array.isArray(e)?e:[e]).map(e=>`${e} ${"string"==typeof i?i:u(i)} ${l} ${"string"==typeof s?s:u(s)}`).join(",")}},e,{easing:t,duration:n})}},function(e,t,n){"use strict";t.a=function(e){var t=new WeakMap;return function(n){if(t.has(n))return t.get(n);var r=e(n);return t.set(n,r),r}}},function(e,t,n){"use strict";var r=n(89),a=n(61);const o=Object(r.a)();t.a=function(e=o){return Object(a.a)(e)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return v}));n(69);var r=n(1),a=n(33),o=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,i=Object(a.a)((function(e){return o.test(e)||111===e.charCodeAt(0)&&110===e.charCodeAt(1)&&e.charCodeAt(2)<91})),l=n(0),u=n(17),s=n(15),c=n(24),f=i,d=function(e){return"theme"!==e},p=function(e){return"string"==typeof e&&e.charCodeAt(0)>96?f:d},h=function(e,t,n){var r;if(t){var a=t.shouldForwardProp;r=e.__emotion_forwardProp&&a?function(t){return e.__emotion_forwardProp(t)&&a(t)}:a}return"function"!=typeof r&&n&&(r=e.__emotion_forwardProp),r},m=r.useInsertionEffect?r.useInsertionEffect:function(e){e()};var g=function(e){var t=e.cache,n=e.serialized,r=e.isStringTag;Object(s.c)(t,n,r);m((function(){return Object(s.b)(t,n,r)}));return null},y=function e(t,n){var a,o,i=t.__emotion_real===t,f=i&&t.__emotion_base||t;void 0!==n&&(a=n.label,o=n.target);var d=h(t,n,i),m=d||p(f),y=!m("as");return function(){var b=arguments,v=i&&void 0!==t.__emotion_styles?t.__emotion_styles.slice(0):[];if(void 0!==a&&v.push("label:"+a+";"),null==b[0]||void 0===b[0].raw)v.push.apply(v,b);else{0,v.push(b[0][0]);for(var k=b.length,w=1;w<k;w++)v.push(b[w],b[0][w])}var S=Object(u.g)((function(e,t,n){var a=y&&e.as||f,i="",l=[],h=e;if(null==e.theme){for(var b in h={},e)h[b]=e[b];h.theme=Object(r.useContext)(u.c)}"string"==typeof e.className?i=Object(s.a)(t.registered,l,e.className):null!=e.className&&(i=e.className+" ");var k=Object(c.a)(v.concat(l),t.registered,h);i+=t.key+"-"+k.name,void 0!==o&&(i+=" "+o);var w=y&&void 0===d?p(a):m,S={};for(var O in e)y&&"as"===O||w(O)&&(S[O]=e[O]);return S.className=i,S.ref=n,Object(r.createElement)(r.Fragment,null,Object(r.createElement)(g,{cache:t,serialized:k,isStringTag:"string"==typeof a}),Object(r.createElement)(a,S))}));return S.displayName=void 0!==a?a:"Styled("+("string"==typeof f?f:f.displayName||f.name||"Component")+")",S.defaultProps=t.defaultProps,S.__emotion_real=S,S.__emotion_base=f,S.__emotion_styles=v,S.__emotion_forwardProp=d,Object.defineProperty(S,"toString",{value:function(){return"."+o}}),S.withComponent=function(t,r){return e(t,Object(l.a)({},n,r,{shouldForwardProp:h(S,r,!0)})).apply(void 0,v)},S}}.bind();["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","marquee","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"].forEach((function(e){y[e]=y(e)}));var b=y;
/** @license MUI v5.7.0
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */function v(e,t){return b(e,t)}},function(e,t,n){"use strict";function r(e){let t="https://mui.com/production-error/?code="+e;for(let e=1;e<arguments.length;e+=1)t+="&args[]="+encodeURIComponent(arguments[e]);return"Minified MUI error #"+e+"; visit "+t+" for the full message."}n.d(t,"a",(function(){return r}))},function(e,t,n){"use strict";var r=n(77),a={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},o={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},i={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function u(e){return r.isMemo(e)?i:l[e.$$typeof]||a}l[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},l[r.Memo]=i;var s=Object.defineProperty,c=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,h=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(h){var a=p(n);a&&a!==h&&e(t,a,r)}var i=c(n);f&&(i=i.concat(f(n)));for(var l=u(t),m=u(n),g=0;g<i.length;++g){var y=i[g];if(!(o[y]||r&&r[y]||m&&m[y]||l&&l[y])){var b=d(n,y);try{s(t,y,b)}catch(e){}}}}return t}},function(e,t,n){"use strict";var r=function(){function e(e){var t=this;this._insertTag=function(e){var n;n=0===t.tags.length?t.insertionPoint?t.insertionPoint.nextSibling:t.prepend?t.container.firstChild:t.before:t.tags[t.tags.length-1].nextSibling,t.container.insertBefore(e,n),t.tags.push(e)},this.isSpeedy=void 0===e.speedy||e.speedy,this.tags=[],this.ctr=0,this.nonce=e.nonce,this.key=e.key,this.container=e.container,this.prepend=e.prepend,this.insertionPoint=e.insertionPoint,this.before=null}var t=e.prototype;return t.hydrate=function(e){e.forEach(this._insertTag)},t.insert=function(e){this.ctr%(this.isSpeedy?65e3:1)==0&&this._insertTag(function(e){var t=document.createElement("style");return t.setAttribute("data-emotion",e.key),void 0!==e.nonce&&t.setAttribute("nonce",e.nonce),t.appendChild(document.createTextNode("")),t.setAttribute("data-s",""),t}(this));var t=this.tags[this.tags.length-1];if(this.isSpeedy){var n=function(e){if(e.sheet)return e.sheet;for(var t=0;t<document.styleSheets.length;t++)if(document.styleSheets[t].ownerNode===e)return document.styleSheets[t]}(t);try{n.insertRule(e,n.cssRules.length)}catch(e){0}}else t.appendChild(document.createTextNode(e));this.ctr++},t.flush=function(){this.tags.forEach((function(e){return e.parentNode&&e.parentNode.removeChild(e)})),this.tags=[],this.ctr=0},e}(),a="-ms-",o="-moz-",i="-webkit-",l="comm",u="rule",s="decl",c="@keyframes",f=Math.abs,d=String.fromCharCode,p=Object.assign;function h(e){return e.trim()}function m(e,t,n){return e.replace(t,n)}function g(e,t){return e.indexOf(t)}function y(e,t){return 0|e.charCodeAt(t)}function b(e,t,n){return e.slice(t,n)}function v(e){return e.length}function k(e){return e.length}function w(e,t){return t.push(e),e}function S(e,t){return e.map(t).join("")}var O=1,x=1,E=0,_=0,C=0,j="";function P(e,t,n,r,a,o,i){return{value:e,root:t,parent:n,type:r,props:a,children:o,line:O,column:x,length:i,return:""}}function T(e,t){return p(P("",null,null,"",null,null,0),e,{length:-e.length},t)}function L(){return C=_>0?y(j,--_):0,x--,10===C&&(x=1,O--),C}function N(){return C=_<E?y(j,_++):0,x++,10===C&&(x=1,O++),C}function R(){return y(j,_)}function M(){return _}function z(e,t){return b(j,e,t)}function A(e){switch(e){case 0:case 9:case 10:case 13:case 32:return 5;case 33:case 43:case 44:case 47:case 62:case 64:case 126:case 59:case 123:case 125:return 4;case 58:return 3;case 34:case 39:case 40:case 91:return 2;case 41:case 93:return 1}return 0}function I(e){return O=x=1,E=v(j=e),_=0,[]}function D(e){return j="",e}function F(e){return h(z(_-1,function e(t){for(;N();)switch(C){case t:return _;case 34:case 39:34!==t&&39!==t&&e(C);break;case 40:41===t&&e(t);break;case 92:N()}return _}(91===e?e+2:40===e?e+1:e)))}function $(e){for(;(C=R())&&C<33;)N();return A(e)>2||A(C)>3?"":" "}function U(e,t){for(;--t&&N()&&!(C<48||C>102||C>57&&C<65||C>70&&C<97););return z(e,M()+(t<6&&32==R()&&32==N()))}function B(e,t){for(;N()&&e+C!==57&&(e+C!==84||47!==R()););return"/*"+z(t,_-1)+"*"+d(47===e?e:N())}function W(e){for(;!A(R());)N();return z(e,_)}function V(e){return D(function e(t,n,r,a,o,i,l,u,s){var c=0,f=0,p=l,h=0,y=0,b=0,k=1,S=1,O=1,x=0,E="",_=o,C=i,j=a,P=E;for(;S;)switch(b=x,x=N()){case 40:if(108!=b&&58==P.charCodeAt(p-1)){-1!=g(P+=m(F(x),"&","&\f"),"&\f")&&(O=-1);break}case 34:case 39:case 91:P+=F(x);break;case 9:case 10:case 13:case 32:P+=$(b);break;case 92:P+=U(M()-1,7);continue;case 47:switch(R()){case 42:case 47:w(K(B(N(),M()),n,r),s);break;default:P+="/"}break;case 123*k:u[c++]=v(P)*O;case 125*k:case 59:case 0:switch(x){case 0:case 125:S=0;case 59+f:y>0&&v(P)-p&&w(y>32?q(P+";",a,r,p-1):q(m(P," ","")+";",a,r,p-2),s);break;case 59:P+=";";default:if(w(j=H(P,n,r,c,f,o,u,E,_=[],C=[],p),i),123===x)if(0===f)e(P,n,j,j,_,i,p,u,C);else switch(h){case 100:case 109:case 115:e(t,j,j,a&&w(H(t,j,j,0,0,o,u,E,o,_=[],p),C),o,C,p,u,a?_:C);break;default:e(P,j,j,j,[""],C,0,u,C)}}c=f=y=0,k=O=1,E=P="",p=l;break;case 58:p=1+v(P),y=b;default:if(k<1)if(123==x)--k;else if(125==x&&0==k++&&125==L())continue;switch(P+=d(x),x*k){case 38:O=f>0?1:(P+="\f",-1);break;case 44:u[c++]=(v(P)-1)*O,O=1;break;case 64:45===R()&&(P+=F(N())),h=R(),f=p=v(E=P+=W(M())),x++;break;case 45:45===b&&2==v(P)&&(k=0)}}return i}("",null,null,null,[""],e=I(e),0,[0],e))}function H(e,t,n,r,a,o,i,l,s,c,d){for(var p=a-1,g=0===a?o:[""],y=k(g),v=0,w=0,S=0;v<r;++v)for(var O=0,x=b(e,p+1,p=f(w=i[v])),E=e;O<y;++O)(E=h(w>0?g[O]+" "+x:m(x,/&\f/g,g[O])))&&(s[S++]=E);return P(e,t,n,0===a?u:l,s,c,d)}function K(e,t,n){return P(e,t,n,l,d(C),b(e,2,-2),0)}function q(e,t,n,r){return P(e,t,n,s,b(e,0,r),b(e,r+1,-1),r)}function Q(e,t){switch(function(e,t){return(((t<<2^y(e,0))<<2^y(e,1))<<2^y(e,2))<<2^y(e,3)}(e,t)){case 5103:return i+"print-"+e+e;case 5737:case 4201:case 3177:case 3433:case 1641:case 4457:case 2921:case 5572:case 6356:case 5844:case 3191:case 6645:case 3005:case 6391:case 5879:case 5623:case 6135:case 4599:case 4855:case 4215:case 6389:case 5109:case 5365:case 5621:case 3829:return i+e+e;case 5349:case 4246:case 4810:case 6968:case 2756:return i+e+o+e+a+e+e;case 6828:case 4268:return i+e+a+e+e;case 6165:return i+e+a+"flex-"+e+e;case 5187:return i+e+m(e,/(\w+).+(:[^]+)/,i+"box-$1$2"+a+"flex-$1$2")+e;case 5443:return i+e+a+"flex-item-"+m(e,/flex-|-self/,"")+e;case 4675:return i+e+a+"flex-line-pack"+m(e,/align-content|flex-|-self/,"")+e;case 5548:return i+e+a+m(e,"shrink","negative")+e;case 5292:return i+e+a+m(e,"basis","preferred-size")+e;case 6060:return i+"box-"+m(e,"-grow","")+i+e+a+m(e,"grow","positive")+e;case 4554:return i+m(e,/([^-])(transform)/g,"$1"+i+"$2")+e;case 6187:return m(m(m(e,/(zoom-|grab)/,i+"$1"),/(image-set)/,i+"$1"),e,"")+e;case 5495:case 3959:return m(e,/(image-set\([^]*)/,i+"$1$`$1");case 4968:return m(m(e,/(.+:)(flex-)?(.*)/,i+"box-pack:$3"+a+"flex-pack:$3"),/s.+-b[^;]+/,"justify")+i+e+e;case 4095:case 3583:case 4068:case 2532:return m(e,/(.+)-inline(.+)/,i+"$1$2")+e;case 8116:case 7059:case 5753:case 5535:case 5445:case 5701:case 4933:case 4677:case 5533:case 5789:case 5021:case 4765:if(v(e)-1-t>6)switch(y(e,t+1)){case 109:if(45!==y(e,t+4))break;case 102:return m(e,/(.+:)(.+)-([^]+)/,"$1"+i+"$2-$3$1"+o+(108==y(e,t+3)?"$3":"$2-$3"))+e;case 115:return~g(e,"stretch")?Q(m(e,"stretch","fill-available"),t)+e:e}break;case 4949:if(115!==y(e,t+1))break;case 6444:switch(y(e,v(e)-3-(~g(e,"!important")&&10))){case 107:return m(e,":",":"+i)+e;case 101:return m(e,/(.+:)([^;!]+)(;|!.+)?/,"$1"+i+(45===y(e,14)?"inline-":"")+"box$3$1"+i+"$2$3$1"+a+"$2box$3")+e}break;case 5936:switch(y(e,t+11)){case 114:return i+e+a+m(e,/[svh]\w+-[tblr]{2}/,"tb")+e;case 108:return i+e+a+m(e,/[svh]\w+-[tblr]{2}/,"tb-rl")+e;case 45:return i+e+a+m(e,/[svh]\w+-[tblr]{2}/,"lr")+e}return i+e+a+e+e}return e}function G(e,t){for(var n="",r=k(e),a=0;a<r;a++)n+=t(e[a],a,e,t)||"";return n}function Y(e,t,n,r){switch(e.type){case"@import":case s:return e.return=e.return||e.value;case l:return"";case c:return e.return=e.value+"{"+G(e.children,r)+"}";case u:e.value=e.props.join(",")}return v(n=G(e.children,r))?e.return=e.value+"{"+n+"}":""}function X(e){return function(t){t.root||(t=t.return)&&e(t)}}n(36),n(33);var Z=function(e,t,n){for(var r=0,a=0;r=a,a=R(),38===r&&12===a&&(t[n]=1),!A(a);)N();return z(e,_)},J=function(e,t){return D(function(e,t){var n=-1,r=44;do{switch(A(r)){case 0:38===r&&12===R()&&(t[n]=1),e[n]+=Z(_-1,t,n);break;case 2:e[n]+=F(r);break;case 4:if(44===r){e[++n]=58===R()?"&\f":"",t[n]=e[n].length;break}default:e[n]+=d(r)}}while(r=N());return e}(I(e),t))},ee=new WeakMap,te=function(e){if("rule"===e.type&&e.parent&&!(e.length<1)){for(var t=e.value,n=e.parent,r=e.column===n.column&&e.line===n.line;"rule"!==n.type;)if(!(n=n.parent))return;if((1!==e.props.length||58===t.charCodeAt(0)||ee.get(n))&&!r){ee.set(e,!0);for(var a=[],o=J(t,a),i=n.props,l=0,u=0;l<o.length;l++)for(var s=0;s<i.length;s++,u++)e.props[u]=a[l]?o[l].replace(/&\f/g,i[s]):i[s]+" "+o[l]}}},ne=function(e){if("decl"===e.type){var t=e.value;108===t.charCodeAt(0)&&98===t.charCodeAt(2)&&(e.return="",e.value="")}},re=[function(e,t,n,r){if(e.length>-1&&!e.return)switch(e.type){case s:e.return=Q(e.value,e.length);break;case c:return G([T(e,{value:m(e.value,"@","@"+i)})],r);case u:if(e.length)return S(e.props,(function(t){switch(function(e,t){return(e=t.exec(e))?e[0]:e}(t,/(::plac\w+|:read-\w+)/)){case":read-only":case":read-write":return G([T(e,{props:[m(t,/:(read-\w+)/,":-moz-$1")]})],r);case"::placeholder":return G([T(e,{props:[m(t,/:(plac\w+)/,":"+i+"input-$1")]}),T(e,{props:[m(t,/:(plac\w+)/,":-moz-$1")]}),T(e,{props:[m(t,/:(plac\w+)/,a+"input-$1")]})],r)}return""}))}}];t.a=function(e){var t=e.key;if("css"===t){var n=document.querySelectorAll("style[data-emotion]:not([data-s])");Array.prototype.forEach.call(n,(function(e){-1!==e.getAttribute("data-emotion").indexOf(" ")&&(document.head.appendChild(e),e.setAttribute("data-s",""))}))}var a=e.stylisPlugins||re;var o,i,l={},u=[];o=e.container||document.head,Array.prototype.forEach.call(document.querySelectorAll('style[data-emotion^="'+t+' "]'),(function(e){for(var t=e.getAttribute("data-emotion").split(" "),n=1;n<t.length;n++)l[t[n]]=!0;u.push(e)}));var s=[te,ne];var c,f=[Y,X((function(e){c.insert(e)}))],d=function(e){var t=k(e);return function(n,r,a,o){for(var i="",l=0;l<t;l++)i+=e[l](n,r,a,o)||"";return i}}(s.concat(a,f));i=function(e,t,n,r){c=n,G(V(e?e+"{"+t.styles+"}":t.styles),d),r&&(p.inserted[t.name]=!0)};var p={key:t,sheet:new r({key:t,container:o,nonce:e.nonce,speedy:e.speedy,prepend:e.prepend,insertionPoint:e.insertionPoint}),nonce:e.nonce,inserted:l,registered:{},insert:i};return p.sheet.hydrate(u),p}},,function(e,t,n){"use strict";t.a={50:"#fafafa",100:"#f5f5f5",200:"#eeeeee",300:"#e0e0e0",400:"#bdbdbd",500:"#9e9e9e",600:"#757575",700:"#616161",800:"#424242",900:"#212121",A100:"#f5f5f5",A200:"#eeeeee",A400:"#bdbdbd",A700:"#616161"}},function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n(0),a=n(4),o=n(47);const i=["fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","htmlFontSize","allVariants","pxToRem"];const l={textTransform:"uppercase"},u='"Roboto", "Helvetica", "Arial", sans-serif';function s(e,t){const n="function"==typeof t?t(e):t,{fontFamily:s=u,fontSize:c=14,fontWeightLight:f=300,fontWeightRegular:d=400,fontWeightMedium:p=500,fontWeightBold:h=700,htmlFontSize:m=16,allVariants:g,pxToRem:y}=n,b=Object(a.a)(n,i);const v=c/14,k=y||(e=>e/m*v+"rem"),w=(e,t,n,a,o)=>{return Object(r.a)({fontFamily:s,fontWeight:e,fontSize:k(t),lineHeight:n},s===u?{letterSpacing:(i=a/t,Math.round(1e5*i)/1e5)+"em"}:{},o,g);var i},S={h1:w(f,96,1.167,-1.5),h2:w(f,60,1.2,-.5),h3:w(d,48,1.167,0),h4:w(d,34,1.235,.25),h5:w(d,24,1.334,0),h6:w(p,20,1.6,.15),subtitle1:w(d,16,1.75,.15),subtitle2:w(p,14,1.57,.1),body1:w(d,16,1.5,.15),body2:w(d,14,1.43,.15),button:w(p,14,1.75,.4,l),caption:w(d,12,1.66,.4),overline:w(d,12,2.66,1,l)};return Object(o.a)(Object(r.a)({htmlFontSize:m,pxToRem:k,fontFamily:s,fontSize:c,fontWeightLight:f,fontWeightRegular:d,fontWeightMedium:p,fontWeightBold:h},S),b,{clone:!1})}},function(e,t,n){"use strict";var r=n(1);const a=r.createContext(null);t.a=a},function(e,t,n){"use strict";n.d(t,"b",(function(){return Q})),n.d(t,"a",(function(){return G}));var r=n(9),a=n(16);var o=function(...e){const t=e.reduce((e,t)=>(t.filterProps.forEach(n=>{e[n]=t}),e),{}),n=e=>Object.keys(e).reduce((n,r)=>t[r]?Object(a.a)(n,t[r](e)):n,{});return n.propTypes={},n.filterProps=e.reduce((e,t)=>e.concat(t.filterProps),[]),n},i=n(14),l=n(13);function u(e){return"number"!=typeof e?e:e+"px solid"}const s=Object(r.a)({prop:"border",themeKey:"borders",transform:u}),c=Object(r.a)({prop:"borderTop",themeKey:"borders",transform:u}),f=Object(r.a)({prop:"borderRight",themeKey:"borders",transform:u}),d=Object(r.a)({prop:"borderBottom",themeKey:"borders",transform:u}),p=Object(r.a)({prop:"borderLeft",themeKey:"borders",transform:u}),h=Object(r.a)({prop:"borderColor",themeKey:"palette"}),m=Object(r.a)({prop:"borderTopColor",themeKey:"palette"}),g=Object(r.a)({prop:"borderRightColor",themeKey:"palette"}),y=Object(r.a)({prop:"borderBottomColor",themeKey:"palette"}),b=Object(r.a)({prop:"borderLeftColor",themeKey:"palette"}),v=e=>{if(void 0!==e.borderRadius&&null!==e.borderRadius){const t=Object(i.b)(e.theme,"shape.borderRadius",4,"borderRadius"),n=e=>({borderRadius:Object(i.d)(t,e)});return Object(l.b)(e,e.borderRadius,n)}return null};v.propTypes={},v.filterProps=["borderRadius"];var k=o(s,c,f,d,p,h,m,g,y,b,v);var w=o(Object(r.a)({prop:"displayPrint",cssProperty:!1,transform:e=>({"@media print":{display:e}})}),Object(r.a)({prop:"display"}),Object(r.a)({prop:"overflow"}),Object(r.a)({prop:"textOverflow"}),Object(r.a)({prop:"visibility"}),Object(r.a)({prop:"whiteSpace"}));var S=o(Object(r.a)({prop:"flexBasis"}),Object(r.a)({prop:"flexDirection"}),Object(r.a)({prop:"flexWrap"}),Object(r.a)({prop:"justifyContent"}),Object(r.a)({prop:"alignItems"}),Object(r.a)({prop:"alignContent"}),Object(r.a)({prop:"order"}),Object(r.a)({prop:"flex"}),Object(r.a)({prop:"flexGrow"}),Object(r.a)({prop:"flexShrink"}),Object(r.a)({prop:"alignSelf"}),Object(r.a)({prop:"justifyItems"}),Object(r.a)({prop:"justifySelf"}));const O=e=>{if(void 0!==e.gap&&null!==e.gap){const t=Object(i.b)(e.theme,"spacing",8,"gap"),n=e=>({gap:Object(i.d)(t,e)});return Object(l.b)(e,e.gap,n)}return null};O.propTypes={},O.filterProps=["gap"];const x=e=>{if(void 0!==e.columnGap&&null!==e.columnGap){const t=Object(i.b)(e.theme,"spacing",8,"columnGap"),n=e=>({columnGap:Object(i.d)(t,e)});return Object(l.b)(e,e.columnGap,n)}return null};x.propTypes={},x.filterProps=["columnGap"];const E=e=>{if(void 0!==e.rowGap&&null!==e.rowGap){const t=Object(i.b)(e.theme,"spacing",8,"rowGap"),n=e=>({rowGap:Object(i.d)(t,e)});return Object(l.b)(e,e.rowGap,n)}return null};E.propTypes={},E.filterProps=["rowGap"];var _=o(O,x,E,Object(r.a)({prop:"gridColumn"}),Object(r.a)({prop:"gridRow"}),Object(r.a)({prop:"gridAutoFlow"}),Object(r.a)({prop:"gridAutoColumns"}),Object(r.a)({prop:"gridAutoRows"}),Object(r.a)({prop:"gridTemplateColumns"}),Object(r.a)({prop:"gridTemplateRows"}),Object(r.a)({prop:"gridTemplateAreas"}),Object(r.a)({prop:"gridArea"}));var C=o(Object(r.a)({prop:"position"}),Object(r.a)({prop:"zIndex",themeKey:"zIndex"}),Object(r.a)({prop:"top"}),Object(r.a)({prop:"right"}),Object(r.a)({prop:"bottom"}),Object(r.a)({prop:"left"}));var j=o(Object(r.a)({prop:"color",themeKey:"palette"}),Object(r.a)({prop:"bgcolor",cssProperty:"backgroundColor",themeKey:"palette"}),Object(r.a)({prop:"backgroundColor",themeKey:"palette"}));var P=Object(r.a)({prop:"boxShadow",themeKey:"shadows"});function T(e){return e<=1&&0!==e?100*e+"%":e}const L=Object(r.a)({prop:"width",transform:T}),N=e=>{if(void 0!==e.maxWidth&&null!==e.maxWidth){const t=t=>{var n,r,a;return{maxWidth:(null==(n=e.theme)||null==(r=n.breakpoints)||null==(a=r.values)?void 0:a[t])||l.e[t]||T(t)}};return Object(l.b)(e,e.maxWidth,t)}return null};N.filterProps=["maxWidth"];const R=Object(r.a)({prop:"minWidth",transform:T}),M=Object(r.a)({prop:"height",transform:T}),z=Object(r.a)({prop:"maxHeight",transform:T}),A=Object(r.a)({prop:"minHeight",transform:T});Object(r.a)({prop:"size",cssProperty:"width",transform:T}),Object(r.a)({prop:"size",cssProperty:"height",transform:T});var I=o(L,N,R,M,z,A,Object(r.a)({prop:"boxSizing"}));const D=Object(r.a)({prop:"fontFamily",themeKey:"typography"}),F=Object(r.a)({prop:"fontSize",themeKey:"typography"}),$=Object(r.a)({prop:"fontStyle",themeKey:"typography"}),U=Object(r.a)({prop:"fontWeight",themeKey:"typography"}),B=Object(r.a)({prop:"letterSpacing"}),W=Object(r.a)({prop:"textTransform"}),V=Object(r.a)({prop:"lineHeight"}),H=Object(r.a)({prop:"textAlign"});var K=o(Object(r.a)({prop:"typography",cssProperty:!1,themeKey:"typography"}),D,F,$,U,B,V,H,W);const q={borders:k.filterProps,display:w.filterProps,flexbox:S.filterProps,grid:_.filterProps,positions:C.filterProps,palette:j.filterProps,shadows:P.filterProps,sizing:I.filterProps,spacing:i.c.filterProps,typography:K.filterProps},Q={borders:k,display:w,flexbox:S,grid:_,positions:C,palette:j,shadows:P,sizing:I,spacing:i.c,typography:K},G=Object.keys(q).reduce((e,t)=>(q[t].forEach(n=>{e[n]=Q[t]}),e),{})},function(e,t,n){"use strict";n.d(t,"b",(function(){return a})),n.d(t,"a",(function(){return o}));var r=n(0);function a(e){return null!==e&&"object"==typeof e&&e.constructor===Object}function o(e,t,n={clone:!0}){const i=n.clone?Object(r.a)({},e):e;return a(e)&&a(t)&&Object.keys(t).forEach(r=>{"__proto__"!==r&&(a(t[r])&&r in e&&a(e[r])?i[r]=o(e[r],t[r],n):i[r]=t[r])}),i}},,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getStorageAll=t.setStorage=t.getStorage=void 0;t.getStorage=(e,t)=>{const n="settings"===e?chrome.storage.sync:chrome.storage.local;let r=new Promise(t=>{n.get(e,e=>t(e))});return t?r.then(t):r};t.setStorage=(e,t,n)=>{const r="settings"===e?chrome.storage.sync:chrome.storage.local;let a=new Promise(n=>{r.set(t,()=>{r.get(e,e=>n(e))})});return n?a.then(n):a};t.getStorageAll=(e,t)=>{const n=e.map(e=>({key:e,storage:chrome.storage["settings"===e?"sync":"local"]}));let r=Promise.all(n.map(e=>{const{storage:t,key:n}=e;return new Promise(e=>{t.get(n,t=>e(t))})})).then(t=>{const n={};return t.forEach((t,r)=>n[e[r]]=t[e[r]]),n});return t?r.then(t):r}},function(e,t,n){"use strict";var r=n(40),a=n.n(r);t.a=function(e,t){return a()(e,t)}},,,,function(e,t,n){"use strict";
/** @license React v17.0.2
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(34),a=60103,o=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var i=60109,l=60110,u=60112;t.Suspense=60113;var s=60115,c=60116;if("function"==typeof Symbol&&Symbol.for){var f=Symbol.for;a=f("react.element"),o=f("react.portal"),t.Fragment=f("react.fragment"),t.StrictMode=f("react.strict_mode"),t.Profiler=f("react.profiler"),i=f("react.provider"),l=f("react.context"),u=f("react.forward_ref"),t.Suspense=f("react.suspense"),s=f("react.memo"),c=f("react.lazy")}var d="function"==typeof Symbol&&Symbol.iterator;function p(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m={};function g(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}function y(){}function b(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}g.prototype.isReactComponent={},g.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(p(85));this.updater.enqueueSetState(this,e,t,"setState")},g.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},y.prototype=g.prototype;var v=b.prototype=new y;v.constructor=b,r(v,g.prototype),v.isPureReactComponent=!0;var k={current:null},w=Object.prototype.hasOwnProperty,S={key:!0,ref:!0,__self:!0,__source:!0};function O(e,t,n){var r,o={},i=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)w.call(t,r)&&!S.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var s=Array(u),c=0;c<u;c++)s[c]=arguments[c+2];o.children=s}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:a,type:e,key:i,ref:l,props:o,_owner:k.current}}function x(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var E=/\/+/g;function _(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function C(e,t,n,r,i){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var u=!1;if(null===e)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case a:case o:u=!0}}if(u)return i=i(u=e),e=""===r?"."+_(u,0):r,Array.isArray(i)?(n="",null!=e&&(n=e.replace(E,"$&/")+"/"),C(i,t,n,"",(function(e){return e}))):null!=i&&(x(i)&&(i=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,n+(!i.key||u&&u.key===i.key?"":(""+i.key).replace(E,"$&/")+"/")+e)),t.push(i)),1;if(u=0,r=""===r?".":r+":",Array.isArray(e))for(var s=0;s<e.length;s++){var c=r+_(l=e[s],s);u+=C(l,t,n,c,i)}else if("function"==typeof(c=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e)))for(e=c.call(e),s=0;!(l=e.next()).done;)u+=C(l=l.value,t,n,c=r+_(l,s++),i);else if("object"===l)throw t=""+e,Error(p(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return u}function j(e,t,n){if(null==e)return e;var r=[],a=0;return C(e,r,"","",(function(e){return t.call(n,e,a++)})),r}function P(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var T={current:null};function L(){var e=T.current;if(null===e)throw Error(p(321));return e}var N={ReactCurrentDispatcher:T,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:k,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:j,forEach:function(e,t,n){j(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return j(e,(function(){t++})),t},toArray:function(e){return j(e,(function(e){return e}))||[]},only:function(e){if(!x(e))throw Error(p(143));return e}},t.Component=g,t.PureComponent=b,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=N,t.cloneElement=function(e,t,n){if(null==e)throw Error(p(267,e));var o=r({},e.props),i=e.key,l=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,u=k.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(c in t)w.call(t,c)&&!S.hasOwnProperty(c)&&(o[c]=void 0===t[c]&&void 0!==s?s[c]:t[c])}var c=arguments.length-2;if(1===c)o.children=n;else if(1<c){s=Array(c);for(var f=0;f<c;f++)s[f]=arguments[f+2];o.children=s}return{$$typeof:a,type:e.type,key:i,ref:l,props:o,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:l,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=O,t.createFactory=function(e){var t=O.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=x,t.lazy=function(e){return{$$typeof:c,_payload:{_status:-1,_result:e},_init:P}},t.memo=function(e,t){return{$$typeof:s,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return L().useCallback(e,t)},t.useContext=function(e,t){return L().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return L().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return L().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return L().useLayoutEffect(e,t)},t.useMemo=function(e,t){return L().useMemo(e,t)},t.useReducer=function(e,t,n){return L().useReducer(e,t,n)},t.useRef=function(e){return L().useRef(e)},t.useState=function(e){return L().useState(e)},t.version="17.0.2"},function(e,t,n){"use strict";
/** @license React v17.0.2
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(1),a=n(34),o=n(56);function i(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(i(227));var l=new Set,u={};function s(e,t){c(e,t),c(e+"Capture",t)}function c(e,t){for(u[e]=t,e=0;e<t.length;e++)l.add(t[e])}var f=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p=Object.prototype.hasOwnProperty,h={},m={};function g(e,t,n,r,a,o,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o,this.removeEmptyString=i}var y={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){y[e]=new g(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];y[t]=new g(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){y[e]=new g(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){y[e]=new g(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){y[e]=new g(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){y[e]=new g(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){y[e]=new g(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){y[e]=new g(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){y[e]=new g(e,5,!1,e.toLowerCase(),null,!1,!1)}));var b=/[\-:]([a-z])/g;function v(e){return e[1].toUpperCase()}function k(e,t,n,r){var a=y.hasOwnProperty(t)?y[t]:null;(null!==a?0===a.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!p.call(m,e)||!p.call(h,e)&&(d.test(e)?m[e]=!0:(h[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(b,v);y[t]=new g(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(b,v);y[t]=new g(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(b,v);y[t]=new g(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){y[e]=new g(e,1,!1,e.toLowerCase(),null,!1,!1)})),y.xlinkHref=new g("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){y[e]=new g(e,1,!1,e.toLowerCase(),null,!0,!0)}));var w=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,S=60103,O=60106,x=60107,E=60108,_=60114,C=60109,j=60110,P=60112,T=60113,L=60120,N=60115,R=60116,M=60121,z=60128,A=60129,I=60130,D=60131;if("function"==typeof Symbol&&Symbol.for){var F=Symbol.for;S=F("react.element"),O=F("react.portal"),x=F("react.fragment"),E=F("react.strict_mode"),_=F("react.profiler"),C=F("react.provider"),j=F("react.context"),P=F("react.forward_ref"),T=F("react.suspense"),L=F("react.suspense_list"),N=F("react.memo"),R=F("react.lazy"),M=F("react.block"),F("react.scope"),z=F("react.opaque.id"),A=F("react.debug_trace_mode"),I=F("react.offscreen"),D=F("react.legacy_hidden")}var $,U="function"==typeof Symbol&&Symbol.iterator;function B(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=U&&e[U]||e["@@iterator"])?e:null}function W(e){if(void 0===$)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);$=t&&t[1]||""}return"\n"+$+e}var V=!1;function H(e,t){if(!e||V)return"";V=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(e){if(e&&r&&"string"==typeof e.stack){for(var a=e.stack.split("\n"),o=r.stack.split("\n"),i=a.length-1,l=o.length-1;1<=i&&0<=l&&a[i]!==o[l];)l--;for(;1<=i&&0<=l;i--,l--)if(a[i]!==o[l]){if(1!==i||1!==l)do{if(i--,0>--l||a[i]!==o[l])return"\n"+a[i].replace(" at new "," at ")}while(1<=i&&0<=l);break}}}finally{V=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?W(e):""}function K(e){switch(e.tag){case 5:return W(e.type);case 16:return W("Lazy");case 13:return W("Suspense");case 19:return W("SuspenseList");case 0:case 2:case 15:return e=H(e.type,!1);case 11:return e=H(e.type.render,!1);case 22:return e=H(e.type._render,!1);case 1:return e=H(e.type,!0);default:return""}}function q(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case x:return"Fragment";case O:return"Portal";case _:return"Profiler";case E:return"StrictMode";case T:return"Suspense";case L:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case j:return(e.displayName||"Context")+".Consumer";case C:return(e._context.displayName||"Context")+".Provider";case P:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case N:return q(e.type);case M:return q(e._render);case R:t=e._payload,e=e._init;try{return q(e(t))}catch(e){}}return null}function Q(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function G(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Y(e){e._valueTracker||(e._valueTracker=function(e){var t=G(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function X(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=G(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function Z(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function J(e,t){var n=t.checked;return a({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=Q(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&k(e,"checked",t,!1)}function ne(e,t){te(e,t);var n=Q(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ae(e,t.type,n):t.hasOwnProperty("defaultValue")&&ae(e,t.type,Q(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function re(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ae(e,t,n){"number"===t&&Z(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function oe(e,t){return e=a({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function ie(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+Q(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function le(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(i(91));return a({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ue(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(i(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(i(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:Q(n)}}function se(e,t){var n=Q(t.value),r=Q(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function ce(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var fe="http://www.w3.org/1999/xhtml",de="http://www.w3.org/2000/svg";function pe(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function he(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?pe(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var me,ge=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,a){MSApp.execUnsafeLocalFunction((function(){return e(t,n)}))}:e}((function(e,t){if(e.namespaceURI!==de||"innerHTML"in e)e.innerHTML=t;else{for((me=me||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=me.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}}));function ye(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var be={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ve=["Webkit","ms","Moz","O"];function ke(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||be.hasOwnProperty(e)&&be[e]?(""+t).trim():t+"px"}function we(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=ke(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(be).forEach((function(e){ve.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),be[t]=be[e]}))}));var Se=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Oe(e,t){if(t){if(Se[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(i(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(i(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(i(62))}}function xe(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Ee(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var _e=null,Ce=null,je=null;function Pe(e){if(e=Zr(e)){if("function"!=typeof _e)throw Error(i(280));var t=e.stateNode;t&&(t=ea(t),_e(e.stateNode,e.type,t))}}function Te(e){Ce?je?je.push(e):je=[e]:Ce=e}function Le(){if(Ce){var e=Ce,t=je;if(je=Ce=null,Pe(e),t)for(e=0;e<t.length;e++)Pe(t[e])}}function Ne(e,t){return e(t)}function Re(e,t,n,r,a){return e(t,n,r,a)}function Me(){}var ze=Ne,Ae=!1,Ie=!1;function De(){null===Ce&&null===je||(Me(),Le())}function Fe(e,t){var n=e.stateNode;if(null===n)return null;var r=ea(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(i(231,t,typeof n));return n}var $e=!1;if(f)try{var Ue={};Object.defineProperty(Ue,"passive",{get:function(){$e=!0}}),window.addEventListener("test",Ue,Ue),window.removeEventListener("test",Ue,Ue)}catch(e){$e=!1}function Be(e,t,n,r,a,o,i,l,u){var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){this.onError(e)}}var We=!1,Ve=null,He=!1,Ke=null,qe={onError:function(e){We=!0,Ve=e}};function Qe(e,t,n,r,a,o,i,l,u){We=!1,Ve=null,Be.apply(qe,arguments)}function Ge(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ye(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function Xe(e){if(Ge(e)!==e)throw Error(i(188))}function Ze(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ge(e)))throw Error(i(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var o=a.alternate;if(null===o){if(null!==(r=a.return)){n=r;continue}break}if(a.child===o.child){for(o=a.child;o;){if(o===n)return Xe(a),e;if(o===r)return Xe(a),t;o=o.sibling}throw Error(i(188))}if(n.return!==r.return)n=a,r=o;else{for(var l=!1,u=a.child;u;){if(u===n){l=!0,n=a,r=o;break}if(u===r){l=!0,r=a,n=o;break}u=u.sibling}if(!l){for(u=o.child;u;){if(u===n){l=!0,n=o,r=a;break}if(u===r){l=!0,r=o,n=a;break}u=u.sibling}if(!l)throw Error(i(189))}}if(n.alternate!==r)throw Error(i(190))}if(3!==n.tag)throw Error(i(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function Je(e,t){for(var n=e.alternate;null!==t;){if(t===e||t===n)return!0;t=t.return}return!1}var et,tt,nt,rt,at=!1,ot=[],it=null,lt=null,ut=null,st=new Map,ct=new Map,ft=[],dt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function pt(e,t,n,r,a){return{blockedOn:e,domEventName:t,eventSystemFlags:16|n,nativeEvent:a,targetContainers:[r]}}function ht(e,t){switch(e){case"focusin":case"focusout":it=null;break;case"dragenter":case"dragleave":lt=null;break;case"mouseover":case"mouseout":ut=null;break;case"pointerover":case"pointerout":st.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":ct.delete(t.pointerId)}}function mt(e,t,n,r,a,o){return null===e||e.nativeEvent!==o?(e=pt(t,n,r,a,o),null!==t&&(null!==(t=Zr(t))&&tt(t)),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function gt(e){var t=Xr(e.target);if(null!==t){var n=Ge(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ye(n)))return e.blockedOn=t,void rt(e.lanePriority,(function(){o.unstable_runWithPriority(e.priority,(function(){nt(n)}))}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function yt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Zt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=Zr(n))&&tt(t),e.blockedOn=n,!1;t.shift()}return!0}function bt(e,t,n){yt(e)&&n.delete(t)}function vt(){for(at=!1;0<ot.length;){var e=ot[0];if(null!==e.blockedOn){null!==(e=Zr(e.blockedOn))&&et(e);break}for(var t=e.targetContainers;0<t.length;){var n=Zt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n){e.blockedOn=n;break}t.shift()}null===e.blockedOn&&ot.shift()}null!==it&&yt(it)&&(it=null),null!==lt&&yt(lt)&&(lt=null),null!==ut&&yt(ut)&&(ut=null),st.forEach(bt),ct.forEach(bt)}function kt(e,t){e.blockedOn===t&&(e.blockedOn=null,at||(at=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,vt)))}function wt(e){function t(t){return kt(t,e)}if(0<ot.length){kt(ot[0],e);for(var n=1;n<ot.length;n++){var r=ot[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==it&&kt(it,e),null!==lt&&kt(lt,e),null!==ut&&kt(ut,e),st.forEach(t),ct.forEach(t),n=0;n<ft.length;n++)(r=ft[n]).blockedOn===e&&(r.blockedOn=null);for(;0<ft.length&&null===(n=ft[0]).blockedOn;)gt(n),null===n.blockedOn&&ft.shift()}function St(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Ot={animationend:St("Animation","AnimationEnd"),animationiteration:St("Animation","AnimationIteration"),animationstart:St("Animation","AnimationStart"),transitionend:St("Transition","TransitionEnd")},xt={},Et={};function _t(e){if(xt[e])return xt[e];if(!Ot[e])return e;var t,n=Ot[e];for(t in n)if(n.hasOwnProperty(t)&&t in Et)return xt[e]=n[t];return e}f&&(Et=document.createElement("div").style,"AnimationEvent"in window||(delete Ot.animationend.animation,delete Ot.animationiteration.animation,delete Ot.animationstart.animation),"TransitionEvent"in window||delete Ot.transitionend.transition);var Ct=_t("animationend"),jt=_t("animationiteration"),Pt=_t("animationstart"),Tt=_t("transitionend"),Lt=new Map,Nt=new Map,Rt=["abort","abort",Ct,"animationEnd",jt,"animationIteration",Pt,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Tt,"transitionEnd","waiting","waiting"];function Mt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],a=e[n+1];a="on"+(a[0].toUpperCase()+a.slice(1)),Nt.set(r,t),Lt.set(r,a),s(a,[r])}}(0,o.unstable_now)();var zt=8;function At(e){if(0!=(1&e))return zt=15,1;if(0!=(2&e))return zt=14,2;if(0!=(4&e))return zt=13,4;var t=24&e;return 0!==t?(zt=12,t):0!=(32&e)?(zt=11,32):0!==(t=192&e)?(zt=10,t):0!=(256&e)?(zt=9,256):0!==(t=3584&e)?(zt=8,t):0!=(4096&e)?(zt=7,4096):0!==(t=4186112&e)?(zt=6,t):0!==(t=62914560&e)?(zt=5,t):67108864&e?(zt=4,67108864):0!=(134217728&e)?(zt=3,134217728):0!==(t=805306368&e)?(zt=2,t):0!=(1073741824&e)?(zt=1,1073741824):(zt=8,e)}function It(e,t){var n=e.pendingLanes;if(0===n)return zt=0;var r=0,a=0,o=e.expiredLanes,i=e.suspendedLanes,l=e.pingedLanes;if(0!==o)r=o,a=zt=15;else if(0!==(o=134217727&n)){var u=o&~i;0!==u?(r=At(u),a=zt):0!==(l&=o)&&(r=At(l),a=zt)}else 0!==(o=n&~i)?(r=At(o),a=zt):0!==l&&(r=At(l),a=zt);if(0===r)return 0;if(r=n&((0>(r=31-Wt(r))?0:1<<r)<<1)-1,0!==t&&t!==r&&0==(t&i)){if(At(t),a<=zt)return t;zt=a}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)a=1<<(n=31-Wt(t)),r|=e[n],t&=~a;return r}function Dt(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Ft(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=$t(24&~t))?Ft(10,t):e;case 10:return 0===(e=$t(192&~t))?Ft(8,t):e;case 8:return 0===(e=$t(3584&~t))&&(0===(e=$t(4186112&~t))&&(e=512)),e;case 2:return 0===(t=$t(805306368&~t))&&(t=268435456),t}throw Error(i(358,e))}function $t(e){return e&-e}function Ut(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function Bt(e,t,n){e.pendingLanes|=t;var r=t-1;e.suspendedLanes&=r,e.pingedLanes&=r,(e=e.eventTimes)[t=31-Wt(t)]=n}var Wt=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Vt(e)/Ht|0)|0},Vt=Math.log,Ht=Math.LN2;var Kt=o.unstable_UserBlockingPriority,qt=o.unstable_runWithPriority,Qt=!0;function Gt(e,t,n,r){Ae||Me();var a=Xt,o=Ae;Ae=!0;try{Re(a,e,t,n,r)}finally{(Ae=o)||De()}}function Yt(e,t,n,r){qt(Kt,Xt.bind(null,e,t,n,r))}function Xt(e,t,n,r){var a;if(Qt)if((a=0==(4&t))&&0<ot.length&&-1<dt.indexOf(e))e=pt(null,e,t,n,r),ot.push(e);else{var o=Zt(e,t,n,r);if(null===o)a&&ht(e,r);else{if(a){if(-1<dt.indexOf(e))return e=pt(o,e,t,n,r),void ot.push(e);if(function(e,t,n,r,a){switch(t){case"focusin":return it=mt(it,e,t,n,r,a),!0;case"dragenter":return lt=mt(lt,e,t,n,r,a),!0;case"mouseover":return ut=mt(ut,e,t,n,r,a),!0;case"pointerover":var o=a.pointerId;return st.set(o,mt(st.get(o)||null,e,t,n,r,a)),!0;case"gotpointercapture":return o=a.pointerId,ct.set(o,mt(ct.get(o)||null,e,t,n,r,a)),!0}return!1}(o,e,t,n,r))return;ht(e,r)}Tr(e,t,r,null,n)}}}function Zt(e,t,n,r){var a=Ee(r);if(null!==(a=Xr(a))){var o=Ge(a);if(null===o)a=null;else{var i=o.tag;if(13===i){if(null!==(a=Ye(o)))return a;a=null}else if(3===i){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;a=null}else o!==a&&(a=null)}}return Tr(e,t,r,a,n),null}var Jt=null,en=null,tn=null;function nn(){if(tn)return tn;var e,t,n=en,r=n.length,a="value"in Jt?Jt.value:Jt.textContent,o=a.length;for(e=0;e<r&&n[e]===a[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===a[o-t];t++);return tn=a.slice(e,1<t?1-t:void 0)}function rn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function an(){return!0}function on(){return!1}function ln(e){function t(t,n,r,a,o){for(var i in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=a,this.target=o,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(a):a[i]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?an:on,this.isPropagationStopped=on,this}return a(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=an)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=an)},persist:function(){},isPersistent:an}),t}var un,sn,cn,fn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},dn=ln(fn),pn=a({},fn,{view:0,detail:0}),hn=ln(pn),mn=a({},pn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:_n,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==cn&&(cn&&"mousemove"===e.type?(un=e.screenX-cn.screenX,sn=e.screenY-cn.screenY):sn=un=0,cn=e),un)},movementY:function(e){return"movementY"in e?e.movementY:sn}}),gn=ln(mn),yn=ln(a({},mn,{dataTransfer:0})),bn=ln(a({},pn,{relatedTarget:0})),vn=ln(a({},fn,{animationName:0,elapsedTime:0,pseudoElement:0})),kn=ln(a({},fn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),wn=ln(a({},fn,{data:0})),Sn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},On={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},xn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function En(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=xn[e])&&!!t[e]}function _n(){return En}var Cn=ln(a({},pn,{key:function(e){if(e.key){var t=Sn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=rn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?On[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:_n,charCode:function(e){return"keypress"===e.type?rn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?rn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),jn=ln(a({},mn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Pn=ln(a({},pn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:_n})),Tn=ln(a({},fn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Ln=ln(a({},mn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),Nn=[9,13,27,32],Rn=f&&"CompositionEvent"in window,Mn=null;f&&"documentMode"in document&&(Mn=document.documentMode);var zn=f&&"TextEvent"in window&&!Mn,An=f&&(!Rn||Mn&&8<Mn&&11>=Mn),In=String.fromCharCode(32),Dn=!1;function Fn(e,t){switch(e){case"keyup":return-1!==Nn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function $n(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Un=!1;var Bn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Wn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Bn[e.type]:"textarea"===t}function Vn(e,t,n,r){Te(r),0<(t=Nr(t,"onChange")).length&&(n=new dn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Hn=null,Kn=null;function qn(e){xr(e,0)}function Qn(e){if(X(Jr(e)))return e}function Gn(e,t){if("change"===e)return t}var Yn=!1;if(f){var Xn;if(f){var Zn="oninput"in document;if(!Zn){var Jn=document.createElement("div");Jn.setAttribute("oninput","return;"),Zn="function"==typeof Jn.oninput}Xn=Zn}else Xn=!1;Yn=Xn&&(!document.documentMode||9<document.documentMode)}function er(){Hn&&(Hn.detachEvent("onpropertychange",tr),Kn=Hn=null)}function tr(e){if("value"===e.propertyName&&Qn(Kn)){var t=[];if(Vn(t,Kn,e,Ee(e)),e=qn,Ae)e(t);else{Ae=!0;try{Ne(e,t)}finally{Ae=!1,De()}}}}function nr(e,t,n){"focusin"===e?(er(),Kn=n,(Hn=t).attachEvent("onpropertychange",tr)):"focusout"===e&&er()}function rr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Qn(Kn)}function ar(e,t){if("click"===e)return Qn(t)}function or(e,t){if("input"===e||"change"===e)return Qn(t)}var ir="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},lr=Object.prototype.hasOwnProperty;function ur(e,t){if(ir(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!lr.call(t,n[r])||!ir(e[n[r]],t[n[r]]))return!1;return!0}function sr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function cr(e,t){var n,r=sr(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=sr(r)}}function fr(){for(var e=window,t=Z();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=Z((e=t.contentWindow).document)}return t}function dr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var pr=f&&"documentMode"in document&&11>=document.documentMode,hr=null,mr=null,gr=null,yr=!1;function br(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;yr||null==hr||hr!==Z(r)||("selectionStart"in(r=hr)&&dr(r)?r={start:r.selectionStart,end:r.selectionEnd}:r={anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},gr&&ur(gr,r)||(gr=r,0<(r=Nr(mr,"onSelect")).length&&(t=new dn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=hr)))}Mt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Mt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Mt(Rt,2);for(var vr="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),kr=0;kr<vr.length;kr++)Nt.set(vr[kr],0);c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),s("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),s("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),s("onBeforeInput",["compositionend","keypress","textInput","paste"]),s("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var wr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Sr=new Set("cancel close invalid load scroll toggle".split(" ").concat(wr));function Or(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,a,o,l,u,s){if(Qe.apply(this,arguments),We){if(!We)throw Error(i(198));var c=Ve;We=!1,Ve=null,He||(He=!0,Ke=c)}}(r,t,void 0,e),e.currentTarget=null}function xr(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],a=r.event;r=r.listeners;e:{var o=void 0;if(t)for(var i=r.length-1;0<=i;i--){var l=r[i],u=l.instance,s=l.currentTarget;if(l=l.listener,u!==o&&a.isPropagationStopped())break e;Or(a,l,s),o=u}else for(i=0;i<r.length;i++){if(u=(l=r[i]).instance,s=l.currentTarget,l=l.listener,u!==o&&a.isPropagationStopped())break e;Or(a,l,s),o=u}}}if(He)throw e=Ke,He=!1,Ke=null,e}function Er(e,t){var n=ta(t),r=e+"__bubble";n.has(r)||(Pr(t,e,2,!1),n.add(r))}var _r="_reactListening"+Math.random().toString(36).slice(2);function Cr(e){e[_r]||(e[_r]=!0,l.forEach((function(t){Sr.has(t)||jr(t,!1,e,null),jr(t,!0,e,null)})))}function jr(e,t,n,r){var a=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,o=n;if("selectionchange"===e&&9!==n.nodeType&&(o=n.ownerDocument),null!==r&&!t&&Sr.has(e)){if("scroll"!==e)return;a|=2,o=r}var i=ta(o),l=e+"__"+(t?"capture":"bubble");i.has(l)||(t&&(a|=4),Pr(o,e,a,t),i.add(l))}function Pr(e,t,n,r){var a=Nt.get(t);switch(void 0===a?2:a){case 0:a=Gt;break;case 1:a=Yt;break;default:a=Xt}n=a.bind(null,t,n,e),a=void 0,!$e||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),r?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function Tr(e,t,n,r,a){var o=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var l=r.stateNode.containerInfo;if(l===a||8===l.nodeType&&l.parentNode===a)break;if(4===i)for(i=r.return;null!==i;){var u=i.tag;if((3===u||4===u)&&((u=i.stateNode.containerInfo)===a||8===u.nodeType&&u.parentNode===a))return;i=i.return}for(;null!==l;){if(null===(i=Xr(l)))return;if(5===(u=i.tag)||6===u){r=o=i;continue e}l=l.parentNode}}r=r.return}!function(e,t,n){if(Ie)return e(t,n);Ie=!0;try{ze(e,t,n)}finally{Ie=!1,De()}}((function(){var r=o,a=Ee(n),i=[];e:{var l=Lt.get(e);if(void 0!==l){var u=dn,s=e;switch(e){case"keypress":if(0===rn(n))break e;case"keydown":case"keyup":u=Cn;break;case"focusin":s="focus",u=bn;break;case"focusout":s="blur",u=bn;break;case"beforeblur":case"afterblur":u=bn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=gn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=yn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=Pn;break;case Ct:case jt:case Pt:u=vn;break;case Tt:u=Tn;break;case"scroll":u=hn;break;case"wheel":u=Ln;break;case"copy":case"cut":case"paste":u=kn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=jn}var c=0!=(4&t),f=!c&&"scroll"===e,d=c?null!==l?l+"Capture":null:l;c=[];for(var p,h=r;null!==h;){var m=(p=h).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==d&&(null!=(m=Fe(h,d))&&c.push(Lr(h,m,p)))),f)break;h=h.return}0<c.length&&(l=new u(l,s,null,n,a),i.push({event:l,listeners:c}))}}if(0==(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(l="mouseover"===e||"pointerover"===e)||0!=(16&t)||!(s=n.relatedTarget||n.fromElement)||!Xr(s)&&!s[Gr])&&(u||l)&&(l=a.window===a?a:(l=a.ownerDocument)?l.defaultView||l.parentWindow:window,u?(u=r,null!==(s=(s=n.relatedTarget||n.toElement)?Xr(s):null)&&(s!==(f=Ge(s))||5!==s.tag&&6!==s.tag)&&(s=null)):(u=null,s=r),u!==s)){if(c=gn,m="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(c=jn,m="onPointerLeave",d="onPointerEnter",h="pointer"),f=null==u?l:Jr(u),p=null==s?l:Jr(s),(l=new c(m,h+"leave",u,n,a)).target=f,l.relatedTarget=p,m=null,Xr(a)===r&&((c=new c(d,h+"enter",s,n,a)).target=p,c.relatedTarget=f,m=c),f=m,u&&s)e:{for(d=s,h=0,p=c=u;p;p=Rr(p))h++;for(p=0,m=d;m;m=Rr(m))p++;for(;0<h-p;)c=Rr(c),h--;for(;0<p-h;)d=Rr(d),p--;for(;h--;){if(c===d||null!==d&&c===d.alternate)break e;c=Rr(c),d=Rr(d)}c=null}else c=null;null!==u&&Mr(i,l,u,c,!1),null!==s&&null!==f&&Mr(i,f,s,c,!0)}if("select"===(u=(l=r?Jr(r):window).nodeName&&l.nodeName.toLowerCase())||"input"===u&&"file"===l.type)var g=Gn;else if(Wn(l))if(Yn)g=or;else{g=rr;var y=nr}else(u=l.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===l.type||"radio"===l.type)&&(g=ar);switch(g&&(g=g(e,r))?Vn(i,g,n,a):(y&&y(e,l,r),"focusout"===e&&(y=l._wrapperState)&&y.controlled&&"number"===l.type&&ae(l,"number",l.value)),y=r?Jr(r):window,e){case"focusin":(Wn(y)||"true"===y.contentEditable)&&(hr=y,mr=r,gr=null);break;case"focusout":gr=mr=hr=null;break;case"mousedown":yr=!0;break;case"contextmenu":case"mouseup":case"dragend":yr=!1,br(i,n,a);break;case"selectionchange":if(pr)break;case"keydown":case"keyup":br(i,n,a)}var b;if(Rn)e:{switch(e){case"compositionstart":var v="onCompositionStart";break e;case"compositionend":v="onCompositionEnd";break e;case"compositionupdate":v="onCompositionUpdate";break e}v=void 0}else Un?Fn(e,n)&&(v="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(v="onCompositionStart");v&&(An&&"ko"!==n.locale&&(Un||"onCompositionStart"!==v?"onCompositionEnd"===v&&Un&&(b=nn()):(en="value"in(Jt=a)?Jt.value:Jt.textContent,Un=!0)),0<(y=Nr(r,v)).length&&(v=new wn(v,e,null,n,a),i.push({event:v,listeners:y}),b?v.data=b:null!==(b=$n(n))&&(v.data=b))),(b=zn?function(e,t){switch(e){case"compositionend":return $n(t);case"keypress":return 32!==t.which?null:(Dn=!0,In);case"textInput":return(e=t.data)===In&&Dn?null:e;default:return null}}(e,n):function(e,t){if(Un)return"compositionend"===e||!Rn&&Fn(e,t)?(e=nn(),tn=en=Jt=null,Un=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return An&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))&&(0<(r=Nr(r,"onBeforeInput")).length&&(a=new wn("onBeforeInput","beforeinput",null,n,a),i.push({event:a,listeners:r}),a.data=b))}xr(i,t)}))}function Lr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Nr(e,t){for(var n=t+"Capture",r=[];null!==e;){var a=e,o=a.stateNode;5===a.tag&&null!==o&&(a=o,null!=(o=Fe(e,n))&&r.unshift(Lr(e,o,a)),null!=(o=Fe(e,t))&&r.push(Lr(e,o,a))),e=e.return}return r}function Rr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Mr(e,t,n,r,a){for(var o=t._reactName,i=[];null!==n&&n!==r;){var l=n,u=l.alternate,s=l.stateNode;if(null!==u&&u===r)break;5===l.tag&&null!==s&&(l=s,a?null!=(u=Fe(n,o))&&i.unshift(Lr(n,u,l)):a||null!=(u=Fe(n,o))&&i.push(Lr(n,u,l))),n=n.return}0!==i.length&&e.push({event:t,listeners:i})}function zr(){}var Ar=null,Ir=null;function Dr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Fr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var $r="function"==typeof setTimeout?setTimeout:void 0,Ur="function"==typeof clearTimeout?clearTimeout:void 0;function Br(e){1===e.nodeType?e.textContent="":9===e.nodeType&&(null!=(e=e.body)&&(e.textContent=""))}function Wr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Vr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var Hr=0;var Kr=Math.random().toString(36).slice(2),qr="__reactFiber$"+Kr,Qr="__reactProps$"+Kr,Gr="__reactContainer$"+Kr,Yr="__reactEvents$"+Kr;function Xr(e){var t=e[qr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Gr]||n[qr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Vr(e);null!==e;){if(n=e[qr])return n;e=Vr(e)}return t}n=(e=n).parentNode}return null}function Zr(e){return!(e=e[qr]||e[Gr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Jr(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function ea(e){return e[Qr]||null}function ta(e){var t=e[Yr];return void 0===t&&(t=e[Yr]=new Set),t}var na=[],ra=-1;function aa(e){return{current:e}}function oa(e){0>ra||(e.current=na[ra],na[ra]=null,ra--)}function ia(e,t){ra++,na[ra]=e.current,e.current=t}var la={},ua=aa(la),sa=aa(!1),ca=la;function fa(e,t){var n=e.type.contextTypes;if(!n)return la;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,o={};for(a in n)o[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function da(e){return null!=(e=e.childContextTypes)}function pa(){oa(sa),oa(ua)}function ha(e,t,n){if(ua.current!==la)throw Error(i(168));ia(ua,t),ia(sa,n)}function ma(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var o in r=r.getChildContext())if(!(o in e))throw Error(i(108,q(t)||"Unknown",o));return a({},n,r)}function ga(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||la,ca=ua.current,ia(ua,e),ia(sa,sa.current),!0}function ya(e,t,n){var r=e.stateNode;if(!r)throw Error(i(169));n?(e=ma(e,t,ca),r.__reactInternalMemoizedMergedChildContext=e,oa(sa),oa(ua),ia(ua,e)):oa(sa),ia(sa,n)}var ba=null,va=null,ka=o.unstable_runWithPriority,wa=o.unstable_scheduleCallback,Sa=o.unstable_cancelCallback,Oa=o.unstable_shouldYield,xa=o.unstable_requestPaint,Ea=o.unstable_now,_a=o.unstable_getCurrentPriorityLevel,Ca=o.unstable_ImmediatePriority,ja=o.unstable_UserBlockingPriority,Pa=o.unstable_NormalPriority,Ta=o.unstable_LowPriority,La=o.unstable_IdlePriority,Na={},Ra=void 0!==xa?xa:function(){},Ma=null,za=null,Aa=!1,Ia=Ea(),Da=1e4>Ia?Ea:function(){return Ea()-Ia};function Fa(){switch(_a()){case Ca:return 99;case ja:return 98;case Pa:return 97;case Ta:return 96;case La:return 95;default:throw Error(i(332))}}function $a(e){switch(e){case 99:return Ca;case 98:return ja;case 97:return Pa;case 96:return Ta;case 95:return La;default:throw Error(i(332))}}function Ua(e,t){return e=$a(e),ka(e,t)}function Ba(e,t,n){return e=$a(e),wa(e,t,n)}function Wa(){if(null!==za){var e=za;za=null,Sa(e)}Va()}function Va(){if(!Aa&&null!==Ma){Aa=!0;var e=0;try{var t=Ma;Ua(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Ma=null}catch(t){throw null!==Ma&&(Ma=Ma.slice(e+1)),wa(Ca,Wa),t}finally{Aa=!1}}}var Ha=w.ReactCurrentBatchConfig;function Ka(e,t){if(e&&e.defaultProps){for(var n in t=a({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var qa=aa(null),Qa=null,Ga=null,Ya=null;function Xa(){Ya=Ga=Qa=null}function Za(e){var t=qa.current;oa(qa),e.type._context._currentValue=t}function Ja(e,t){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)===t){if(null===n||(n.childLanes&t)===t)break;n.childLanes|=t}else e.childLanes|=t,null!==n&&(n.childLanes|=t);e=e.return}}function eo(e,t){Qa=e,Ya=Ga=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(Ni=!0),e.firstContext=null)}function to(e,t){if(Ya!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Ya=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Ga){if(null===Qa)throw Error(i(308));Ga=t,Qa.dependencies={lanes:0,firstContext:t,responders:null}}else Ga=Ga.next=t;return e._currentValue}var no=!1;function ro(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function ao(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function oo(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function io(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function lo(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var a=null,o=null;if(null!==(n=n.firstBaseUpdate)){do{var i={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===o?a=o=i:o=o.next=i,n=n.next}while(null!==n);null===o?a=o=t:o=o.next=t}else a=o=t;return n={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:o,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function uo(e,t,n,r){var o=e.updateQueue;no=!1;var i=o.firstBaseUpdate,l=o.lastBaseUpdate,u=o.shared.pending;if(null!==u){o.shared.pending=null;var s=u,c=s.next;s.next=null,null===l?i=c:l.next=c,l=s;var f=e.alternate;if(null!==f){var d=(f=f.updateQueue).lastBaseUpdate;d!==l&&(null===d?f.firstBaseUpdate=c:d.next=c,f.lastBaseUpdate=s)}}if(null!==i){for(d=o.baseState,l=0,f=c=s=null;;){u=i.lane;var p=i.eventTime;if((r&u)===u){null!==f&&(f=f.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var h=e,m=i;switch(u=t,p=n,m.tag){case 1:if("function"==typeof(h=m.payload)){d=h.call(p,d,u);break e}d=h;break e;case 3:h.flags=-4097&h.flags|64;case 0:if(null==(u="function"==typeof(h=m.payload)?h.call(p,d,u):h))break e;d=a({},d,u);break e;case 2:no=!0}}null!==i.callback&&(e.flags|=32,null===(u=o.effects)?o.effects=[i]:u.push(i))}else p={eventTime:p,lane:u,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===f?(c=f=p,s=d):f=f.next=p,l|=u;if(null===(i=i.next)){if(null===(u=o.shared.pending))break;i=u.next,u.next=null,o.lastBaseUpdate=u,o.shared.pending=null}}null===f&&(s=d),o.baseState=s,o.firstBaseUpdate=c,o.lastBaseUpdate=f,Ml|=l,e.lanes=l,e.memoizedState=d}}function so(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=n,"function"!=typeof a)throw Error(i(191,a));a.call(r)}}}var co=(new r.Component).refs;function fo(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:a({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var po={isMounted:function(e){return!!(e=e._reactInternals)&&Ge(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=ou(),a=iu(e),o=oo(r,a);o.payload=t,null!=n&&(o.callback=n),io(e,o),lu(e,a,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=ou(),a=iu(e),o=oo(r,a);o.tag=1,o.payload=t,null!=n&&(o.callback=n),io(e,o),lu(e,a,r)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=ou(),r=iu(e),a=oo(n,r);a.tag=2,null!=t&&(a.callback=t),io(e,a),lu(e,r,n)}};function ho(e,t,n,r,a,o,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,o,i):!t.prototype||!t.prototype.isPureReactComponent||(!ur(n,r)||!ur(a,o))}function mo(e,t,n){var r=!1,a=la,o=t.contextType;return"object"==typeof o&&null!==o?o=to(o):(a=da(t)?ca:ua.current,o=(r=null!=(r=t.contextTypes))?fa(e,a):la),t=new t(n,o),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=po,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=o),t}function go(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&po.enqueueReplaceState(t,t.state,null)}function yo(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs=co,ro(e);var o=t.contextType;"object"==typeof o&&null!==o?a.context=to(o):(o=da(t)?ca:ua.current,a.context=fa(e,o)),uo(e,n,a,r),a.state=e.memoizedState,"function"==typeof(o=t.getDerivedStateFromProps)&&(fo(e,t,o,n),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&po.enqueueReplaceState(a,a.state,null),uo(e,n,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4)}var bo=Array.isArray;function vo(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(i(309));var r=n.stateNode}if(!r)throw Error(i(147,e));var a=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===a?t.ref:((t=function(e){var t=r.refs;t===co&&(t=r.refs={}),null===e?delete t[a]:t[a]=e})._stringRef=a,t)}if("string"!=typeof e)throw Error(i(284));if(!n._owner)throw Error(i(290,e))}return e}function ko(e,t){if("textarea"!==e.type)throw Error(i(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function wo(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.flags=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=Fu(e,t)).index=0,e.sibling=null,e}function o(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags=2,n):r:(t.flags=2,n):n}function l(t){return e&&null===t.alternate&&(t.flags=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Wu(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function s(e,t,n,r){return null!==t&&t.elementType===n.type?((r=a(t,n.props)).ref=vo(e,t,n),r.return=e,r):((r=$u(n.type,n.key,n.props,null,e.mode,r)).ref=vo(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Vu(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function f(e,t,n,r,o){return null===t||7!==t.tag?((t=Uu(n,e.mode,r,o)).return=e,t):((t=a(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Wu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case S:return(n=$u(t.type,t.key,t.props,null,e.mode,n)).ref=vo(e,null,t),n.return=e,n;case O:return(t=Vu(t,e.mode,n)).return=e,t}if(bo(t)||B(t))return(t=Uu(t,e.mode,n,null)).return=e,t;ko(e,t)}return null}function p(e,t,n,r){var a=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==a?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case S:return n.key===a?n.type===x?f(e,t,n.props.children,r,a):s(e,t,n,r):null;case O:return n.key===a?c(e,t,n,r):null}if(bo(n)||B(n))return null!==a?null:f(e,t,n,r,null);ko(e,n)}return null}function h(e,t,n,r,a){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case S:return e=e.get(null===r.key?n:r.key)||null,r.type===x?f(t,e,r.props.children,a,r.key):s(t,e,r,a);case O:return c(t,e=e.get(null===r.key?n:r.key)||null,r,a)}if(bo(r)||B(r))return f(t,e=e.get(n)||null,r,a,null);ko(t,r)}return null}function m(a,i,l,u){for(var s=null,c=null,f=i,m=i=0,g=null;null!==f&&m<l.length;m++){f.index>m?(g=f,f=null):g=f.sibling;var y=p(a,f,l[m],u);if(null===y){null===f&&(f=g);break}e&&f&&null===y.alternate&&t(a,f),i=o(y,i,m),null===c?s=y:c.sibling=y,c=y,f=g}if(m===l.length)return n(a,f),s;if(null===f){for(;m<l.length;m++)null!==(f=d(a,l[m],u))&&(i=o(f,i,m),null===c?s=f:c.sibling=f,c=f);return s}for(f=r(a,f);m<l.length;m++)null!==(g=h(f,a,m,l[m],u))&&(e&&null!==g.alternate&&f.delete(null===g.key?m:g.key),i=o(g,i,m),null===c?s=g:c.sibling=g,c=g);return e&&f.forEach((function(e){return t(a,e)})),s}function g(a,l,u,s){var c=B(u);if("function"!=typeof c)throw Error(i(150));if(null==(u=c.call(u)))throw Error(i(151));for(var f=c=null,m=l,g=l=0,y=null,b=u.next();null!==m&&!b.done;g++,b=u.next()){m.index>g?(y=m,m=null):y=m.sibling;var v=p(a,m,b.value,s);if(null===v){null===m&&(m=y);break}e&&m&&null===v.alternate&&t(a,m),l=o(v,l,g),null===f?c=v:f.sibling=v,f=v,m=y}if(b.done)return n(a,m),c;if(null===m){for(;!b.done;g++,b=u.next())null!==(b=d(a,b.value,s))&&(l=o(b,l,g),null===f?c=b:f.sibling=b,f=b);return c}for(m=r(a,m);!b.done;g++,b=u.next())null!==(b=h(m,a,g,b.value,s))&&(e&&null!==b.alternate&&m.delete(null===b.key?g:b.key),l=o(b,l,g),null===f?c=b:f.sibling=b,f=b);return e&&m.forEach((function(e){return t(a,e)})),c}return function(e,r,o,u){var s="object"==typeof o&&null!==o&&o.type===x&&null===o.key;s&&(o=o.props.children);var c="object"==typeof o&&null!==o;if(c)switch(o.$$typeof){case S:e:{for(c=o.key,s=r;null!==s;){if(s.key===c){switch(s.tag){case 7:if(o.type===x){n(e,s.sibling),(r=a(s,o.props.children)).return=e,e=r;break e}break;default:if(s.elementType===o.type){n(e,s.sibling),(r=a(s,o.props)).ref=vo(e,s,o),r.return=e,e=r;break e}}n(e,s);break}t(e,s),s=s.sibling}o.type===x?((r=Uu(o.props.children,e.mode,u,o.key)).return=e,e=r):((u=$u(o.type,o.key,o.props,null,e.mode,u)).ref=vo(e,r,o),u.return=e,e=u)}return l(e);case O:e:{for(s=o.key;null!==r;){if(r.key===s){if(4===r.tag&&r.stateNode.containerInfo===o.containerInfo&&r.stateNode.implementation===o.implementation){n(e,r.sibling),(r=a(r,o.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Vu(o,e.mode,u)).return=e,e=r}return l(e)}if("string"==typeof o||"number"==typeof o)return o=""+o,null!==r&&6===r.tag?(n(e,r.sibling),(r=a(r,o)).return=e,e=r):(n(e,r),(r=Wu(o,e.mode,u)).return=e,e=r),l(e);if(bo(o))return m(e,r,o,u);if(B(o))return g(e,r,o,u);if(c&&ko(e,o),void 0===o&&!s)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(i(152,q(e.type)||"Component"))}return n(e,r)}}var So=wo(!0),Oo=wo(!1),xo={},Eo=aa(xo),_o=aa(xo),Co=aa(xo);function jo(e){if(e===xo)throw Error(i(174));return e}function Po(e,t){switch(ia(Co,t),ia(_o,e),ia(Eo,xo),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:he(null,"");break;default:t=he(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}oa(Eo),ia(Eo,t)}function To(){oa(Eo),oa(_o),oa(Co)}function Lo(e){jo(Co.current);var t=jo(Eo.current),n=he(t,e.type);t!==n&&(ia(_o,e),ia(Eo,n))}function No(e){_o.current===e&&(oa(Eo),oa(_o))}var Ro=aa(0);function Mo(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var zo=null,Ao=null,Io=!1;function Do(e,t){var n=Iu(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Fo(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function $o(e){if(Io){var t=Ao;if(t){var n=t;if(!Fo(e,t)){if(!(t=Wr(n.nextSibling))||!Fo(e,t))return e.flags=-1025&e.flags|2,Io=!1,void(zo=e);Do(zo,n)}zo=e,Ao=Wr(t.firstChild)}else e.flags=-1025&e.flags|2,Io=!1,zo=e}}function Uo(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;zo=e}function Bo(e){if(e!==zo)return!1;if(!Io)return Uo(e),Io=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Fr(t,e.memoizedProps))for(t=Ao;t;)Do(e,t),t=Wr(t.nextSibling);if(Uo(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Ao=Wr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Ao=null}}else Ao=zo?Wr(e.stateNode.nextSibling):null;return!0}function Wo(){Ao=zo=null,Io=!1}var Vo=[];function Ho(){for(var e=0;e<Vo.length;e++)Vo[e]._workInProgressVersionPrimary=null;Vo.length=0}var Ko=w.ReactCurrentDispatcher,qo=w.ReactCurrentBatchConfig,Qo=0,Go=null,Yo=null,Xo=null,Zo=!1,Jo=!1;function ei(){throw Error(i(321))}function ti(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ir(e[n],t[n]))return!1;return!0}function ni(e,t,n,r,a,o){if(Qo=o,Go=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,Ko.current=null===e||null===e.memoizedState?ji:Pi,e=n(r,a),Jo){o=0;do{if(Jo=!1,!(25>o))throw Error(i(301));o+=1,Xo=Yo=null,t.updateQueue=null,Ko.current=Ti,e=n(r,a)}while(Jo)}if(Ko.current=Ci,t=null!==Yo&&null!==Yo.next,Qo=0,Xo=Yo=Go=null,Zo=!1,t)throw Error(i(300));return e}function ri(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Xo?Go.memoizedState=Xo=e:Xo=Xo.next=e,Xo}function ai(){if(null===Yo){var e=Go.alternate;e=null!==e?e.memoizedState:null}else e=Yo.next;var t=null===Xo?Go.memoizedState:Xo.next;if(null!==t)Xo=t,Yo=e;else{if(null===e)throw Error(i(310));e={memoizedState:(Yo=e).memoizedState,baseState:Yo.baseState,baseQueue:Yo.baseQueue,queue:Yo.queue,next:null},null===Xo?Go.memoizedState=Xo=e:Xo=Xo.next=e}return Xo}function oi(e,t){return"function"==typeof t?t(e):t}function ii(e){var t=ai(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=Yo,a=r.baseQueue,o=n.pending;if(null!==o){if(null!==a){var l=a.next;a.next=o.next,o.next=l}r.baseQueue=a=o,n.pending=null}if(null!==a){a=a.next,r=r.baseState;var u=l=o=null,s=a;do{var c=s.lane;if((Qo&c)===c)null!==u&&(u=u.next={lane:0,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null}),r=s.eagerReducer===e?s.eagerState:e(r,s.action);else{var f={lane:c,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null};null===u?(l=u=f,o=r):u=u.next=f,Go.lanes|=c,Ml|=c}s=s.next}while(null!==s&&s!==a);null===u?o=r:u.next=l,ir(r,t.memoizedState)||(Ni=!0),t.memoizedState=r,t.baseState=o,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function li(e){var t=ai(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,o=t.memoizedState;if(null!==a){n.pending=null;var l=a=a.next;do{o=e(o,l.action),l=l.next}while(l!==a);ir(o,t.memoizedState)||(Ni=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,r]}function ui(e,t,n){var r=t._getVersion;r=r(t._source);var a=t._workInProgressVersionPrimary;if(null!==a?e=a===r:(e=e.mutableReadLanes,(e=(Qo&e)===e)&&(t._workInProgressVersionPrimary=r,Vo.push(t))),e)return n(t._source);throw Vo.push(t),Error(i(350))}function si(e,t,n,r){var a=_l;if(null===a)throw Error(i(349));var o=t._getVersion,l=o(t._source),u=Ko.current,s=u.useState((function(){return ui(a,t,n)})),c=s[1],f=s[0];s=Xo;var d=e.memoizedState,p=d.refs,h=p.getSnapshot,m=d.source;d=d.subscribe;var g=Go;return e.memoizedState={refs:p,source:t,subscribe:r},u.useEffect((function(){p.getSnapshot=n,p.setSnapshot=c;var e=o(t._source);if(!ir(l,e)){e=n(t._source),ir(f,e)||(c(e),e=iu(g),a.mutableReadLanes|=e&a.pendingLanes),e=a.mutableReadLanes,a.entangledLanes|=e;for(var r=a.entanglements,i=e;0<i;){var u=31-Wt(i),s=1<<u;r[u]|=e,i&=~s}}}),[n,t,r]),u.useEffect((function(){return r(t._source,(function(){var e=p.getSnapshot,n=p.setSnapshot;try{n(e(t._source));var r=iu(g);a.mutableReadLanes|=r&a.pendingLanes}catch(e){n((function(){throw e}))}}))}),[t,r]),ir(h,n)&&ir(m,t)&&ir(d,r)||((e={pending:null,dispatch:null,lastRenderedReducer:oi,lastRenderedState:f}).dispatch=c=_i.bind(null,Go,e),s.queue=e,s.baseQueue=null,f=ui(a,t,n),s.memoizedState=s.baseState=f),f}function ci(e,t,n){return si(ai(),e,t,n)}function fi(e){var t=ri();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:oi,lastRenderedState:e}).dispatch=_i.bind(null,Go,e),[t.memoizedState,e]}function di(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Go.updateQueue)?(t={lastEffect:null},Go.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function pi(e){return e={current:e},ri().memoizedState=e}function hi(){return ai().memoizedState}function mi(e,t,n,r){var a=ri();Go.flags|=e,a.memoizedState=di(1|t,n,void 0,void 0===r?null:r)}function gi(e,t,n,r){var a=ai();r=void 0===r?null:r;var o=void 0;if(null!==Yo){var i=Yo.memoizedState;if(o=i.destroy,null!==r&&ti(r,i.deps))return void di(t,n,o,r)}Go.flags|=e,a.memoizedState=di(1|t,n,o,r)}function yi(e,t){return mi(516,4,e,t)}function bi(e,t){return gi(516,4,e,t)}function vi(e,t){return gi(4,2,e,t)}function ki(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function wi(e,t,n){return n=null!=n?n.concat([e]):null,gi(4,2,ki.bind(null,t,e),n)}function Si(){}function Oi(e,t){var n=ai();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&ti(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function xi(e,t){var n=ai();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&ti(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Ei(e,t){var n=Fa();Ua(98>n?98:n,(function(){e(!0)})),Ua(97<n?97:n,(function(){var n=qo.transition;qo.transition=1;try{e(!1),t()}finally{qo.transition=n}}))}function _i(e,t,n){var r=ou(),a=iu(e),o={lane:a,action:n,eagerReducer:null,eagerState:null,next:null},i=t.pending;if(null===i?o.next=o:(o.next=i.next,i.next=o),t.pending=o,i=e.alternate,e===Go||null!==i&&i===Go)Jo=Zo=!0;else{if(0===e.lanes&&(null===i||0===i.lanes)&&null!==(i=t.lastRenderedReducer))try{var l=t.lastRenderedState,u=i(l,n);if(o.eagerReducer=i,o.eagerState=u,ir(u,l))return}catch(e){}lu(e,a,r)}}var Ci={readContext:to,useCallback:ei,useContext:ei,useEffect:ei,useImperativeHandle:ei,useLayoutEffect:ei,useMemo:ei,useReducer:ei,useRef:ei,useState:ei,useDebugValue:ei,useDeferredValue:ei,useTransition:ei,useMutableSource:ei,useOpaqueIdentifier:ei,unstable_isNewReconciler:!1},ji={readContext:to,useCallback:function(e,t){return ri().memoizedState=[e,void 0===t?null:t],e},useContext:to,useEffect:yi,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,mi(4,2,ki.bind(null,t,e),n)},useLayoutEffect:function(e,t){return mi(4,2,e,t)},useMemo:function(e,t){var n=ri();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=ri();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=_i.bind(null,Go,e),[r.memoizedState,e]},useRef:pi,useState:fi,useDebugValue:Si,useDeferredValue:function(e){var t=fi(e),n=t[0],r=t[1];return yi((function(){var t=qo.transition;qo.transition=1;try{r(e)}finally{qo.transition=t}}),[e]),n},useTransition:function(){var e=fi(!1),t=e[0];return pi(e=Ei.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,n){var r=ri();return r.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:n},si(r,e,t,n)},useOpaqueIdentifier:function(){if(Io){var e=!1,t=function(e){return{$$typeof:z,toString:e,valueOf:e}}((function(){throw e||(e=!0,n("r:"+(Hr++).toString(36))),Error(i(355))})),n=fi(t)[1];return 0==(2&Go.mode)&&(Go.flags|=516,di(5,(function(){n("r:"+(Hr++).toString(36))}),void 0,null)),t}return fi(t="r:"+(Hr++).toString(36)),t},unstable_isNewReconciler:!1},Pi={readContext:to,useCallback:Oi,useContext:to,useEffect:bi,useImperativeHandle:wi,useLayoutEffect:vi,useMemo:xi,useReducer:ii,useRef:hi,useState:function(){return ii(oi)},useDebugValue:Si,useDeferredValue:function(e){var t=ii(oi),n=t[0],r=t[1];return bi((function(){var t=qo.transition;qo.transition=1;try{r(e)}finally{qo.transition=t}}),[e]),n},useTransition:function(){var e=ii(oi)[0];return[hi().current,e]},useMutableSource:ci,useOpaqueIdentifier:function(){return ii(oi)[0]},unstable_isNewReconciler:!1},Ti={readContext:to,useCallback:Oi,useContext:to,useEffect:bi,useImperativeHandle:wi,useLayoutEffect:vi,useMemo:xi,useReducer:li,useRef:hi,useState:function(){return li(oi)},useDebugValue:Si,useDeferredValue:function(e){var t=li(oi),n=t[0],r=t[1];return bi((function(){var t=qo.transition;qo.transition=1;try{r(e)}finally{qo.transition=t}}),[e]),n},useTransition:function(){var e=li(oi)[0];return[hi().current,e]},useMutableSource:ci,useOpaqueIdentifier:function(){return li(oi)[0]},unstable_isNewReconciler:!1},Li=w.ReactCurrentOwner,Ni=!1;function Ri(e,t,n,r){t.child=null===e?Oo(t,null,n,r):So(t,e.child,n,r)}function Mi(e,t,n,r,a){n=n.render;var o=t.ref;return eo(t,a),r=ni(e,t,n,r,o,a),null===e||Ni?(t.flags|=1,Ri(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,el(e,t,a))}function zi(e,t,n,r,a,o){if(null===e){var i=n.type;return"function"!=typeof i||Du(i)||void 0!==i.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=$u(n.type,null,r,t,t.mode,o)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,Ai(e,t,i,r,a,o))}return i=e.child,0==(a&o)&&(a=i.memoizedProps,(n=null!==(n=n.compare)?n:ur)(a,r)&&e.ref===t.ref)?el(e,t,o):(t.flags|=1,(e=Fu(i,r)).ref=t.ref,e.return=t,t.child=e)}function Ai(e,t,n,r,a,o){if(null!==e&&ur(e.memoizedProps,r)&&e.ref===t.ref){if(Ni=!1,0==(o&a))return t.lanes=e.lanes,el(e,t,o);0!=(16384&e.flags)&&(Ni=!0)}return Fi(e,t,n,r,o)}function Ii(e,t,n){var r=t.pendingProps,a=r.children,o=null!==e?e.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0==(4&t.mode))t.memoizedState={baseLanes:0},mu(t,n);else{if(0==(1073741824&n))return e=null!==o?o.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},mu(t,e),null;t.memoizedState={baseLanes:0},mu(t,null!==o?o.baseLanes:n)}else null!==o?(r=o.baseLanes|n,t.memoizedState=null):r=n,mu(t,r);return Ri(e,t,a,n),t.child}function Di(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=128)}function Fi(e,t,n,r,a){var o=da(n)?ca:ua.current;return o=fa(t,o),eo(t,a),n=ni(e,t,n,r,o,a),null===e||Ni?(t.flags|=1,Ri(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,el(e,t,a))}function $i(e,t,n,r,a){if(da(n)){var o=!0;ga(t)}else o=!1;if(eo(t,a),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),mo(t,n,r),yo(t,n,r,a),r=!0;else if(null===e){var i=t.stateNode,l=t.memoizedProps;i.props=l;var u=i.context,s=n.contextType;"object"==typeof s&&null!==s?s=to(s):s=fa(t,s=da(n)?ca:ua.current);var c=n.getDerivedStateFromProps,f="function"==typeof c||"function"==typeof i.getSnapshotBeforeUpdate;f||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==r||u!==s)&&go(t,i,r,s),no=!1;var d=t.memoizedState;i.state=d,uo(t,r,i,a),u=t.memoizedState,l!==r||d!==u||sa.current||no?("function"==typeof c&&(fo(t,n,c,r),u=t.memoizedState),(l=no||ho(t,n,l,r,d,u,s))?(f||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.flags|=4)):("function"==typeof i.componentDidMount&&(t.flags|=4),t.memoizedProps=r,t.memoizedState=u),i.props=r,i.state=u,i.context=s,r=l):("function"==typeof i.componentDidMount&&(t.flags|=4),r=!1)}else{i=t.stateNode,ao(e,t),l=t.memoizedProps,s=t.type===t.elementType?l:Ka(t.type,l),i.props=s,f=t.pendingProps,d=i.context,"object"==typeof(u=n.contextType)&&null!==u?u=to(u):u=fa(t,u=da(n)?ca:ua.current);var p=n.getDerivedStateFromProps;(c="function"==typeof p||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==f||d!==u)&&go(t,i,r,u),no=!1,d=t.memoizedState,i.state=d,uo(t,r,i,a);var h=t.memoizedState;l!==f||d!==h||sa.current||no?("function"==typeof p&&(fo(t,n,p,r),h=t.memoizedState),(s=no||ho(t,n,s,r,d,h,u))?(c||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,h,u),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,h,u)),"function"==typeof i.componentDidUpdate&&(t.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),t.memoizedProps=r,t.memoizedState=h),i.props=r,i.state=h,i.context=u,r=s):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),r=!1)}return Ui(e,t,n,r,o,a)}function Ui(e,t,n,r,a,o){Di(e,t);var i=0!=(64&t.flags);if(!r&&!i)return a&&ya(t,n,!1),el(e,t,o);r=t.stateNode,Li.current=t;var l=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&i?(t.child=So(t,e.child,null,o),t.child=So(t,null,l,o)):Ri(e,t,l,o),t.memoizedState=r.state,a&&ya(t,n,!0),t.child}function Bi(e){var t=e.stateNode;t.pendingContext?ha(0,t.pendingContext,t.pendingContext!==t.context):t.context&&ha(0,t.context,!1),Po(e,t.containerInfo)}var Wi,Vi,Hi,Ki={dehydrated:null,retryLane:0};function qi(e,t,n){var r,a=t.pendingProps,o=Ro.current,i=!1;return(r=0!=(64&t.flags))||(r=(null===e||null!==e.memoizedState)&&0!=(2&o)),r?(i=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===a.fallback||!0===a.unstable_avoidThisFallback||(o|=1),ia(Ro,1&o),null===e?(void 0!==a.fallback&&$o(t),e=a.children,o=a.fallback,i?(e=Qi(t,e,o,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Ki,e):"number"==typeof a.unstable_expectedLoadTime?(e=Qi(t,e,o,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Ki,t.lanes=33554432,e):((n=Bu({mode:"visible",children:e},t.mode,n,null)).return=t,t.child=n)):(e.memoizedState,i?(a=Yi(e,t,a.children,a.fallback,n),i=t.child,o=e.child.memoizedState,i.memoizedState=null===o?{baseLanes:n}:{baseLanes:o.baseLanes|n},i.childLanes=e.childLanes&~n,t.memoizedState=Ki,a):(n=Gi(e,t,a.children,n),t.memoizedState=null,n))}function Qi(e,t,n,r){var a=e.mode,o=e.child;return t={mode:"hidden",children:t},0==(2&a)&&null!==o?(o.childLanes=0,o.pendingProps=t):o=Bu(t,a,0,null),n=Uu(n,a,r,null),o.return=e,n.return=e,o.sibling=n,e.child=o,n}function Gi(e,t,n,r){var a=e.child;return e=a.sibling,n=Fu(a,{mode:"visible",children:n}),0==(2&t.mode)&&(n.lanes=r),n.return=t,n.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=n}function Yi(e,t,n,r,a){var o=t.mode,i=e.child;e=i.sibling;var l={mode:"hidden",children:n};return 0==(2&o)&&t.child!==i?((n=t.child).childLanes=0,n.pendingProps=l,null!==(i=n.lastEffect)?(t.firstEffect=n.firstEffect,t.lastEffect=i,i.nextEffect=null):t.firstEffect=t.lastEffect=null):n=Fu(i,l),null!==e?r=Fu(e,r):(r=Uu(r,o,a,null)).flags|=2,r.return=t,n.return=t,n.sibling=r,t.child=n,r}function Xi(e,t){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),Ja(e.return,t)}function Zi(e,t,n,r,a,o){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:a,lastEffect:o}:(i.isBackwards=t,i.rendering=null,i.renderingStartTime=0,i.last=r,i.tail=n,i.tailMode=a,i.lastEffect=o)}function Ji(e,t,n){var r=t.pendingProps,a=r.revealOrder,o=r.tail;if(Ri(e,t,r.children,n),0!=(2&(r=Ro.current)))r=1&r|2,t.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Xi(e,n);else if(19===e.tag)Xi(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(ia(Ro,r),0==(2&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===Mo(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Zi(t,!1,a,n,o,t.lastEffect);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===Mo(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Zi(t,!0,n,null,o,t.lastEffect);break;case"together":Zi(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function el(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Ml|=t.lanes,0!=(n&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(i(153));if(null!==t.child){for(n=Fu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Fu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}return null}function tl(e,t){if(!Io)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function nl(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return da(t.type)&&pa(),null;case 3:return To(),oa(sa),oa(ua),Ho(),(r=t.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(Bo(t)?t.flags|=4:r.hydrate||(t.flags|=256)),null;case 5:No(t);var o=jo(Co.current);if(n=t.type,null!==e&&null!=t.stateNode)Vi(e,t,n,r),e.ref!==t.ref&&(t.flags|=128);else{if(!r){if(null===t.stateNode)throw Error(i(166));return null}if(e=jo(Eo.current),Bo(t)){r=t.stateNode,n=t.type;var l=t.memoizedProps;switch(r[qr]=t,r[Qr]=l,n){case"dialog":Er("cancel",r),Er("close",r);break;case"iframe":case"object":case"embed":Er("load",r);break;case"video":case"audio":for(e=0;e<wr.length;e++)Er(wr[e],r);break;case"source":Er("error",r);break;case"img":case"image":case"link":Er("error",r),Er("load",r);break;case"details":Er("toggle",r);break;case"input":ee(r,l),Er("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!l.multiple},Er("invalid",r);break;case"textarea":ue(r,l),Er("invalid",r)}for(var s in Oe(n,l),e=null,l)l.hasOwnProperty(s)&&(o=l[s],"children"===s?"string"==typeof o?r.textContent!==o&&(e=["children",o]):"number"==typeof o&&r.textContent!==""+o&&(e=["children",""+o]):u.hasOwnProperty(s)&&null!=o&&"onScroll"===s&&Er("scroll",r));switch(n){case"input":Y(r),re(r,l,!0);break;case"textarea":Y(r),ce(r);break;case"select":case"option":break;default:"function"==typeof l.onClick&&(r.onclick=zr)}r=e,t.updateQueue=r,null!==r&&(t.flags|=4)}else{switch(s=9===o.nodeType?o:o.ownerDocument,e===fe&&(e=pe(n)),e===fe?"script"===n?((e=s.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=s.createElement(n,{is:r.is}):(e=s.createElement(n),"select"===n&&(s=e,r.multiple?s.multiple=!0:r.size&&(s.size=r.size))):e=s.createElementNS(e,n),e[qr]=t,e[Qr]=r,Wi(e,t),t.stateNode=e,s=xe(n,r),n){case"dialog":Er("cancel",e),Er("close",e),o=r;break;case"iframe":case"object":case"embed":Er("load",e),o=r;break;case"video":case"audio":for(o=0;o<wr.length;o++)Er(wr[o],e);o=r;break;case"source":Er("error",e),o=r;break;case"img":case"image":case"link":Er("error",e),Er("load",e),o=r;break;case"details":Er("toggle",e),o=r;break;case"input":ee(e,r),o=J(e,r),Er("invalid",e);break;case"option":o=oe(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},o=a({},r,{value:void 0}),Er("invalid",e);break;case"textarea":ue(e,r),o=le(e,r),Er("invalid",e);break;default:o=r}Oe(n,o);var c=o;for(l in c)if(c.hasOwnProperty(l)){var f=c[l];"style"===l?we(e,f):"dangerouslySetInnerHTML"===l?null!=(f=f?f.__html:void 0)&&ge(e,f):"children"===l?"string"==typeof f?("textarea"!==n||""!==f)&&ye(e,f):"number"==typeof f&&ye(e,""+f):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(u.hasOwnProperty(l)?null!=f&&"onScroll"===l&&Er("scroll",e):null!=f&&k(e,l,f,s))}switch(n){case"input":Y(e),re(e,r,!1);break;case"textarea":Y(e),ce(e);break;case"option":null!=r.value&&e.setAttribute("value",""+Q(r.value));break;case"select":e.multiple=!!r.multiple,null!=(l=r.value)?ie(e,!!r.multiple,l,!1):null!=r.defaultValue&&ie(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof o.onClick&&(e.onclick=zr)}Dr(n,r)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)Hi(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(i(166));n=jo(Co.current),jo(Eo.current),Bo(t)?(r=t.stateNode,n=t.memoizedProps,r[qr]=t,r.nodeValue!==n&&(t.flags|=4)):((r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[qr]=t,t.stateNode=r)}return null;case 13:return oa(Ro),r=t.memoizedState,0!=(64&t.flags)?(t.lanes=n,t):(r=null!==r,n=!1,null===e?void 0!==t.memoizedProps.fallback&&Bo(t):n=null!==e.memoizedState,r&&!n&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Ro.current)?0===Ll&&(Ll=3):(0!==Ll&&3!==Ll||(Ll=4),null===_l||0==(134217727&Ml)&&0==(134217727&zl)||fu(_l,jl))),(r||n)&&(t.flags|=4),null);case 4:return To(),null===e&&Cr(t.stateNode.containerInfo),null;case 10:return Za(t),null;case 17:return da(t.type)&&pa(),null;case 19:if(oa(Ro),null===(r=t.memoizedState))return null;if(l=0!=(64&t.flags),null===(s=r.rendering))if(l)tl(r,!1);else{if(0!==Ll||null!==e&&0!=(64&e.flags))for(e=t.child;null!==e;){if(null!==(s=Mo(e))){for(t.flags|=64,tl(r,!1),null!==(l=s.updateQueue)&&(t.updateQueue=l,t.flags|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=n,n=t.child;null!==n;)e=r,(l=n).flags&=2,l.nextEffect=null,l.firstEffect=null,l.lastEffect=null,null===(s=l.alternate)?(l.childLanes=0,l.lanes=e,l.child=null,l.memoizedProps=null,l.memoizedState=null,l.updateQueue=null,l.dependencies=null,l.stateNode=null):(l.childLanes=s.childLanes,l.lanes=s.lanes,l.child=s.child,l.memoizedProps=s.memoizedProps,l.memoizedState=s.memoizedState,l.updateQueue=s.updateQueue,l.type=s.type,e=s.dependencies,l.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return ia(Ro,1&Ro.current|2),t.child}e=e.sibling}null!==r.tail&&Da()>Fl&&(t.flags|=64,l=!0,tl(r,!1),t.lanes=33554432)}else{if(!l)if(null!==(e=Mo(s))){if(t.flags|=64,l=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),tl(r,!0),null===r.tail&&"hidden"===r.tailMode&&!s.alternate&&!Io)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Da()-r.renderingStartTime>Fl&&1073741824!==n&&(t.flags|=64,l=!0,tl(r,!1),t.lanes=33554432);r.isBackwards?(s.sibling=t.child,t.child=s):(null!==(n=r.last)?n.sibling=s:t.child=s,r.last=s)}return null!==r.tail?(n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Da(),n.sibling=null,t=Ro.current,ia(Ro,l?1&t|2:1&t),n):null;case 23:case 24:return gu(),null!==e&&null!==e.memoizedState!=(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(t.flags|=4),null}throw Error(i(156,t.tag))}function rl(e){switch(e.tag){case 1:da(e.type)&&pa();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(To(),oa(sa),oa(ua),Ho(),0!=(64&(t=e.flags)))throw Error(i(285));return e.flags=-4097&t|64,e;case 5:return No(e),null;case 13:return oa(Ro),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return oa(Ro),null;case 4:return To(),null;case 10:return Za(e),null;case 23:case 24:return gu(),null;default:return null}}function al(e,t){try{var n="",r=t;do{n+=K(r),r=r.return}while(r);var a=n}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:a}}function ol(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}Wi=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Vi=function(e,t,n,r){var o=e.memoizedProps;if(o!==r){e=t.stateNode,jo(Eo.current);var i,l=null;switch(n){case"input":o=J(e,o),r=J(e,r),l=[];break;case"option":o=oe(e,o),r=oe(e,r),l=[];break;case"select":o=a({},o,{value:void 0}),r=a({},r,{value:void 0}),l=[];break;case"textarea":o=le(e,o),r=le(e,r),l=[];break;default:"function"!=typeof o.onClick&&"function"==typeof r.onClick&&(e.onclick=zr)}for(f in Oe(n,r),n=null,o)if(!r.hasOwnProperty(f)&&o.hasOwnProperty(f)&&null!=o[f])if("style"===f){var s=o[f];for(i in s)s.hasOwnProperty(i)&&(n||(n={}),n[i]="")}else"dangerouslySetInnerHTML"!==f&&"children"!==f&&"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(u.hasOwnProperty(f)?l||(l=[]):(l=l||[]).push(f,null));for(f in r){var c=r[f];if(s=null!=o?o[f]:void 0,r.hasOwnProperty(f)&&c!==s&&(null!=c||null!=s))if("style"===f)if(s){for(i in s)!s.hasOwnProperty(i)||c&&c.hasOwnProperty(i)||(n||(n={}),n[i]="");for(i in c)c.hasOwnProperty(i)&&s[i]!==c[i]&&(n||(n={}),n[i]=c[i])}else n||(l||(l=[]),l.push(f,n)),n=c;else"dangerouslySetInnerHTML"===f?(c=c?c.__html:void 0,s=s?s.__html:void 0,null!=c&&s!==c&&(l=l||[]).push(f,c)):"children"===f?"string"!=typeof c&&"number"!=typeof c||(l=l||[]).push(f,""+c):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&(u.hasOwnProperty(f)?(null!=c&&"onScroll"===f&&Er("scroll",e),l||s===c||(l=[])):"object"==typeof c&&null!==c&&c.$$typeof===z?c.toString():(l=l||[]).push(f,c))}n&&(l=l||[]).push("style",n);var f=l;(t.updateQueue=f)&&(t.flags|=4)}},Hi=function(e,t,n,r){n!==r&&(t.flags|=4)};var il="function"==typeof WeakMap?WeakMap:Map;function ll(e,t,n){(n=oo(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Wl||(Wl=!0,Vl=r),ol(0,t)},n}function ul(e,t,n){(n=oo(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=t.value;n.payload=function(){return ol(0,t),r(a)}}var o=e.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Hl?Hl=new Set([this]):Hl.add(this),ol(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}var sl="function"==typeof WeakSet?WeakSet:Set;function cl(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Ru(e,t)}else t.current=null}function fl(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.flags&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Ka(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&Br(t.stateNode.containerInfo));case 5:case 6:case 4:case 17:return}throw Error(i(163))}function dl(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3==(3&e.tag)){var r=e.create;e.destroy=r()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var a=e;r=a.next,0!=(4&(a=a.tag))&&0!=(1&a)&&(Tu(n,e),Pu(n,e)),e=r}while(e!==t)}return;case 1:return e=n.stateNode,4&n.flags&&(null===t?e.componentDidMount():(r=n.elementType===n.type?t.memoizedProps:Ka(n.type,t.memoizedProps),e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=n.updateQueue)&&so(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}so(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.flags&&Dr(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&wt(n)))));case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(i(163))}function pl(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)"function"==typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=n.stateNode;var a=n.memoizedProps.style;a=null!=a&&a.hasOwnProperty("display")?a.display:null,r.style.display=ke("display",a)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else if((23!==n.tag&&24!==n.tag||null===n.memoizedState||n===e)&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function hl(e,t){if(va&&"function"==typeof va.onCommitFiberUnmount)try{va.onCommitFiberUnmount(ba,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var n=e=e.next;do{var r=n,a=r.destroy;if(r=r.tag,void 0!==a)if(0!=(4&r))Tu(t,n);else{r=t;try{a()}catch(e){Ru(r,e)}}n=n.next}while(n!==e)}break;case 1:if(cl(t),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){Ru(t,e)}break;case 5:cl(t);break;case 4:bl(e,t)}}function ml(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function gl(e){return 5===e.tag||3===e.tag||4===e.tag}function yl(e){e:{for(var t=e.return;null!==t;){if(gl(t))break e;t=t.return}throw Error(i(160))}var n=t;switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(i(161))}16&n.flags&&(ye(t,""),n.flags&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||gl(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.flags)){n=n.stateNode;break e}}r?function e(t,n,r){var a=t.tag,o=5===a||6===a;if(o)t=o?t.stateNode:t.stateNode.instance,n?8===r.nodeType?r.parentNode.insertBefore(t,n):r.insertBefore(t,n):(8===r.nodeType?(n=r.parentNode).insertBefore(t,r):(n=r).appendChild(t),null!==(r=r._reactRootContainer)&&void 0!==r||null!==n.onclick||(n.onclick=zr));else if(4!==a&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t):function e(t,n,r){var a=t.tag,o=5===a||6===a;if(o)t=o?t.stateNode:t.stateNode.instance,n?r.insertBefore(t,n):r.appendChild(t);else if(4!==a&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t)}function bl(e,t){for(var n,r,a=t,o=!1;;){if(!o){o=a.return;e:for(;;){if(null===o)throw Error(i(160));switch(n=o.stateNode,o.tag){case 5:r=!1;break e;case 3:case 4:n=n.containerInfo,r=!0;break e}o=o.return}o=!0}if(5===a.tag||6===a.tag){e:for(var l=e,u=a,s=u;;)if(hl(l,s),null!==s.child&&4!==s.tag)s.child.return=s,s=s.child;else{if(s===u)break e;for(;null===s.sibling;){if(null===s.return||s.return===u)break e;s=s.return}s.sibling.return=s.return,s=s.sibling}r?(l=n,u=a.stateNode,8===l.nodeType?l.parentNode.removeChild(u):l.removeChild(u)):n.removeChild(a.stateNode)}else if(4===a.tag){if(null!==a.child){n=a.stateNode.containerInfo,r=!0,a.child.return=a,a=a.child;continue}}else if(hl(e,a),null!==a.child){a.child.return=a,a=a.child;continue}if(a===t)break;for(;null===a.sibling;){if(null===a.return||a.return===t)return;4===(a=a.return).tag&&(o=!1)}a.sibling.return=a.return,a=a.sibling}}function vl(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var r=n=n.next;do{3==(3&r.tag)&&(e=r.destroy,r.destroy=void 0,void 0!==e&&e()),r=r.next}while(r!==n)}return;case 1:return;case 5:if(null!=(n=t.stateNode)){r=t.memoizedProps;var a=null!==e?e.memoizedProps:r;e=t.type;var o=t.updateQueue;if(t.updateQueue=null,null!==o){for(n[Qr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&te(n,r),xe(e,a),t=xe(e,r),a=0;a<o.length;a+=2){var l=o[a],u=o[a+1];"style"===l?we(n,u):"dangerouslySetInnerHTML"===l?ge(n,u):"children"===l?ye(n,u):k(n,l,u,t)}switch(e){case"input":ne(n,r);break;case"textarea":se(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(o=r.value)?ie(n,!!r.multiple,o,!1):e!==!!r.multiple&&(null!=r.defaultValue?ie(n,!!r.multiple,r.defaultValue,!0):ie(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(i(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((n=t.stateNode).hydrate&&(n.hydrate=!1,wt(n.containerInfo)));case 12:return;case 13:return null!==t.memoizedState&&(Dl=Da(),pl(t.child,!0)),void kl(t);case 19:return void kl(t);case 17:return;case 23:case 24:return void pl(t,null!==t.memoizedState)}throw Error(i(163))}function kl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new sl),t.forEach((function(t){var r=zu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function wl(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&(null!==(t=t.memoizedState)&&null===t.dehydrated)}var Sl=Math.ceil,Ol=w.ReactCurrentDispatcher,xl=w.ReactCurrentOwner,El=0,_l=null,Cl=null,jl=0,Pl=0,Tl=aa(0),Ll=0,Nl=null,Rl=0,Ml=0,zl=0,Al=0,Il=null,Dl=0,Fl=1/0;function $l(){Fl=Da()+500}var Ul,Bl=null,Wl=!1,Vl=null,Hl=null,Kl=!1,ql=null,Ql=90,Gl=[],Yl=[],Xl=null,Zl=0,Jl=null,eu=-1,tu=0,nu=0,ru=null,au=!1;function ou(){return 0!=(48&El)?Da():-1!==eu?eu:eu=Da()}function iu(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===Fa()?1:2;if(0===tu&&(tu=Rl),0!==Ha.transition){0!==nu&&(nu=null!==Il?Il.pendingLanes:0),e=tu;var t=4186112&~nu;return 0===(t&=-t)&&(0===(t=(e=4186112&~e)&-e)&&(t=8192)),t}return e=Fa(),0!=(4&El)&&98===e?e=Ft(12,tu):e=Ft(e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),tu),e}function lu(e,t,n){if(50<Zl)throw Zl=0,Jl=null,Error(i(185));if(null===(e=uu(e,t)))return null;Bt(e,t,n),e===_l&&(zl|=t,4===Ll&&fu(e,jl));var r=Fa();1===t?0!=(8&El)&&0==(48&El)?du(e):(su(e,n),0===El&&($l(),Wa())):(0==(4&El)||98!==r&&99!==r||(null===Xl?Xl=new Set([e]):Xl.add(e)),su(e,n)),Il=e}function uu(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function su(e,t){for(var n=e.callbackNode,r=e.suspendedLanes,a=e.pingedLanes,o=e.expirationTimes,l=e.pendingLanes;0<l;){var u=31-Wt(l),s=1<<u,c=o[u];if(-1===c){if(0==(s&r)||0!=(s&a)){c=t,At(s);var f=zt;o[u]=10<=f?c+250:6<=f?c+5e3:-1}}else c<=t&&(e.expiredLanes|=s);l&=~s}if(r=It(e,e===_l?jl:0),t=zt,0===r)null!==n&&(n!==Na&&Sa(n),e.callbackNode=null,e.callbackPriority=0);else{if(null!==n){if(e.callbackPriority===t)return;n!==Na&&Sa(n)}15===t?(n=du.bind(null,e),null===Ma?(Ma=[n],za=wa(Ca,Va)):Ma.push(n),n=Na):14===t?n=Ba(99,du.bind(null,e)):n=Ba(n=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(i(358,e))}}(t),cu.bind(null,e)),e.callbackPriority=t,e.callbackNode=n}}function cu(e){if(eu=-1,nu=tu=0,0!=(48&El))throw Error(i(327));var t=e.callbackNode;if(ju()&&e.callbackNode!==t)return null;var n=It(e,e===_l?jl:0);if(0===n)return null;var r=n,a=El;El|=16;var o=vu();for(_l===e&&jl===r||($l(),yu(e,r));;)try{Su();break}catch(t){bu(e,t)}if(Xa(),Ol.current=o,El=a,null!==Cl?r=0:(_l=null,jl=0,r=Ll),0!=(Rl&zl))yu(e,0);else if(0!==r){if(2===r&&(El|=64,e.hydrate&&(e.hydrate=!1,Br(e.containerInfo)),0!==(n=Dt(e))&&(r=ku(e,n))),1===r)throw t=Nl,yu(e,0),fu(e,n),su(e,Da()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=n,r){case 0:case 1:throw Error(i(345));case 2:Eu(e);break;case 3:if(fu(e,n),(62914560&n)===n&&10<(r=Dl+500-Da())){if(0!==It(e,0))break;if(((a=e.suspendedLanes)&n)!==n){ou(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=$r(Eu.bind(null,e),r);break}Eu(e);break;case 4:if(fu(e,n),(4186112&n)===n)break;for(r=e.eventTimes,a=-1;0<n;){var l=31-Wt(n);o=1<<l,(l=r[l])>a&&(a=l),n&=~o}if(n=a,10<(n=(120>(n=Da()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*Sl(n/1960))-n)){e.timeoutHandle=$r(Eu.bind(null,e),n);break}Eu(e);break;case 5:Eu(e);break;default:throw Error(i(329))}}return su(e,Da()),e.callbackNode===t?cu.bind(null,e):null}function fu(e,t){for(t&=~Al,t&=~zl,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-Wt(t),r=1<<n;e[n]=-1,t&=~r}}function du(e){if(0!=(48&El))throw Error(i(327));if(ju(),e===_l&&0!=(e.expiredLanes&jl)){var t=jl,n=ku(e,t);0!=(Rl&zl)&&(n=ku(e,t=It(e,t)))}else n=ku(e,t=It(e,0));if(0!==e.tag&&2===n&&(El|=64,e.hydrate&&(e.hydrate=!1,Br(e.containerInfo)),0!==(t=Dt(e))&&(n=ku(e,t))),1===n)throw n=Nl,yu(e,0),fu(e,t),su(e,Da()),n;return e.finishedWork=e.current.alternate,e.finishedLanes=t,Eu(e),su(e,Da()),null}function pu(e,t){var n=El;El|=1;try{return e(t)}finally{0===(El=n)&&($l(),Wa())}}function hu(e,t){var n=El;El&=-2,El|=8;try{return e(t)}finally{0===(El=n)&&($l(),Wa())}}function mu(e,t){ia(Tl,Pl),Pl|=t,Rl|=t}function gu(){Pl=Tl.current,oa(Tl)}function yu(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,Ur(n)),null!==Cl)for(n=Cl.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&pa();break;case 3:To(),oa(sa),oa(ua),Ho();break;case 5:No(r);break;case 4:To();break;case 13:case 19:oa(Ro);break;case 10:Za(r);break;case 23:case 24:gu()}n=n.return}_l=e,Cl=Fu(e.current,null),jl=Pl=Rl=t,Ll=0,Nl=null,Al=zl=Ml=0}function bu(e,t){for(;;){var n=Cl;try{if(Xa(),Ko.current=Ci,Zo){for(var r=Go.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}Zo=!1}if(Qo=0,Xo=Yo=Go=null,Jo=!1,xl.current=null,null===n||null===n.return){Ll=1,Nl=t,Cl=null;break}e:{var o=e,i=n.return,l=n,u=t;if(t=jl,l.flags|=2048,l.firstEffect=l.lastEffect=null,null!==u&&"object"==typeof u&&"function"==typeof u.then){var s=u;if(0==(2&l.mode)){var c=l.alternate;c?(l.updateQueue=c.updateQueue,l.memoizedState=c.memoizedState,l.lanes=c.lanes):(l.updateQueue=null,l.memoizedState=null)}var f=0!=(1&Ro.current),d=i;do{var p;if(p=13===d.tag){var h=d.memoizedState;if(null!==h)p=null!==h.dehydrated;else{var m=d.memoizedProps;p=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!f)}}if(p){var g=d.updateQueue;if(null===g){var y=new Set;y.add(s),d.updateQueue=y}else g.add(s);if(0==(2&d.mode)){if(d.flags|=64,l.flags|=16384,l.flags&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var b=oo(-1,1);b.tag=2,io(l,b)}l.lanes|=1;break e}u=void 0,l=t;var v=o.pingCache;if(null===v?(v=o.pingCache=new il,u=new Set,v.set(s,u)):void 0===(u=v.get(s))&&(u=new Set,v.set(s,u)),!u.has(l)){u.add(l);var k=Mu.bind(null,o,s,l);s.then(k,k)}d.flags|=4096,d.lanes=t;break e}d=d.return}while(null!==d);u=Error((q(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==Ll&&(Ll=2),u=al(u,l),d=i;do{switch(d.tag){case 3:o=u,d.flags|=4096,t&=-t,d.lanes|=t,lo(d,ll(0,o,t));break e;case 1:o=u;var w=d.type,S=d.stateNode;if(0==(64&d.flags)&&("function"==typeof w.getDerivedStateFromError||null!==S&&"function"==typeof S.componentDidCatch&&(null===Hl||!Hl.has(S)))){d.flags|=4096,t&=-t,d.lanes|=t,lo(d,ul(d,o,t));break e}}d=d.return}while(null!==d)}xu(n)}catch(e){t=e,Cl===n&&null!==n&&(Cl=n=n.return);continue}break}}function vu(){var e=Ol.current;return Ol.current=Ci,null===e?Ci:e}function ku(e,t){var n=El;El|=16;var r=vu();for(_l===e&&jl===t||yu(e,t);;)try{wu();break}catch(t){bu(e,t)}if(Xa(),El=n,Ol.current=r,null!==Cl)throw Error(i(261));return _l=null,jl=0,Ll}function wu(){for(;null!==Cl;)Ou(Cl)}function Su(){for(;null!==Cl&&!Oa();)Ou(Cl)}function Ou(e){var t=Ul(e.alternate,e,Pl);e.memoizedProps=e.pendingProps,null===t?xu(e):Cl=t,xl.current=null}function xu(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(2048&t.flags)){if(null!==(n=nl(n,t,Pl)))return void(Cl=n);if(24!==(n=t).tag&&23!==n.tag||null===n.memoizedState||0!=(1073741824&Pl)||0==(4&n.mode)){for(var r=0,a=n.child;null!==a;)r|=a.lanes|a.childLanes,a=a.sibling;n.childLanes=r}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(n=rl(t)))return n.flags&=2047,void(Cl=n);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(Cl=t);Cl=t=e}while(null!==t);0===Ll&&(Ll=5)}function Eu(e){var t=Fa();return Ua(99,_u.bind(null,e,t)),null}function _u(e,t){do{ju()}while(null!==ql);if(0!=(48&El))throw Error(i(327));var n=e.finishedWork;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(i(177));e.callbackNode=null;var r=n.lanes|n.childLanes,a=r,o=e.pendingLanes&~a;e.pendingLanes=a,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=a,e.mutableReadLanes&=a,e.entangledLanes&=a,a=e.entanglements;for(var l=e.eventTimes,u=e.expirationTimes;0<o;){var s=31-Wt(o),c=1<<s;a[s]=0,l[s]=-1,u[s]=-1,o&=~c}if(null!==Xl&&0==(24&r)&&Xl.has(e)&&Xl.delete(e),e===_l&&(Cl=_l=null,jl=0),1<n.flags?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){if(a=El,El|=32,xl.current=null,Ar=Qt,dr(l=fr())){if("selectionStart"in l)u={start:l.selectionStart,end:l.selectionEnd};else e:if(u=(u=l.ownerDocument)&&u.defaultView||window,(c=u.getSelection&&u.getSelection())&&0!==c.rangeCount){u=c.anchorNode,o=c.anchorOffset,s=c.focusNode,c=c.focusOffset;try{u.nodeType,s.nodeType}catch(e){u=null;break e}var f=0,d=-1,p=-1,h=0,m=0,g=l,y=null;t:for(;;){for(var b;g!==u||0!==o&&3!==g.nodeType||(d=f+o),g!==s||0!==c&&3!==g.nodeType||(p=f+c),3===g.nodeType&&(f+=g.nodeValue.length),null!==(b=g.firstChild);)y=g,g=b;for(;;){if(g===l)break t;if(y===u&&++h===o&&(d=f),y===s&&++m===c&&(p=f),null!==(b=g.nextSibling))break;y=(g=y).parentNode}g=b}u=-1===d||-1===p?null:{start:d,end:p}}else u=null;u=u||{start:0,end:0}}else u=null;Ir={focusedElem:l,selectionRange:u},Qt=!1,ru=null,au=!1,Bl=r;do{try{Cu()}catch(e){if(null===Bl)throw Error(i(330));Ru(Bl,e),Bl=Bl.nextEffect}}while(null!==Bl);ru=null,Bl=r;do{try{for(l=e;null!==Bl;){var v=Bl.flags;if(16&v&&ye(Bl.stateNode,""),128&v){var k=Bl.alternate;if(null!==k){var w=k.ref;null!==w&&("function"==typeof w?w(null):w.current=null)}}switch(1038&v){case 2:yl(Bl),Bl.flags&=-3;break;case 6:yl(Bl),Bl.flags&=-3,vl(Bl.alternate,Bl);break;case 1024:Bl.flags&=-1025;break;case 1028:Bl.flags&=-1025,vl(Bl.alternate,Bl);break;case 4:vl(Bl.alternate,Bl);break;case 8:bl(l,u=Bl);var S=u.alternate;ml(u),null!==S&&ml(S)}Bl=Bl.nextEffect}}catch(e){if(null===Bl)throw Error(i(330));Ru(Bl,e),Bl=Bl.nextEffect}}while(null!==Bl);if(w=Ir,k=fr(),v=w.focusedElem,l=w.selectionRange,k!==v&&v&&v.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(v.ownerDocument.documentElement,v)){null!==l&&dr(v)&&(k=l.start,void 0===(w=l.end)&&(w=k),"selectionStart"in v?(v.selectionStart=k,v.selectionEnd=Math.min(w,v.value.length)):(w=(k=v.ownerDocument||document)&&k.defaultView||window).getSelection&&(w=w.getSelection(),u=v.textContent.length,S=Math.min(l.start,u),l=void 0===l.end?S:Math.min(l.end,u),!w.extend&&S>l&&(u=l,l=S,S=u),u=cr(v,S),o=cr(v,l),u&&o&&(1!==w.rangeCount||w.anchorNode!==u.node||w.anchorOffset!==u.offset||w.focusNode!==o.node||w.focusOffset!==o.offset)&&((k=k.createRange()).setStart(u.node,u.offset),w.removeAllRanges(),S>l?(w.addRange(k),w.extend(o.node,o.offset)):(k.setEnd(o.node,o.offset),w.addRange(k))))),k=[];for(w=v;w=w.parentNode;)1===w.nodeType&&k.push({element:w,left:w.scrollLeft,top:w.scrollTop});for("function"==typeof v.focus&&v.focus(),v=0;v<k.length;v++)(w=k[v]).element.scrollLeft=w.left,w.element.scrollTop=w.top}Qt=!!Ar,Ir=Ar=null,e.current=n,Bl=r;do{try{for(v=e;null!==Bl;){var O=Bl.flags;if(36&O&&dl(v,Bl.alternate,Bl),128&O){k=void 0;var x=Bl.ref;if(null!==x){var E=Bl.stateNode;switch(Bl.tag){case 5:k=E;break;default:k=E}"function"==typeof x?x(k):x.current=k}}Bl=Bl.nextEffect}}catch(e){if(null===Bl)throw Error(i(330));Ru(Bl,e),Bl=Bl.nextEffect}}while(null!==Bl);Bl=null,Ra(),El=a}else e.current=n;if(Kl)Kl=!1,ql=e,Ql=t;else for(Bl=r;null!==Bl;)t=Bl.nextEffect,Bl.nextEffect=null,8&Bl.flags&&((O=Bl).sibling=null,O.stateNode=null),Bl=t;if(0===(r=e.pendingLanes)&&(Hl=null),1===r?e===Jl?Zl++:(Zl=0,Jl=e):Zl=0,n=n.stateNode,va&&"function"==typeof va.onCommitFiberRoot)try{va.onCommitFiberRoot(ba,n,void 0,64==(64&n.current.flags))}catch(e){}if(su(e,Da()),Wl)throw Wl=!1,e=Vl,Vl=null,e;return 0!=(8&El)||Wa(),null}function Cu(){for(;null!==Bl;){var e=Bl.alternate;au||null===ru||(0!=(8&Bl.flags)?Je(Bl,ru)&&(au=!0):13===Bl.tag&&wl(e,Bl)&&Je(Bl,ru)&&(au=!0));var t=Bl.flags;0!=(256&t)&&fl(e,Bl),0==(512&t)||Kl||(Kl=!0,Ba(97,(function(){return ju(),null}))),Bl=Bl.nextEffect}}function ju(){if(90!==Ql){var e=97<Ql?97:Ql;return Ql=90,Ua(e,Lu)}return!1}function Pu(e,t){Gl.push(t,e),Kl||(Kl=!0,Ba(97,(function(){return ju(),null})))}function Tu(e,t){Yl.push(t,e),Kl||(Kl=!0,Ba(97,(function(){return ju(),null})))}function Lu(){if(null===ql)return!1;var e=ql;if(ql=null,0!=(48&El))throw Error(i(331));var t=El;El|=32;var n=Yl;Yl=[];for(var r=0;r<n.length;r+=2){var a=n[r],o=n[r+1],l=a.destroy;if(a.destroy=void 0,"function"==typeof l)try{l()}catch(e){if(null===o)throw Error(i(330));Ru(o,e)}}for(n=Gl,Gl=[],r=0;r<n.length;r+=2){a=n[r],o=n[r+1];try{var u=a.create;a.destroy=u()}catch(e){if(null===o)throw Error(i(330));Ru(o,e)}}for(u=e.current.firstEffect;null!==u;)e=u.nextEffect,u.nextEffect=null,8&u.flags&&(u.sibling=null,u.stateNode=null),u=e;return El=t,Wa(),!0}function Nu(e,t,n){io(e,t=ll(0,t=al(n,t),1)),t=ou(),null!==(e=uu(e,1))&&(Bt(e,1,t),su(e,t))}function Ru(e,t){if(3===e.tag)Nu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Nu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Hl||!Hl.has(r))){var a=ul(n,e=al(t,e),1);if(io(n,a),a=ou(),null!==(n=uu(n,1)))Bt(n,1,a),su(n,a);else if("function"==typeof r.componentDidCatch&&(null===Hl||!Hl.has(r)))try{r.componentDidCatch(t,e)}catch(e){}break}}n=n.return}}function Mu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=ou(),e.pingedLanes|=e.suspendedLanes&n,_l===e&&(jl&n)===n&&(4===Ll||3===Ll&&(62914560&jl)===jl&&500>Da()-Dl?yu(e,0):Al|=n),su(e,t)}function zu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0===(t=0)&&(0==(2&(t=e.mode))?t=1:0==(4&t)?t=99===Fa()?1:2:(0===tu&&(tu=Rl),0===(t=$t(62914560&~tu))&&(t=4194304))),n=ou(),null!==(e=uu(e,t))&&(Bt(e,t,n),su(e,n))}function Au(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Iu(e,t,n,r){return new Au(e,t,n,r)}function Du(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Fu(e,t){var n=e.alternate;return null===n?((n=Iu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function $u(e,t,n,r,a,o){var l=2;if(r=e,"function"==typeof e)Du(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case x:return Uu(n.children,a,o,t);case A:l=8,a|=16;break;case E:l=8,a|=1;break;case _:return(e=Iu(12,n,t,8|a)).elementType=_,e.type=_,e.lanes=o,e;case T:return(e=Iu(13,n,t,a)).type=T,e.elementType=T,e.lanes=o,e;case L:return(e=Iu(19,n,t,a)).elementType=L,e.lanes=o,e;case I:return Bu(n,a,o,t);case D:return(e=Iu(24,n,t,a)).elementType=D,e.lanes=o,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case C:l=10;break e;case j:l=9;break e;case P:l=11;break e;case N:l=14;break e;case R:l=16,r=null;break e;case M:l=22;break e}throw Error(i(130,null==e?e:typeof e,""))}return(t=Iu(l,n,t,a)).elementType=e,t.type=r,t.lanes=o,t}function Uu(e,t,n,r){return(e=Iu(7,e,r,t)).lanes=n,e}function Bu(e,t,n,r){return(e=Iu(23,e,r,t)).elementType=I,e.lanes=n,e}function Wu(e,t,n){return(e=Iu(6,e,null,t)).lanes=n,e}function Vu(e,t,n){return(t=Iu(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Hu(e,t,n){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Ut(0),this.expirationTimes=Ut(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Ut(0),this.mutableSourceEagerHydrationData=null}function Ku(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:O,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function qu(e,t,n,r){var a=t.current,o=ou(),l=iu(a);e:if(n){t:{if(Ge(n=n._reactInternals)!==n||1!==n.tag)throw Error(i(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(da(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(i(171))}if(1===n.tag){var s=n.type;if(da(s)){n=ma(n,s,u);break e}}n=u}else n=la;return null===t.context?t.context=n:t.pendingContext=n,(t=oo(o,l)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),io(a,t),lu(a,l,o),l}function Qu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Gu(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Yu(e,t){Gu(e,t),(e=e.alternate)&&Gu(e,t)}function Xu(e,t,n){var r=null!=n&&null!=n.hydrationOptions&&n.hydrationOptions.mutableSources||null;if(n=new Hu(e,t,null!=n&&!0===n.hydrate),t=Iu(3,null,null,2===t?7:1===t?3:0),n.current=t,t.stateNode=n,ro(t),e[Gr]=n.current,Cr(8===e.nodeType?e.parentNode:e),r)for(e=0;e<r.length;e++){var a=(t=r[e])._getVersion;a=a(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,a]:n.mutableSourceEagerHydrationData.push(t,a)}this._internalRoot=n}function Zu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Ju(e,t,n,r,a){var o=n._reactRootContainer;if(o){var i=o._internalRoot;if("function"==typeof a){var l=a;a=function(){var e=Qu(i);l.call(e)}}qu(t,i,e,a)}else{if(o=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Xu(e,0,t?{hydrate:!0}:void 0)}(n,r),i=o._internalRoot,"function"==typeof a){var u=a;a=function(){var e=Qu(i);u.call(e)}}hu((function(){qu(t,i,e,a)}))}return Qu(i)}function es(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Zu(t))throw Error(i(200));return Ku(e,t,null,n)}Ul=function(e,t,n){var r=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||sa.current)Ni=!0;else{if(0==(n&r)){switch(Ni=!1,t.tag){case 3:Bi(t),Wo();break;case 5:Lo(t);break;case 1:da(t.type)&&ga(t);break;case 4:Po(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value;var a=t.type._context;ia(qa,a._currentValue),a._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!=(n&t.child.childLanes)?qi(e,t,n):(ia(Ro,1&Ro.current),null!==(t=el(e,t,n))?t.sibling:null);ia(Ro,1&Ro.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(64&e.flags)){if(r)return Ji(e,t,n);t.flags|=64}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),ia(Ro,Ro.current),r)break;return null;case 23:case 24:return t.lanes=0,Ii(e,t,n)}return el(e,t,n)}Ni=0!=(16384&e.flags)}else Ni=!1;switch(t.lanes=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=fa(t,ua.current),eo(t,n),a=ni(null,t,r,e,a,n),t.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,da(r)){var o=!0;ga(t)}else o=!1;t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,ro(t);var l=r.getDerivedStateFromProps;"function"==typeof l&&fo(t,r,l,e),a.updater=po,t.stateNode=a,a._reactInternals=t,yo(t,r,e,n),t=Ui(null,t,r,!0,o,n)}else t.tag=0,Ri(null,t,a,n),t=t.child;return t;case 16:a=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=(o=a._init)(a._payload),t.type=a,o=t.tag=function(e){if("function"==typeof e)return Du(e)?1:0;if(null!=e){if((e=e.$$typeof)===P)return 11;if(e===N)return 14}return 2}(a),e=Ka(a,e),o){case 0:t=Fi(null,t,a,e,n);break e;case 1:t=$i(null,t,a,e,n);break e;case 11:t=Mi(null,t,a,e,n);break e;case 14:t=zi(null,t,a,Ka(a.type,e),r,n);break e}throw Error(i(306,a,""))}return t;case 0:return r=t.type,a=t.pendingProps,Fi(e,t,r,a=t.elementType===r?a:Ka(r,a),n);case 1:return r=t.type,a=t.pendingProps,$i(e,t,r,a=t.elementType===r?a:Ka(r,a),n);case 3:if(Bi(t),r=t.updateQueue,null===e||null===r)throw Error(i(282));if(r=t.pendingProps,a=null!==(a=t.memoizedState)?a.element:null,ao(e,t),uo(t,r,null,n),(r=t.memoizedState.element)===a)Wo(),t=el(e,t,n);else{if((o=(a=t.stateNode).hydrate)&&(Ao=Wr(t.stateNode.containerInfo.firstChild),zo=t,o=Io=!0),o){if(null!=(e=a.mutableSourceEagerHydrationData))for(a=0;a<e.length;a+=2)(o=e[a])._workInProgressVersionPrimary=e[a+1],Vo.push(o);for(n=Oo(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|1024,n=n.sibling}else Ri(e,t,r,n),Wo();t=t.child}return t;case 5:return Lo(t),null===e&&$o(t),r=t.type,a=t.pendingProps,o=null!==e?e.memoizedProps:null,l=a.children,Fr(r,a)?l=null:null!==o&&Fr(r,o)&&(t.flags|=16),Di(e,t),Ri(e,t,l,n),t.child;case 6:return null===e&&$o(t),null;case 13:return qi(e,t,n);case 4:return Po(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=So(t,null,r,n):Ri(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,Mi(e,t,r,a=t.elementType===r?a:Ka(r,a),n);case 7:return Ri(e,t,t.pendingProps,n),t.child;case 8:case 12:return Ri(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,a=t.pendingProps,l=t.memoizedProps,o=a.value;var u=t.type._context;if(ia(qa,u._currentValue),u._currentValue=o,null!==l)if(u=l.value,0===(o=ir(u,o)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,o):1073741823))){if(l.children===a.children&&!sa.current){t=el(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var s=u.dependencies;if(null!==s){l=u.child;for(var c=s.firstContext;null!==c;){if(c.context===r&&0!=(c.observedBits&o)){1===u.tag&&((c=oo(-1,n&-n)).tag=2,io(u,c)),u.lanes|=n,null!==(c=u.alternate)&&(c.lanes|=n),Ja(u.return,n),s.lanes|=n;break}c=c.next}}else l=10===u.tag&&u.type===t.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===t){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}Ri(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=(o=t.pendingProps).children,eo(t,n),r=r(a=to(a,o.unstable_observedBits)),t.flags|=1,Ri(e,t,r,n),t.child;case 14:return o=Ka(a=t.type,t.pendingProps),zi(e,t,a,o=Ka(a.type,o),r,n);case 15:return Ai(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:Ka(r,a),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,da(r)?(e=!0,ga(t)):e=!1,eo(t,n),mo(t,r,a),yo(t,r,a,n),Ui(null,t,r,!0,e,n);case 19:return Ji(e,t,n);case 23:case 24:return Ii(e,t,n)}throw Error(i(156,t.tag))},Xu.prototype.render=function(e){qu(e,this._internalRoot,null,null)},Xu.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;qu(null,e,null,(function(){t[Gr]=null}))},et=function(e){13===e.tag&&(lu(e,4,ou()),Yu(e,4))},tt=function(e){13===e.tag&&(lu(e,67108864,ou()),Yu(e,67108864))},nt=function(e){if(13===e.tag){var t=ou(),n=iu(e);lu(e,n,t),Yu(e,n)}},rt=function(e,t){return t()},_e=function(e,t,n){switch(t){case"input":if(ne(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=ea(r);if(!a)throw Error(i(90));X(r),ne(r,a)}}}break;case"textarea":se(e,n);break;case"select":null!=(t=n.value)&&ie(e,!!n.multiple,t,!1)}},Ne=pu,Re=function(e,t,n,r,a){var o=El;El|=4;try{return Ua(98,e.bind(null,t,n,r,a))}finally{0===(El=o)&&($l(),Wa())}},Me=function(){0==(49&El)&&(function(){if(null!==Xl){var e=Xl;Xl=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,su(e,Da())}))}Wa()}(),ju())},ze=function(e,t){var n=El;El|=2;try{return e(t)}finally{0===(El=n)&&($l(),Wa())}};var ts={Events:[Zr,Jr,ea,Te,Le,ju,{current:!1}]},ns={findFiberByHostInstance:Xr,bundleType:0,version:"17.0.2",rendererPackageName:"react-dom"},rs={bundleType:ns.bundleType,version:ns.version,rendererPackageName:ns.rendererPackageName,rendererConfig:ns.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:w.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Ze(e))?null:e.stateNode},findFiberByHostInstance:ns.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var as=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!as.isDisabled&&as.supportsFiber)try{ba=as.inject(rs),va=as}catch(e){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ts,t.createPortal=es,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(i(188));throw Error(i(268,Object.keys(e)))}return e=null===(e=Ze(t))?null:e.stateNode},t.flushSync=function(e,t){var n=El;if(0!=(48&n))return e(t);El|=1;try{if(e)return Ua(99,e.bind(null,t))}finally{El=n,Wa()}},t.hydrate=function(e,t,n){if(!Zu(t))throw Error(i(200));return Ju(null,e,t,!0,n)},t.render=function(e,t,n){if(!Zu(t))throw Error(i(200));return Ju(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Zu(e))throw Error(i(40));return!!e._reactRootContainer&&(hu((function(){Ju(null,null,e,!1,(function(){e._reactRootContainer=null,e[Gr]=null}))})),!0)},t.unstable_batchedUpdates=pu,t.unstable_createPortal=function(e,t){return es(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Zu(n))throw Error(i(200));if(null==e||void 0===e._reactInternals)throw Error(i(38));return Ju(e,t,n,!1,r)},t.version="17.0.2"},function(e,t,n){"use strict";e.exports=n(57)},function(e,t,n){"use strict";
/** @license React v0.20.2
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r,a,o,i;if("object"==typeof performance&&"function"==typeof performance.now){var l=performance;t.unstable_now=function(){return l.now()}}else{var u=Date,s=u.now();t.unstable_now=function(){return u.now()-s}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var c=null,f=null,d=function(){if(null!==c)try{var e=t.unstable_now();c(!0,e),c=null}catch(e){throw setTimeout(d,0),e}};r=function(e){null!==c?setTimeout(r,0,e):(c=e,setTimeout(d,0))},a=function(e,t){f=setTimeout(e,t)},o=function(){clearTimeout(f)},t.unstable_shouldYield=function(){return!1},i=t.unstable_forceFrameRate=function(){}}else{var p=window.setTimeout,h=window.clearTimeout;if("undefined"!=typeof console){var m=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof m&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var g=!1,y=null,b=-1,v=5,k=0;t.unstable_shouldYield=function(){return t.unstable_now()>=k},i=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):v=0<e?Math.floor(1e3/e):5};var w=new MessageChannel,S=w.port2;w.port1.onmessage=function(){if(null!==y){var e=t.unstable_now();k=e+v;try{y(!0,e)?S.postMessage(null):(g=!1,y=null)}catch(e){throw S.postMessage(null),e}}else g=!1},r=function(e){y=e,g||(g=!0,S.postMessage(null))},a=function(e,n){b=p((function(){e(t.unstable_now())}),n)},o=function(){h(b),b=-1}}function O(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,a=e[r];if(!(void 0!==a&&0<_(a,t)))break e;e[r]=t,e[n]=a,n=r}}function x(e){return void 0===(e=e[0])?null:e}function E(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length;r<a;){var o=2*(r+1)-1,i=e[o],l=o+1,u=e[l];if(void 0!==i&&0>_(i,n))void 0!==u&&0>_(u,i)?(e[r]=u,e[l]=n,r=l):(e[r]=i,e[o]=n,r=o);else{if(!(void 0!==u&&0>_(u,n)))break e;e[r]=u,e[l]=n,r=l}}}return t}return null}function _(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var C=[],j=[],P=1,T=null,L=3,N=!1,R=!1,M=!1;function z(e){for(var t=x(j);null!==t;){if(null===t.callback)E(j);else{if(!(t.startTime<=e))break;E(j),t.sortIndex=t.expirationTime,O(C,t)}t=x(j)}}function A(e){if(M=!1,z(e),!R)if(null!==x(C))R=!0,r(I);else{var t=x(j);null!==t&&a(A,t.startTime-e)}}function I(e,n){R=!1,M&&(M=!1,o()),N=!0;var r=L;try{for(z(n),T=x(C);null!==T&&(!(T.expirationTime>n)||e&&!t.unstable_shouldYield());){var i=T.callback;if("function"==typeof i){T.callback=null,L=T.priorityLevel;var l=i(T.expirationTime<=n);n=t.unstable_now(),"function"==typeof l?T.callback=l:T===x(C)&&E(C),z(n)}else E(C);T=x(C)}if(null!==T)var u=!0;else{var s=x(j);null!==s&&a(A,s.startTime-n),u=!1}return u}finally{T=null,L=r,N=!1}}var D=i;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){R||N||(R=!0,r(I))},t.unstable_getCurrentPriorityLevel=function(){return L},t.unstable_getFirstCallbackNode=function(){return x(C)},t.unstable_next=function(e){switch(L){case 1:case 2:case 3:var t=3;break;default:t=L}var n=L;L=t;try{return e()}finally{L=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=D,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=L;L=e;try{return t()}finally{L=n}},t.unstable_scheduleCallback=function(e,n,i){var l=t.unstable_now();switch("object"==typeof i&&null!==i?i="number"==typeof(i=i.delay)&&0<i?l+i:l:i=l,e){case 1:var u=-1;break;case 2:u=250;break;case 5:u=1073741823;break;case 4:u=1e4;break;default:u=5e3}return e={id:P++,callback:n,priorityLevel:e,startTime:i,expirationTime:u=i+u,sortIndex:-1},i>l?(e.sortIndex=i,O(j,e),null===x(C)&&e===x(j)&&(M?o():M=!0,a(A,i-l))):(e.sortIndex=u,O(C,e),R||N||(R=!0,r(I))),e},t.unstable_wrapCallback=function(e){var t=L;return function(){var n=L;L=t;try{return e.apply(this,arguments)}finally{L=n}}}},function(e,t,n){"use strict";var r=n(4),a=n(0),o=n(1),i=n(5),l=n(86),u=n(63),s=n(3),c=n(6),f=n(28),d=n(2);const p=["className","component","elevation","square","variant"],h=e=>{let t;return t=e<1?5.11916*e**2:4.5*Math.log(e+1)+2,(t/100).toFixed(2)},m=Object(s.a)("div",{name:"MuiPaper",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,t[n.variant],!n.square&&t.rounded,"elevation"===n.variant&&t["elevation"+n.elevation]]}})(({theme:e,ownerState:t})=>Object(a.a)({backgroundColor:e.palette.background.paper,color:e.palette.text.primary,transition:e.transitions.create("box-shadow")},!t.square&&{borderRadius:e.shape.borderRadius},"outlined"===t.variant&&{border:"1px solid "+e.palette.divider},"elevation"===t.variant&&Object(a.a)({boxShadow:e.shadows[t.elevation]},"dark"===e.palette.mode&&{backgroundImage:`linear-gradient(${Object(u.a)("#fff",h(t.elevation))}, ${Object(u.a)("#fff",h(t.elevation))})`}))),g=o.forwardRef((function(e,t){const n=Object(c.a)({props:e,name:"MuiPaper"}),{className:o,component:u="div",elevation:s=1,square:h=!1,variant:g="elevation"}=n,y=Object(r.a)(n,p),b=Object(a.a)({},n,{component:u,elevation:s,square:h,variant:g}),v=(e=>{const{square:t,elevation:n,variant:r,classes:a}=e,o={root:["root",r,!t&&"rounded","elevation"===r&&"elevation"+n]};return Object(l.a)(o,f.b,a)})(b);return Object(d.jsx)(m,Object(a.a)({as:u,ownerState:b,className:Object(i.a)(v.root,o),ref:t},y))}));t.a=g},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(14);function a(e=8){if(e.mui)return e;const t=Object(r.a)({spacing:e}),n=(...e)=>(0===e.length?[1]:e).map(e=>{const n=t(e);return"number"==typeof n?n+"px":n}).join(" ");return n.mui=!0,n}},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(4),a=n(0);const o=["values","unit","step"];function i(e){const{values:t={xs:0,sm:600,md:900,lg:1200,xl:1536},unit:n="px",step:i=5}=e,l=Object(r.a)(e,o),u=(e=>{const t=Object.keys(e).map(t=>({key:t,val:e[t]}))||[];return t.sort((e,t)=>e.val-t.val),t.reduce((e,t)=>Object(a.a)({},e,{[t.key]:t.val}),{})})(t),s=Object.keys(u);function c(e){return`@media (min-width:${"number"==typeof t[e]?t[e]:e}${n})`}function f(e){return`@media (max-width:${("number"==typeof t[e]?t[e]:e)-i/100}${n})`}function d(e,r){const a=s.indexOf(r);return`@media (min-width:${"number"==typeof t[e]?t[e]:e}${n}) and (max-width:${(-1!==a&&"number"==typeof t[s[a]]?t[s[a]]:r)-i/100}${n})`}return Object(a.a)({keys:s,values:u,up:c,down:f,between:d,only:function(e){return s.indexOf(e)+1<s.length?d(e,s[s.indexOf(e)+1]):c(e)},not:function(e){const t=s.indexOf(e);return 0===t?c(s[1]):t===s.length-1?f(s[t]):d(e,s[s.indexOf(e)+1]).replace("@media","@media not all and")},unit:n},l)}},function(e,t,n){"use strict";var r=n(83);t.a=function(e=null){const t=Object(r.a)();return t&&(n=t,0!==Object.keys(n).length)?t:e;var n}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(85);function a(e){const{theme:t,name:n,props:a}=e;return t&&t.components&&t.components[n]&&t.components[n].defaultProps?Object(r.a)(t.components[n].defaultProps,a):a}},function(e,t,n){"use strict";n.d(t,"h",(function(){return o})),n.d(t,"d",(function(){return i})),n.d(t,"b",(function(){return l})),n.d(t,"k",(function(){return u})),n.d(t,"l",(function(){return s})),n.d(t,"i",(function(){return c})),n.d(t,"g",(function(){return f})),n.d(t,"f",(function(){return d})),n.d(t,"a",(function(){return p})),n.d(t,"c",(function(){return h})),n.d(t,"j",(function(){return m})),n.d(t,"e",(function(){return g}));var r=n(39);function a(e,t=0,n=1){return Math.min(Math.max(t,e),n)}function o(e){e=e.slice(1);const t=new RegExp(`.{1,${e.length>=6?2:1}}`,"g");let n=e.match(t);return n&&1===n[0].length&&(n=n.map(e=>e+e)),n?`rgb${4===n.length?"a":""}(${n.map((e,t)=>t<3?parseInt(e,16):Math.round(parseInt(e,16)/255*1e3)/1e3).join(", ")})`:""}function i(e){if(e.type)return e;if("#"===e.charAt(0))return i(o(e));const t=e.indexOf("("),n=e.substring(0,t);if(-1===["rgb","rgba","hsl","hsla","color"].indexOf(n))throw new Error(Object(r.a)(9,e));let a,l=e.substring(t+1,e.length-1);if("color"===n){if(l=l.split(" "),a=l.shift(),4===l.length&&"/"===l[3].charAt(0)&&(l[3]=l[3].slice(1)),-1===["srgb","display-p3","a98-rgb","prophoto-rgb","rec-2020"].indexOf(a))throw new Error(Object(r.a)(10,a))}else l=l.split(",");return l=l.map(e=>parseFloat(e)),{type:n,values:l,colorSpace:a}}const l=e=>{const t=i(e);return t.values.slice(0,3).map((e,n)=>-1!==t.type.indexOf("hsl")&&0!==n?e+"%":e).join(" ")};function u(e){const{type:t,colorSpace:n}=e;let{values:r}=e;return-1!==t.indexOf("rgb")?r=r.map((e,t)=>t<3?parseInt(e,10):e):-1!==t.indexOf("hsl")&&(r[1]=r[1]+"%",r[2]=r[2]+"%"),r=-1!==t.indexOf("color")?`${n} ${r.join(" ")}`:""+r.join(", "),`${t}(${r})`}function s(e){if(0===e.indexOf("#"))return e;const{values:t}=i(e);return"#"+t.map((e,t)=>function(e){const t=e.toString(16);return 1===t.length?"0"+t:t}(3===t?Math.round(255*e):e)).join("")}function c(e){e=i(e);const{values:t}=e,n=t[0],r=t[1]/100,a=t[2]/100,o=r*Math.min(a,1-a),l=(e,t=(e+n/30)%12)=>a-o*Math.max(Math.min(t-3,9-t,1),-1);let s="rgb";const c=[Math.round(255*l(0)),Math.round(255*l(8)),Math.round(255*l(4))];return"hsla"===e.type&&(s+="a",c.push(t[3])),u({type:s,values:c})}function f(e){let t="hsl"===(e=i(e)).type?i(c(e)).values:e.values;return t=t.map(t=>("color"!==e.type&&(t/=255),t<=.03928?t/12.92:((t+.055)/1.055)**2.4)),Number((.2126*t[0]+.7152*t[1]+.0722*t[2]).toFixed(3))}function d(e,t){const n=f(e),r=f(t);return(Math.max(n,r)+.05)/(Math.min(n,r)+.05)}function p(e,t){return e=i(e),t=a(t),"rgb"!==e.type&&"hsl"!==e.type||(e.type+="a"),"color"===e.type?e.values[3]="/"+t:e.values[3]=t,u(e)}function h(e,t){if(e=i(e),t=a(t),-1!==e.type.indexOf("hsl"))e.values[2]*=1-t;else if(-1!==e.type.indexOf("rgb")||-1!==e.type.indexOf("color"))for(let n=0;n<3;n+=1)e.values[n]*=1-t;return u(e)}function m(e,t){if(e=i(e),t=a(t),-1!==e.type.indexOf("hsl"))e.values[2]+=(100-e.values[2])*t;else if(-1!==e.type.indexOf("rgb"))for(let n=0;n<3;n+=1)e.values[n]+=(255-e.values[n])*t;else if(-1!==e.type.indexOf("color"))for(let n=0;n<3;n+=1)e.values[n]+=(1-e.values[n])*t;return u(e)}function g(e,t=.15){return f(e)>.5?h(e,t):m(e,t)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(87);const a={active:"Mui-active",checked:"Mui-checked",completed:"Mui-completed",disabled:"Mui-disabled",error:"Mui-error",expanded:"Mui-expanded",focused:"Mui-focused",focusVisible:"Mui-focusVisible",required:"Mui-required",selected:"Mui-selected"};function o(e,t){return a[t]||`${r.a.generate(e)}-${t}`}},,,,,function(e,t){function n(){return e.exports=n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},e.exports.__esModule=!0,e.exports.default=e.exports,n.apply(this,arguments)}e.exports=n,e.exports.__esModule=!0,e.exports.default=e.exports},,,,,,,,function(e,t,n){"use strict";e.exports=n(78)},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r="function"==typeof Symbol&&Symbol.for,a=r?Symbol.for("react.element"):60103,o=r?Symbol.for("react.portal"):60106,i=r?Symbol.for("react.fragment"):60107,l=r?Symbol.for("react.strict_mode"):60108,u=r?Symbol.for("react.profiler"):60114,s=r?Symbol.for("react.provider"):60109,c=r?Symbol.for("react.context"):60110,f=r?Symbol.for("react.async_mode"):60111,d=r?Symbol.for("react.concurrent_mode"):60111,p=r?Symbol.for("react.forward_ref"):60112,h=r?Symbol.for("react.suspense"):60113,m=r?Symbol.for("react.suspense_list"):60120,g=r?Symbol.for("react.memo"):60115,y=r?Symbol.for("react.lazy"):60116,b=r?Symbol.for("react.block"):60121,v=r?Symbol.for("react.fundamental"):60117,k=r?Symbol.for("react.responder"):60118,w=r?Symbol.for("react.scope"):60119;function S(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case a:switch(e=e.type){case f:case d:case i:case u:case l:case h:return e;default:switch(e=e&&e.$$typeof){case c:case p:case y:case g:case s:return e;default:return t}}case o:return t}}}function O(e){return S(e)===d}t.AsyncMode=f,t.ConcurrentMode=d,t.ContextConsumer=c,t.ContextProvider=s,t.Element=a,t.ForwardRef=p,t.Fragment=i,t.Lazy=y,t.Memo=g,t.Portal=o,t.Profiler=u,t.StrictMode=l,t.Suspense=h,t.isAsyncMode=function(e){return O(e)||S(e)===f},t.isConcurrentMode=O,t.isContextConsumer=function(e){return S(e)===c},t.isContextProvider=function(e){return S(e)===s},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===a},t.isForwardRef=function(e){return S(e)===p},t.isFragment=function(e){return S(e)===i},t.isLazy=function(e){return S(e)===y},t.isMemo=function(e){return S(e)===g},t.isPortal=function(e){return S(e)===o},t.isProfiler=function(e){return S(e)===u},t.isStrictMode=function(e){return S(e)===l},t.isSuspense=function(e){return S(e)===h},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===i||e===d||e===u||e===l||e===h||e===m||"object"==typeof e&&null!==e&&(e.$$typeof===y||e.$$typeof===g||e.$$typeof===s||e.$$typeof===c||e.$$typeof===p||e.$$typeof===v||e.$$typeof===k||e.$$typeof===w||e.$$typeof===b)},t.typeOf=S},function(e,t,n){"use strict";
/** @license React v17.0.2
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */n(34);var r=n(1),a=60103;if(t.Fragment=60107,"function"==typeof Symbol&&Symbol.for){var o=Symbol.for;a=o("react.element"),t.Fragment=o("react.fragment")}var i=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l=Object.prototype.hasOwnProperty,u={key:!0,ref:!0,__self:!0,__source:!0};function s(e,t,n){var r,o={},s=null,c=null;for(r in void 0!==n&&(s=""+n),void 0!==t.key&&(s=""+t.key),void 0!==t.ref&&(c=t.ref),t)l.call(t,r)&&!u.hasOwnProperty(r)&&(o[r]=t[r]);if(e&&e.defaultProps)for(r in t=e.defaultProps)void 0===o[r]&&(o[r]=t[r]);return{$$typeof:a,type:e,key:s,ref:c,props:o,_owner:i.current}}t.jsx=s,t.jsxs=s},function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},i=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(a,o){function i(e){try{u(r.next(e))}catch(e){o(e)}}function l(e){try{u(r.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,l)}u((r=r.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.useStorageContext=t.StorageProvider=void 0;const l=o(n(1)),u=n(49),s=n(81),c=l.createContext({isLoaded:!1,dataStorage:{},deleteLink:e=>{},deleteWhiteListLink:e=>{},setToggles:e=>{},addSite:e=>{},addWhiteListSite:e=>i(void 0,void 0,void 0,(function*(){return new Promise(null)})),updateRedirectLink:e=>i(void 0,void 0,void 0,(function*(){})),updateRedirectOption:e=>{}});var f;!function(e){e.UPDATE_REDIRECT_OPTION="update redirectOption",e.UPDATE_REDIRECT_LINK="update redirectLink",e.ADD_TO_SITELIST="add to siteList",e.UPDATE_IS_BLOCKING="update isBlocking",e.UPDATE_IS_WHITELISTING="update isWhiteListing",e.REMOVE_FROM_WHITELIST="remove from whitelist"}(f||(f={}));t.StorageProvider=({children:e})=>{const[t,n]=l.useState(!1),[r,a]=l.useState({});l.useEffect(()=>{(0,u.getStorageAll)(["settings"]).then(e=>{const{settings:t}=e,{isBlocking:r,siteList:o,isWhiteListing:i,whiteListSites:l,redirectLink:u,redirectOption:s}=t;a({isBlocking:r,siteList:o,isWhiteListing:i,whiteListSites:l,redirectLink:u,redirectOption:s}),n(!0)})},[]),l.useEffect(()=>{const e=e=>{if(e.settings){const{oldValue:t,newValue:n}=e.settings,o=["isBlocking","siteList","isWhiteListing","whiteListSites","redirectLink","redirectOption"];for(;JSON.stringify(t[o[0]])===JSON.stringify(n[o[0]]);)o.shift();a(Object.assign(Object.assign({},r),{[o[0]]:n[o[0]]}))}};return chrome.storage.onChanged.addListener(e),()=>chrome.storage.onChanged.removeListener(e)},[r]);const o=e=>i(void 0,void 0,void 0,(function*(){return(0,u.getStorage)("settings",t=>{if(!t.settings.whiteListSites.includes(e)){const n=Object.assign(Object.assign({},t.settings),{whiteListSites:t.settings.whiteListSites.concat(e)});(0,u.setStorage)("settings",{settings:n},()=>{a(n)})}})})),d=(e,t)=>e&&t&&(0===e.indexOf(t)||0===t.indexOf(e)),p=(e,t)=>e&&t.every(t=>!d(t,e)),h=(e,t)=>e&&t.some(t=>d(t,e)),m=(e,t)=>i(void 0,void 0,void 0,(function*(){const{isBlocking:n,isWhiteListing:a,siteList:i,whiteListSites:l,redirectLink:u,redirectOption:c}=r;switch(e){case f.UPDATE_REDIRECT_OPTION:t===s.RedirectEnum.URL&&u&&(p(u,l)&&a&&(yield o(u)),h(u,i)&&n&&alert(`Your redirect website could cause issues. You have ${u} as your redirect website and that website is also in your block list`));break;case f.UPDATE_REDIRECT_LINK:c===s.RedirectEnum.URL&&(p(t,l)&&a&&(yield o(t)),h(t,i)&&n&&alert("Using this redirect website could cause issues. This website is also in your block list"));break;case f.ADD_TO_SITELIST:c===s.RedirectEnum.URL&&d(t,u)&&n&&alert(`Adding this site could cause issues. You have ${u} as your redirect website`);break;case f.UPDATE_IS_BLOCKING:c===s.RedirectEnum.URL&&t&&h(u,i)&&alert(`Activating blocking could cause issues. You have ${u} as your redirect website and that website is also in your block list`);break;case f.UPDATE_IS_WHITELISTING:c===s.RedirectEnum.URL&&t&&p(u,l)&&(yield o(u));break;case f.REMOVE_FROM_WHITELIST:c===s.RedirectEnum.URL&&a&&d(t,u)&&alert(`Removing this from the whitelist could cause issues. You have ${u} as your redirect website`);break;default:return}}));return l.createElement(c.Provider,{value:{isLoaded:t,dataStorage:r,deleteLink:e=>{(0,u.getStorage)("settings",t=>{let{siteList:n}=t.settings;n=n.filter(t=>t!==e);let r=Object.assign({},t.settings,{siteList:n});(0,u.setStorage)("settings",{settings:r})})},deleteWhiteListLink:e=>i(void 0,void 0,void 0,(function*(){yield m(f.REMOVE_FROM_WHITELIST,e),(0,u.getStorage)("settings",t=>{let{whiteListSites:n}=t.settings;n=n.filter(t=>t!==e);let r=Object.assign({},t.settings,{whiteListSites:n});(0,u.setStorage)("settings",{settings:r})})})),setToggles:e=>i(void 0,void 0,void 0,(function*(){for(let t in e){let n="isBlocking"===t?f.UPDATE_IS_BLOCKING:f.UPDATE_IS_WHITELISTING;"isBlocking"!==t&&"isWhiteListing"!==t||(yield m(n,e[t]))}(0,u.getStorage)("settings",t=>{const n=Object.assign(Object.assign({},t.settings),e);console.log("🚀 ~ file: storage.context.tsx ~ line 87 ~ getStorage ~ settings",n),(0,u.setStorage)("settings",{settings:n},()=>{a(n)})})})),addSite:e=>i(void 0,void 0,void 0,(function*(){yield m(f.ADD_TO_SITELIST,e),(0,u.getStorage)("settings",t=>{if(!t.settings.siteList.includes(e)){const n=Object.assign(Object.assign({},t.settings),{siteList:t.settings.siteList.concat(e)});(0,u.setStorage)("settings",{settings:n},()=>{a(n)})}})})),addWhiteListSite:o,updateRedirectLink:e=>i(void 0,void 0,void 0,(function*(){yield m(f.UPDATE_REDIRECT_LINK,e),(0,u.getStorage)("settings",t=>{const n=Object.assign(Object.assign({},t.settings),{redirectLink:e});(0,u.setStorage)("settings",{settings:n})})})),updateRedirectOption:e=>i(void 0,void 0,void 0,(function*(){yield m(f.UPDATE_REDIRECT_OPTION,e),(0,u.getStorage)("settings",t=>{let n=Object.assign({},t.settings,{redirectOption:e});(0,u.setStorage)("settings",{settings:n})})}))}},e)};t.useStorageContext=()=>l.useContext(c)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.RedirectEnum=void 0;const r=n(49);var a;!function(e){e.URL="URL",e.BLANK="BLANK",e.ENCOURAGING="ENCOURAGING",e.OFFENSIVE="OFFENSIVE",e.CUSTOM="CUSTOM"}(a=t.RedirectEnum||(t.RedirectEnum={})),(0,r.getStorageAll)(["settings"]).then(e=>{!function(e,t){let n=e.settings||{},{isBlocking:o,siteList:i,isWhiteListing:l,whiteListSites:u,redirectLink:s,redirectOption:c}=n;o=Boolean(o),l=Boolean(l),i=void 0===i?[]:i,u=void 0===u?[]:u,s=s||"",c=c||a.BLANK;const f={isBlocking:o,siteList:i,isWhiteListing:l,whiteListSites:u,redirectLink:s,redirectOption:c};let d={};(0,r.setStorage)("settings",{settings:f}).then(e=>{d=Object.assign(d,e),t(d)})}(e,e=>{const{isBlocking:t,isWhiteListing:n,siteList:r,whiteListSites:a,redirectLink:i,redirectOption:l}=e.settings;(t||n)&&chrome.tabs.query({},(function(e){const t=n?a:r;Array.from(e).forEach(e=>{o(e.id,e.url,t,n,i,l)})}))})}),chrome.tabs.onUpdated.addListener((function(e,t){(0,r.getStorage)("settings",(function(n){const{isBlocking:r,isWhiteListing:a,siteList:i,whiteListSites:l,redirectLink:u,redirectOption:s}=n.settings;if((r||a)&&t.url){const n=a?l:i;o(e,t.url,n,a,u,s)}}))})),chrome.storage.onChanged.addListener((function(e,t){if(e.settings){const{oldValue:t,newValue:n}=e.settings;if(t&&n){const{isBlocking:e,siteList:t,isWhiteListing:r,whiteListSites:a,redirectLink:i,redirectOption:l}=n;(e||r)&&chrome.tabs.query({},(function(e){const n=r?a:t;Array.from(e).forEach(e=>{o(e.id,e.url,n,r,i,l)})}))}}}));function o(e,t,n,r=!1,o,i){if((e=>["chrome-extension://","chrome:"].some(t=>0===e.indexOf(t)))(t))return;const l=n.find(e=>0===t.indexOf("https://"+e)||0===t.indexOf("http://"+e));if(l&&!r||!l&&r){const t=i===a.URL&&o?"https://"+o:"not_available/not_available.html";chrome.tabs.update(e,{url:t})}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(39);function a(e){if("string"!=typeof e)throw new Error(Object(r.a)(7));return e.charAt(0).toUpperCase()+e.slice(1)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(1),a=n(45);function o(){return r.useContext(a.a)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(62),a=n(37);function o({props:e,name:t,defaultTheme:n}){const o=Object(a.a)(n);return Object(r.a)({theme:o,name:t,props:e})}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);function a(e,t){const n=Object(r.a)({},t);return Object.keys(e).forEach(t=>{void 0===n[t]&&(n[t]=e[t])}),n}},function(e,t,n){"use strict";function r(e,t,n){const r={};return Object.keys(e).forEach(a=>{r[a]=e[a].reduce((e,r)=>(r&&(n&&n[r]&&e.push(n[r]),e.push(t(r))),e),[]).join(" ")}),r}n.d(t,"a",(function(){return r}))},function(e,t,n){"use strict";const r=e=>e,a=(()=>{let e=r;return{configure(t){e=t},generate:t=>e(t),reset(){e=r}}})();t.a=a},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(64);function a(e,t){const n={};return t.forEach(t=>{n[t]=Object(r.a)(e,t)}),n}},function(e,t,n){"use strict";var r=n(0),a=n(4),o=n(47),i=n(60);var l={borderRadius:4},u=n(59);const s=["breakpoints","palette","spacing","shape"];t.a=function(e={},...t){const{breakpoints:n={},palette:c={},spacing:f,shape:d={}}=e,p=Object(a.a)(e,s),h=Object(i.a)(n),m=Object(u.a)(f);let g=Object(o.a)({breakpoints:h,direction:"ltr",components:{},palette:Object(r.a)({mode:"light"},c),spacing:m,shape:Object(r.a)({},l,d)},p);return g=t.reduce((e,t)=>Object(o.a)(e,t),g),g}},,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";var r=n(16),a=n(46),o=n(13);const i=function(e=a.b){const t=Object.keys(e).reduce((t,n)=>(e[n].filterProps.forEach(r=>{t[r]=e[n]}),t),{});function n(e,n,r){const a={[e]:n,theme:r},o=t[e];return o?o(a):{[e]:n}}return function e(a){const{sx:i,theme:l={}}=a||{};if(!i)return null;function u(a){let i=a;if("function"==typeof a)i=a(l);else if("object"!=typeof a)return a;if(!i)return null;const u=Object(o.a)(l.breakpoints),s=Object.keys(u);let c=u;return Object.keys(i).forEach(a=>{const u=(s=i[a],f=l,"function"==typeof s?s(f):s);var s,f;if(null!=u)if("object"==typeof u)if(t[a])c=Object(r.a)(c,n(a,u,l));else{const t=Object(o.b)({theme:l},u,e=>({[a]:e}));!function(...e){const t=e.reduce((e,t)=>e.concat(Object.keys(t)),[]),n=new Set(t);return e.every(e=>n.size===Object.keys(e).length)}(t,u)?c=Object(r.a)(c,t):c[a]=e({sx:u,theme:l})}else c=Object(r.a)(c,n(a,u,l))}),Object(o.c)(s,c)}return Array.isArray(i)?i.map(u):u(i)}}();i.filterProps=["sx"],t.a=i},,,,function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=n(81),u=o(n(1)),s=n(32),c=n(80),f=i(n(23)),d=e=>e[Math.floor(Math.random()*e.length)],p=()=>{const{dataStorage:e}=(0,c.useStorageContext)(),{redirectOption:t}=e;let n;const r=[{title:"Keep it simple",text:"If you're feeling restless, try setting a small goal within your work and choose to feel good about yourself when you achieve it"},{title:"Take a moment",text:"You were doing something and got distracted, that's okay though. Take a moment to set an intention and head back into what you were doing properly motivated"},{title:"Refresh your energy",text:"If you are getting distracted your mind might be tired, make sure to take an intentional break soon to reset your stamina"},{title:"Be mindful",text:"Even just reading this and taking a moment to notice your stress can lead you toward better work habits. Always go into your work with fresh intention."},{title:"Right now you're more than enough",text:"Stress is the weight of the past projected into the future. Every time we let the present moment simply exist and accept our stress, we regain the ability to have a better future"}],a=[{title:"Focus",text:"Don't get distracted you piece of doodoo"},{title:"Why are you reading this?",text:"Your brain so small and unfocused I can't see it. Why don't you get back to work?"},{title:"You're losing it",text:"It's official, your attention span is less than that of a goldfish"},{title:"Distracted Dummy",text:"I don't have anything else to say, and no I'm not sorry"}];let o="";switch(t){case l.RedirectEnum.BLANK:return u.createElement(u.Fragment,null);case l.RedirectEnum.ENCOURAGING:n=d(r),o="encouraging-theme";break;case l.RedirectEnum.OFFENSIVE:n=d(a),o="offensive-theme";break;default:return u.createElement(u.Fragment,null)}return u.createElement("div",{className:"quotes-container"},u.createElement(f.default,{elevation:5,className:"quotes-card "+o},u.createElement("div",{className:"quotes-card-content"},u.createElement("h3",{style:{margin:"20px"}},n.title),u.createElement("span",null,n.text))))};(0,s.render)(u.createElement(()=>u.createElement(c.StorageProvider,null,u.createElement(p,null)),null),document.getElementById("root"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC9qc3gtcnVudGltZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG11aS9zeXN0ZW0vZXNtL3Byb3BzVG9DbGFzc0tleS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG11aS9zeXN0ZW0vZXNtL2NyZWF0ZVN0eWxlZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9zdHlsZXMvc3R5bGVkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jbHN4L2Rpc3QvY2xzeC5tLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL3N0eWxlcy91c2VUaGVtZVByb3BzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AbXVpL3N5c3RlbS9lc20vc3R5bGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BtdWkvc3lzdGVtL2VzbS9icmVha3BvaW50cy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG11aS9zeXN0ZW0vZXNtL3NwYWNpbmcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BtdWkvc3lzdGVtL2VzbS9tZW1vaXplLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi91dGlscy9kaXN0L2Vtb3Rpb24tdXRpbHMuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BtdWkvc3lzdGVtL2VzbS9tZXJnZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vcmVhY3QvZGlzdC9lbW90aW9uLWVsZW1lbnQtY2JlZDQ1MWYuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvY29sb3JzL3JlZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9jb2xvcnMvcHVycGxlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL2NvbG9ycy9ibHVlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL2NvbG9ycy9saWdodEJsdWUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvY29sb3JzL2dyZWVuLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL1BhcGVyL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9oYXNoL2Rpc3QvaGFzaC5icm93c2VyLmVzbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vdW5pdGxlc3MvZGlzdC91bml0bGVzcy5icm93c2VyLmVzbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vc2VyaWFsaXplL2Rpc3QvZW1vdGlvbi1zZXJpYWxpemUuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvY29sb3JzL2NvbW1vbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9jb2xvcnMvb3JhbmdlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL1BhcGVyL3BhcGVyQ2xhc3Nlcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9zdHlsZXMvY3JlYXRlUGFsZXR0ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9zdHlsZXMvc2hhZG93cy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9zdHlsZXMvekluZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL3N0eWxlcy9jcmVhdGVUaGVtZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9zdHlsZXMvY3JlYXRlTWl4aW5zLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL3N0eWxlcy9kZWZhdWx0VGhlbWUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vbWVtb2l6ZS9kaXN0L2Vtb3Rpb24tbWVtb2l6ZS5icm93c2VyLmVzbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvb2JqZWN0LWFzc2lnbi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9zdHlsZXMvY3JlYXRlVHJhbnNpdGlvbnMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL3dlYWstbWVtb2l6ZS9kaXN0L3dlYWstbWVtb2l6ZS5icm93c2VyLmVzbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG11aS9zeXN0ZW0vZXNtL3VzZVRoZW1lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9pcy1wcm9wLXZhbGlkL2Rpc3QvZW1vdGlvbi1pcy1wcm9wLXZhbGlkLmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9zdHlsZWQvYmFzZS9kaXN0L2Vtb3Rpb24tc3R5bGVkLWJhc2UuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL3N0eWxlZC9kaXN0L2Vtb3Rpb24tc3R5bGVkLmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AbXVpL3N0eWxlZC1lbmdpbmUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BtdWkvdXRpbHMvZXNtL2Zvcm1hdE11aUVycm9yTWVzc2FnZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MvZGlzdC9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy5janMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL3NoZWV0L2Rpc3QvZW1vdGlvbi1zaGVldC5icm93c2VyLmVzbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGlzL2Rpc3Qvc3R5bGlzLm1qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vY2FjaGUvZGlzdC9lbW90aW9uLWNhY2hlLmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL2NvbG9ycy9ncmV5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL3N0eWxlcy9jcmVhdGVUeXBvZ3JhcGh5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AbXVpL3ByaXZhdGUtdGhlbWluZy91c2VUaGVtZS9UaGVtZUNvbnRleHQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BtdWkvc3lzdGVtL2VzbS9jb21wb3NlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AbXVpL3N5c3RlbS9lc20vYm9yZGVycy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG11aS9zeXN0ZW0vZXNtL2Rpc3BsYXkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BtdWkvc3lzdGVtL2VzbS9mbGV4Ym94LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AbXVpL3N5c3RlbS9lc20vZ3JpZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG11aS9zeXN0ZW0vZXNtL3Bvc2l0aW9ucy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG11aS9zeXN0ZW0vZXNtL3BhbGV0dGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BtdWkvc3lzdGVtL2VzbS9zaGFkb3dzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AbXVpL3N5c3RlbS9lc20vc2l6aW5nLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AbXVpL3N5c3RlbS9lc20vdHlwb2dyYXBoeS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG11aS9zeXN0ZW0vZXNtL2dldFRoZW1lVmFsdWUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BtdWkvdXRpbHMvZXNtL2RlZXBtZXJnZS5qcyIsIndlYnBhY2s6Ly8vLi9tb2R1bGVzL3N0b3JhZ2UudHMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL3JlYWN0L19pc29sYXRlZC1obnJzL2Rpc3QvZW1vdGlvbi1yZWFjdC1faXNvbGF0ZWQtaG5ycy5icm93c2VyLmVzbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9QYXBlci9QYXBlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG11aS9zeXN0ZW0vZXNtL2NyZWF0ZVRoZW1lL2NyZWF0ZVNwYWNpbmcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BtdWkvc3lzdGVtL2VzbS9jcmVhdGVUaGVtZS9jcmVhdGVCcmVha3BvaW50cy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG11aS9zeXN0ZW0vZXNtL3VzZVRoZW1lV2l0aG91dERlZmF1bHQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BtdWkvc3lzdGVtL2VzbS91c2VUaGVtZVByb3BzL2dldFRoZW1lUHJvcHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BtdWkvc3lzdGVtL2VzbS9jb2xvck1hbmlwdWxhdG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AbXVpL3ByaXZhdGUtY2xhc3NuYW1lcy9nZW5lcmF0ZVV0aWxpdHlDbGFzcy9nZW5lcmF0ZVV0aWxpdHlDbGFzcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9leHRlbmRzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2Nqcy9yZWFjdC1qc3gtcnVudGltZS5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9jb250ZXh0cy9zdG9yYWdlLmNvbnRleHQudHN4Iiwid2VicGFjazovLy8uL2JhY2tncm91bmQvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BtdWkvdXRpbHMvZXNtL2NhcGl0YWxpemUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BtdWkvcHJpdmF0ZS10aGVtaW5nL3VzZVRoZW1lL3VzZVRoZW1lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AbXVpL3N5c3RlbS9lc20vdXNlVGhlbWVQcm9wcy91c2VUaGVtZVByb3BzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AbXVpL3V0aWxzL2VzbS9yZXNvbHZlUHJvcHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BtdWkvcHJpdmF0ZS1jbGFzc25hbWVzL2NvbXBvc2VDbGFzc2VzL2NvbXBvc2VDbGFzc2VzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AbXVpL3ByaXZhdGUtY2xhc3NuYW1lcy9DbGFzc05hbWVHZW5lcmF0b3IvQ2xhc3NOYW1lR2VuZXJhdG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AbXVpL3ByaXZhdGUtY2xhc3NuYW1lcy9nZW5lcmF0ZVV0aWxpdHlDbGFzc2VzL2dlbmVyYXRlVXRpbGl0eUNsYXNzZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BtdWkvc3lzdGVtL2VzbS9jcmVhdGVUaGVtZS9zaGFwZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG11aS9zeXN0ZW0vZXNtL2NyZWF0ZVRoZW1lL2NyZWF0ZVRoZW1lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AbXVpL3N5c3RlbS9lc20vc3R5bGVGdW5jdGlvblN4L3N0eWxlRnVuY3Rpb25TeC5qcyIsIndlYnBhY2s6Ly8vLi9ub3RfYXZhaWxhYmxlL2luZGV4LnRzeCJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsIl9leHRlbmRzIiwiYXNzaWduIiwidGFyZ2V0IiwiYXJndW1lbnRzIiwibGVuZ3RoIiwic291cmNlIiwiYXBwbHkiLCJ0aGlzIiwiX2V4Y2x1ZGVkIiwiaXNFbXB0eSIsInN0cmluZyIsInByb3BzVG9DbGFzc0tleSIsInByb3BzIiwidmFyaWFudCIsIm90aGVyIiwiY2xhc3NLZXkiLCJrZXlzIiwic29ydCIsImZvckVhY2giLCJjYXBpdGFsaXplIiwidG9TdHJpbmciLCJfZXhjbHVkZWQyIiwiX2V4Y2x1ZGVkMyIsIm9iaiIsInNob3VsZEZvcndhcmRQcm9wIiwicHJvcCIsInN5c3RlbURlZmF1bHRUaGVtZSIsImNyZWF0ZVRoZW1lIiwic3R5bGVkIiwiaW5wdXQiLCJkZWZhdWx0VGhlbWUiLCJyb290U2hvdWxkRm9yd2FyZFByb3AiLCJzbG90U2hvdWxkRm9yd2FyZFByb3AiLCJzdHlsZUZ1bmN0aW9uU3giLCJ0YWciLCJpbnB1dE9wdGlvbnMiLCJjb21wb25lbnROYW1lIiwic2xvdCIsImNvbXBvbmVudFNsb3QiLCJza2lwVmFyaWFudHNSZXNvbHZlciIsImlucHV0U2tpcFZhcmlhbnRzUmVzb2x2ZXIiLCJza2lwU3giLCJpbnB1dFNraXBTeCIsIm92ZXJyaWRlc1Jlc29sdmVyIiwib3B0aW9ucyIsInVuZGVmaW5lZCIsInNob3VsZEZvcndhcmRQcm9wT3B0aW9uIiwiZGVmYXVsdFN0eWxlZFJlc29sdmVyIiwibGFiZWwiLCJtdWlTdHlsZWRSZXNvbHZlciIsInN0eWxlQXJnIiwiZXhwcmVzc2lvbnMiLCJleHByZXNzaW9uc1dpdGhEZWZhdWx0VGhlbWUiLCJtYXAiLCJzdHlsZXNBcmciLCJfX2Vtb3Rpb25fcmVhbCIsIl9yZWYiLCJ0aGVtZSIsInRoZW1lSW5wdXQiLCJ0cmFuc2Zvcm1lZFN0eWxlQXJnIiwicHVzaCIsInN0eWxlT3ZlcnJpZGVzIiwiY29tcG9uZW50cyIsImdldFN0eWxlT3ZlcnJpZGVzIiwicmVzb2x2ZWRTdHlsZU92ZXJyaWRlcyIsImVudHJpZXMiLCJzbG90S2V5Iiwic2xvdFN0eWxlIiwic3R5bGVzIiwiX3RoZW1lJGNvbXBvbmVudHMiLCJfdGhlbWUkY29tcG9uZW50cyRuYW0iLCJvd25lclN0YXRlIiwidmFyaWFudHNTdHlsZXMiLCJ0aGVtZVZhcmlhbnRzIiwidmFyaWFudHMiLCJ0aGVtZVZhcmlhbnQiLCJpc01hdGNoIiwidmFyaWFudHNSZXNvbHZlciIsImRlZmluaXRpb24iLCJzdHlsZSIsImdldFZhcmlhbnRTdHlsZXMiLCJudW1PZkN1c3RvbUZuc0FwcGxpZWQiLCJBcnJheSIsImlzQXJyYXkiLCJwbGFjZWhvbGRlcnMiLCJmaWxsIiwicmF3IiwiX3JlZjIiLCJ3aXRoQ29uZmlnIiwiY3JlYXRlU3R5bGVkIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UiLCJleGNsdWRlZCIsInNvdXJjZUtleXMiLCJpbmRleE9mIiwidG9WYWwiLCJtaXgiLCJrIiwieSIsInN0ciIsInRtcCIsIngiLCJ1c2VUaGVtZVByb3BzIiwiZ2V0UGF0aCIsInBhdGgiLCJ2YXJzIiwidmFsIiwic3BsaXQiLCJyZWR1Y2UiLCJhY2MiLCJpdGVtIiwiZ2V0VmFsdWUiLCJ0aGVtZU1hcHBpbmciLCJ0cmFuc2Zvcm0iLCJwcm9wVmFsdWVGaW5hbCIsInVzZXJWYWx1ZSIsImNzc1Byb3BlcnR5IiwidGhlbWVLZXkiLCJmbiIsInByb3BWYWx1ZSIsInByb3BUeXBlcyIsImZpbHRlclByb3BzIiwidmFsdWVzIiwieHMiLCJzbSIsIm1kIiwibGciLCJ4bCIsImRlZmF1bHRCcmVha3BvaW50cyIsInVwIiwiaGFuZGxlQnJlYWtwb2ludHMiLCJzdHlsZUZyb21Qcm9wVmFsdWUiLCJ0aGVtZUJyZWFrcG9pbnRzIiwiYnJlYWtwb2ludHMiLCJpbmRleCIsImJyZWFrcG9pbnQiLCJjc3NLZXkiLCJjcmVhdGVFbXB0eUJyZWFrcG9pbnRPYmplY3QiLCJicmVha3BvaW50c0lucHV0IiwiX2JyZWFrcG9pbnRzSW5wdXQka2V5IiwicmVtb3ZlVW51c2VkQnJlYWtwb2ludHMiLCJicmVha3BvaW50S2V5cyIsImJyZWFrcG9pbnRPdXRwdXQiLCJyZXNvbHZlQnJlYWtwb2ludFZhbHVlcyIsImJyZWFrcG9pbnRWYWx1ZXMiLCJiYXNlIiwiY3VzdG9tQmFzZSIsImJyZWFrcG9pbnRzS2V5cyIsImNvbXB1dGVCcmVha3BvaW50c0Jhc2UiLCJwcmV2aW91cyIsInByb3BlcnRpZXMiLCJkaXJlY3Rpb25zIiwiYiIsImFsaWFzZXMiLCJtYXJnaW5YIiwibWFyZ2luWSIsInBhZGRpbmdYIiwicGFkZGluZ1kiLCJnZXRDc3NQcm9wZXJ0aWVzIiwiY2FjaGUiLCJhcmciLCJtZW1vaXplIiwiYSIsImRpcmVjdGlvbiIsImRpciIsIm1hcmdpbktleXMiLCJwYWRkaW5nS2V5cyIsInNwYWNpbmdLZXlzIiwiY3JlYXRlVW5hcnlVbml0IiwiZGVmYXVsdFZhbHVlIiwicHJvcE5hbWUiLCJfZ2V0UGF0aCIsInRoZW1lU3BhY2luZyIsImFicyIsImNyZWF0ZVVuYXJ5U3BhY2luZyIsInRyYW5zZm9ybWVyIiwidHJhbnNmb3JtZWQiLCJNYXRoIiwicmVzb2x2ZUNzc1Byb3BlcnR5IiwiY3NzUHJvcGVydGllcyIsImdldFN0eWxlRnJvbVByb3BWYWx1ZSIsIm1lcmdlIiwibWFyZ2luIiwicGFkZGluZyIsInNwYWNpbmciLCJnZXRSZWdpc3RlcmVkU3R5bGVzIiwicmVnaXN0ZXJlZCIsInJlZ2lzdGVyZWRTdHlsZXMiLCJjbGFzc05hbWVzIiwicmF3Q2xhc3NOYW1lIiwiY2xhc3NOYW1lIiwicmVnaXN0ZXJTdHlsZXMiLCJzZXJpYWxpemVkIiwiaXNTdHJpbmdUYWciLCJpbnNlcnRTdHlsZXMiLCJpbnNlcnRlZCIsImN1cnJlbnQiLCJpbnNlcnQiLCJzaGVldCIsIm5leHQiLCJjbG9uZSIsIkVtb3Rpb25DYWNoZUNvbnRleHQiLCJIVE1MRWxlbWVudCIsIkNhY2hlUHJvdmlkZXIiLCJQcm92aWRlciIsIndpdGhFbW90aW9uQ2FjaGUiLCJmdW5jIiwicmVmIiwiVGhlbWVDb250ZXh0IiwidXNlSW5zZXJ0aW9uRWZmZWN0IiwidXNlSW5zZXJ0aW9uRWZmZWN0TWF5YmUiLCJ0eXBlUHJvcE5hbWUiLCJjcmVhdGVFbW90aW9uUHJvcHMiLCJ0eXBlIiwibmV3UHJvcHMiLCJJbnNlcnRpb24iLCJFbW90aW9uIiwiY3NzUHJvcCIsImNzcyIsIldyYXBwZWRDb21wb25lbnQiLCI1MCIsIjEwMCIsIjIwMCIsIjMwMCIsIjQwMCIsIjUwMCIsIjYwMCIsIjcwMCIsIjgwMCIsIjkwMCIsIkExMDAiLCJBMjAwIiwiQTQwMCIsIkE3MDAiLCJoIiwibGVuIiwiY2hhckNvZGVBdCIsImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IiwiYm9yZGVySW1hZ2VPdXRzZXQiLCJib3JkZXJJbWFnZVNsaWNlIiwiYm9yZGVySW1hZ2VXaWR0aCIsImJveEZsZXgiLCJib3hGbGV4R3JvdXAiLCJib3hPcmRpbmFsR3JvdXAiLCJjb2x1bW5Db3VudCIsImNvbHVtbnMiLCJmbGV4IiwiZmxleEdyb3ciLCJmbGV4UG9zaXRpdmUiLCJmbGV4U2hyaW5rIiwiZmxleE5lZ2F0aXZlIiwiZmxleE9yZGVyIiwiZ3JpZFJvdyIsImdyaWRSb3dFbmQiLCJncmlkUm93U3BhbiIsImdyaWRSb3dTdGFydCIsImdyaWRDb2x1bW4iLCJncmlkQ29sdW1uRW5kIiwiZ3JpZENvbHVtblNwYW4iLCJncmlkQ29sdW1uU3RhcnQiLCJtc0dyaWRSb3ciLCJtc0dyaWRSb3dTcGFuIiwibXNHcmlkQ29sdW1uIiwibXNHcmlkQ29sdW1uU3BhbiIsImZvbnRXZWlnaHQiLCJsaW5lSGVpZ2h0Iiwib3BhY2l0eSIsIm9yZGVyIiwib3JwaGFucyIsInRhYlNpemUiLCJ3aWRvd3MiLCJ6SW5kZXgiLCJ6b29tIiwiV2Via2l0TGluZUNsYW1wIiwiZmlsbE9wYWNpdHkiLCJmbG9vZE9wYWNpdHkiLCJzdG9wT3BhY2l0eSIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZURhc2hvZmZzZXQiLCJzdHJva2VNaXRlcmxpbWl0Iiwic3Ryb2tlT3BhY2l0eSIsInN0cm9rZVdpZHRoIiwiaHlwaGVuYXRlUmVnZXgiLCJhbmltYXRpb25SZWdleCIsImlzQ3VzdG9tUHJvcGVydHkiLCJpc1Byb2Nlc3NhYmxlVmFsdWUiLCJwcm9jZXNzU3R5bGVOYW1lIiwic3R5bGVOYW1lIiwicmVwbGFjZSIsInRvTG93ZXJDYXNlIiwibWF0Y2giLCJwMSIsInAyIiwiY3Vyc29yIiwiaGFuZGxlSW50ZXJwb2xhdGlvbiIsIm1lcmdlZFByb3BzIiwiaW50ZXJwb2xhdGlvbiIsIl9fZW1vdGlvbl9zdHlsZXMiLCJhbmltIiwiX2tleSIsImludGVycG9sYXRlZCIsIl9pIiwiY3JlYXRlU3RyaW5nRnJvbU9iamVjdCIsInByZXZpb3VzQ3Vyc29yIiwicmVzdWx0IiwiY2FjaGVkIiwibGFiZWxQYXR0ZXJuIiwiYXJncyIsInN0cmluZ01vZGUiLCJzdHJpbmdzIiwibGFzdEluZGV4IiwiaWRlbnRpZmllck5hbWUiLCJleGVjIiwiYmxhY2siLCJ3aGl0ZSIsImdldFBhcGVyVXRpbGl0eUNsYXNzIiwicGFwZXJDbGFzc2VzIiwibGlnaHQiLCJ0ZXh0IiwicHJpbWFyeSIsInNlY29uZGFyeSIsImRpc2FibGVkIiwiZGl2aWRlciIsImJhY2tncm91bmQiLCJwYXBlciIsImNvbW1vbiIsImRlZmF1bHQiLCJhY3Rpb24iLCJhY3RpdmUiLCJob3ZlciIsImhvdmVyT3BhY2l0eSIsInNlbGVjdGVkIiwic2VsZWN0ZWRPcGFjaXR5IiwiZGlzYWJsZWRCYWNrZ3JvdW5kIiwiZGlzYWJsZWRPcGFjaXR5IiwiZm9jdXMiLCJmb2N1c09wYWNpdHkiLCJhY3RpdmF0ZWRPcGFjaXR5IiwiZGFyayIsImljb24iLCJhZGRMaWdodE9yRGFyayIsImludGVudCIsInNoYWRlIiwidG9uYWxPZmZzZXQiLCJ0b25hbE9mZnNldExpZ2h0IiwidG9uYWxPZmZzZXREYXJrIiwibWFpbiIsImNyZWF0ZVBhbGV0dGUiLCJwYWxldHRlIiwiY29udHJhc3RUaHJlc2hvbGQiLCJibHVlIiwiZ2V0RGVmYXVsdFByaW1hcnkiLCJwdXJwbGUiLCJnZXREZWZhdWx0U2Vjb25kYXJ5IiwiZXJyb3IiLCJyZWQiLCJnZXREZWZhdWx0RXJyb3IiLCJpbmZvIiwibGlnaHRCbHVlIiwiZ2V0RGVmYXVsdEluZm8iLCJzdWNjZXNzIiwiZ3JlZW4iLCJnZXREZWZhdWx0U3VjY2VzcyIsIndhcm5pbmciLCJvcmFuZ2UiLCJnZXREZWZhdWx0V2FybmluZyIsImdldENvbnRyYXN0VGV4dCIsImF1Z21lbnRDb2xvciIsImNvbG9yIiwibWFpblNoYWRlIiwibGlnaHRTaGFkZSIsImRhcmtTaGFkZSIsIkVycm9yIiwiSlNPTiIsInN0cmluZ2lmeSIsImNvbnRyYXN0VGV4dCIsIm1vZGVzIiwiZGVlcG1lcmdlIiwiZ3JleSIsImNyZWF0ZVNoYWRvdyIsInB4Iiwiam9pbiIsIm1vYmlsZVN0ZXBwZXIiLCJmYWIiLCJzcGVlZERpYWwiLCJhcHBCYXIiLCJkcmF3ZXIiLCJtb2RhbCIsInNuYWNrYmFyIiwidG9vbHRpcCIsIm1peGlucyIsIm1peGluc0lucHV0IiwicGFsZXR0ZUlucHV0IiwidHJhbnNpdGlvbnMiLCJ0cmFuc2l0aW9uc0lucHV0IiwidHlwb2dyYXBoeSIsInR5cG9ncmFwaHlJbnB1dCIsInN5c3RlbVRoZW1lIiwibXVpVGhlbWUiLCJ0b29sYmFyIiwibWluSGVpZ2h0Iiwic2hhZG93cyIsInNsaWNlIiwiY3JlYXRlVHlwb2dyYXBoeSIsImNyZWF0ZVRyYW5zaXRpb25zIiwiYXJndW1lbnQiLCJjcmVhdGVNdWlUaGVtZSIsImNoZWNrRENFIiwiX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fIiwiZXJyIiwiY29uc29sZSIsImdldE93blByb3BlcnR5U3ltYm9scyIsInByb3BJc0VudW1lcmFibGUiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsInRvT2JqZWN0IiwiVHlwZUVycm9yIiwidGVzdDEiLCJTdHJpbmciLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwidGVzdDIiLCJmcm9tQ2hhckNvZGUiLCJ0ZXN0MyIsImxldHRlciIsInNob3VsZFVzZU5hdGl2ZSIsImZyb20iLCJzeW1ib2xzIiwidG8iLCJlYXNpbmciLCJlYXNlSW5PdXQiLCJlYXNlT3V0IiwiZWFzZUluIiwic2hhcnAiLCJkdXJhdGlvbiIsInNob3J0ZXN0Iiwic2hvcnRlciIsInNob3J0Iiwic3RhbmRhcmQiLCJjb21wbGV4IiwiZW50ZXJpbmdTY3JlZW4iLCJsZWF2aW5nU2NyZWVuIiwiZm9ybWF0TXMiLCJtaWxsaXNlY29uZHMiLCJyb3VuZCIsImdldEF1dG9IZWlnaHREdXJhdGlvbiIsImhlaWdodCIsImNvbnN0YW50IiwiaW5wdXRUcmFuc2l0aW9ucyIsIm1lcmdlZEVhc2luZyIsIm1lcmdlZER1cmF0aW9uIiwiZHVyYXRpb25PcHRpb24iLCJlYXNpbmdPcHRpb24iLCJkZWxheSIsImFuaW1hdGVkUHJvcCIsIldlYWtNYXAiLCJoYXMiLCJyZXQiLCJzZXQiLCJyZWFjdFByb3BzUmVnZXgiLCJ0ZXN0IiwidGVzdE9taXRQcm9wc09uU3RyaW5nVGFnIiwidGVzdE9taXRQcm9wc09uQ29tcG9uZW50IiwiZ2V0RGVmYXVsdFNob3VsZEZvcndhcmRQcm9wIiwiY29tcG9zZVNob3VsZEZvcndhcmRQcm9wcyIsImlzUmVhbCIsIm9wdGlvbnNTaG91bGRGb3J3YXJkUHJvcCIsIl9fZW1vdGlvbl9mb3J3YXJkUHJvcCIsIm5ld1N0eWxlZCIsInRhcmdldENsYXNzTmFtZSIsImJhc2VUYWciLCJfX2Vtb3Rpb25fYmFzZSIsImRlZmF1bHRTaG91bGRGb3J3YXJkUHJvcCIsInNob3VsZFVzZUFzIiwiU3R5bGVkIiwiRmluYWxUYWciLCJhcyIsImNsYXNzSW50ZXJwb2xhdGlvbnMiLCJjb25jYXQiLCJmaW5hbFNob3VsZEZvcndhcmRQcm9wIiwiZGlzcGxheU5hbWUiLCJkZWZhdWx0UHJvcHMiLCJ3aXRoQ29tcG9uZW50IiwibmV4dFRhZyIsIm5leHRPcHRpb25zIiwidGFnTmFtZSIsImZvcm1hdE11aUVycm9yTWVzc2FnZSIsImNvZGUiLCJ1cmwiLCJlbmNvZGVVUklDb21wb25lbnQiLCJyZWFjdElzIiwiUkVBQ1RfU1RBVElDUyIsImNoaWxkQ29udGV4dFR5cGVzIiwiY29udGV4dFR5cGUiLCJjb250ZXh0VHlwZXMiLCJnZXREZWZhdWx0UHJvcHMiLCJnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3IiLCJnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMiLCJLTk9XTl9TVEFUSUNTIiwiY2FsbGVyIiwiY2FsbGVlIiwiYXJpdHkiLCJNRU1PX1NUQVRJQ1MiLCJjb21wYXJlIiwiVFlQRV9TVEFUSUNTIiwiZ2V0U3RhdGljcyIsImNvbXBvbmVudCIsImlzTWVtbyIsIkZvcndhcmRSZWYiLCJyZW5kZXIiLCJNZW1vIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZ2V0UHJvdG90eXBlT2YiLCJvYmplY3RQcm90b3R5cGUiLCJob2lzdE5vblJlYWN0U3RhdGljcyIsInRhcmdldENvbXBvbmVudCIsInNvdXJjZUNvbXBvbmVudCIsImJsYWNrbGlzdCIsImluaGVyaXRlZENvbXBvbmVudCIsInRhcmdldFN0YXRpY3MiLCJzb3VyY2VTdGF0aWNzIiwiZGVzY3JpcHRvciIsImUiLCJTdHlsZVNoZWV0IiwiX3RoaXMiLCJfaW5zZXJ0VGFnIiwiYmVmb3JlIiwidGFncyIsImluc2VydGlvblBvaW50IiwibmV4dFNpYmxpbmciLCJwcmVwZW5kIiwiY29udGFpbmVyIiwiZmlyc3RDaGlsZCIsImluc2VydEJlZm9yZSIsImlzU3BlZWR5Iiwic3BlZWR5IiwiY3RyIiwibm9uY2UiLCJfcHJvdG8iLCJoeWRyYXRlIiwibm9kZXMiLCJydWxlIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlIiwiYXBwZW5kQ2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsImNyZWF0ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXRzIiwib3duZXJOb2RlIiwic2hlZXRGb3JUYWciLCJpbnNlcnRSdWxlIiwiY3NzUnVsZXMiLCJmbHVzaCIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsImciLCJ0cmltIiwiaiIsIkMiLCJ6IiwiQSIsIk8iLCJNIiwiUyIsInEiLCJCIiwiRCIsIkUiLCJGIiwiRyIsIkgiLCJJIiwicm9vdCIsInBhcmVudCIsImNoaWxkcmVuIiwibGluZSIsImNvbHVtbiIsInJldHVybiIsIkoiLCJMIiwiTiIsIlAiLCJRIiwiUiIsIlQiLCJVIiwiViIsIlciLCJlZSIsIlkiLCJfIiwicmUiLCJhZSIsImNlIiwibmUiLCJ1IiwiZiIsInYiLCJ3IiwiJCIsInNlIiwidWUiLCJ0ZSIsImllIiwiZmUiLCJvZSIsInZlIiwiYmVnaW4iLCJwb2ludHMiLCJjaGFyYWN0ZXIiLCJwYXJzZWQiLCJmaXhlZEVsZW1lbnRzIiwiY29tcGF0IiwiZWxlbWVudCIsImlzSW1wbGljaXRSdWxlIiwicnVsZXMiLCJwYXJlbnRSdWxlcyIsInJlbW92ZUxhYmVsIiwiZGVmYXVsdFN0eWxpc1BsdWdpbnMiLCJzc3JTdHlsZXMiLCJxdWVyeVNlbGVjdG9yQWxsIiwibm9kZSIsImdldEF0dHJpYnV0ZSIsImhlYWQiLCJzdHlsaXNQbHVnaW5zIiwiX2luc2VydCIsIm5vZGVzVG9IeWRyYXRlIiwiYXR0cmliIiwib21uaXByZXNlbnRQbHVnaW5zIiwiY3VycmVudFNoZWV0IiwiZmluYWxpemluZ1BsdWdpbnMiLCJzZXJpYWxpemVyIiwic2VsZWN0b3IiLCJzaG91bGRDYWNoZSIsImNhc2VBbGxDYXBzIiwidGV4dFRyYW5zZm9ybSIsImRlZmF1bHRGb250RmFtaWx5IiwiZm9udEZhbWlseSIsImZvbnRTaXplIiwiZm9udFdlaWdodExpZ2h0IiwiZm9udFdlaWdodFJlZ3VsYXIiLCJmb250V2VpZ2h0TWVkaXVtIiwiZm9udFdlaWdodEJvbGQiLCJodG1sRm9udFNpemUiLCJhbGxWYXJpYW50cyIsInB4VG9SZW0iLCJweFRvUmVtMiIsImNvZWYiLCJzaXplIiwiYnVpbGRWYXJpYW50IiwibGV0dGVyU3BhY2luZyIsImNhc2luZyIsImgxIiwiaDIiLCJoMyIsImg0IiwiaDUiLCJoNiIsInN1YnRpdGxlMSIsInN1YnRpdGxlMiIsImJvZHkxIiwiYm9keTIiLCJidXR0b24iLCJjYXB0aW9uIiwib3ZlcmxpbmUiLCJoYW5kbGVycyIsImdldEJvcmRlciIsImJvcmRlciIsImJvcmRlclRvcCIsImJvcmRlclJpZ2h0IiwiYm9yZGVyQm90dG9tIiwiYm9yZGVyTGVmdCIsImJvcmRlckNvbG9yIiwiYm9yZGVyVG9wQ29sb3IiLCJib3JkZXJSaWdodENvbG9yIiwiYm9yZGVyQm90dG9tQ29sb3IiLCJib3JkZXJMZWZ0Q29sb3IiLCJib3JkZXJSYWRpdXMiLCJkaXNwbGF5IiwiZ2FwIiwiY29sdW1uR2FwIiwicm93R2FwIiwid2lkdGgiLCJtYXhXaWR0aCIsIl9wcm9wcyR0aGVtZSIsIl9wcm9wcyR0aGVtZSRicmVha3BvaSIsIl9wcm9wcyR0aGVtZSRicmVha3BvaTIiLCJtaW5XaWR0aCIsIm1heEhlaWdodCIsImZvbnRTdHlsZSIsInRleHRBbGlnbiIsImZpbHRlclByb3BzTWFwcGluZyIsImJvcmRlcnMiLCJmbGV4Ym94IiwiZ3JpZCIsInBvc2l0aW9ucyIsInNpemluZyIsInN0eWxlRnVuY3Rpb25NYXBwaW5nIiwicHJvcFRvU3R5bGVGdW5jdGlvbiIsInN0eWxlRm5OYW1lIiwiaXNQbGFpbk9iamVjdCIsImNvbnN0cnVjdG9yIiwib3V0cHV0IiwiZ2V0U3RvcmFnZSIsImNhbGxiYWNrIiwic3RvcmFnZSIsImNocm9tZSIsInN5bmMiLCJsb2NhbCIsInByb21pc2UiLCJQcm9taXNlIiwicmVzb2x2ZSIsImRhdGEiLCJ0aGVuIiwic2V0U3RvcmFnZSIsImdldFN0b3JhZ2VBbGwiLCJzdG9yYWdlc0tleXMiLCJhbGwiLCJzdG9yYWdlS2V5IiwicmVzIiwiaWR4IiwiRnJhZ21lbnQiLCJTdHJpY3RNb2RlIiwiUHJvZmlsZXIiLCJTdXNwZW5zZSIsImZvciIsIml0ZXJhdG9yIiwiaXNNb3VudGVkIiwiZW5xdWV1ZUZvcmNlVXBkYXRlIiwiZW5xdWV1ZVJlcGxhY2VTdGF0ZSIsImVucXVldWVTZXRTdGF0ZSIsImNvbnRleHQiLCJyZWZzIiwidXBkYXRlciIsImlzUmVhY3RDb21wb25lbnQiLCJzZXRTdGF0ZSIsImZvcmNlVXBkYXRlIiwiaXNQdXJlUmVhY3RDb21wb25lbnQiLCJfX3NlbGYiLCJfX3NvdXJjZSIsIiQkdHlwZW9mIiwiX293bmVyIiwiZXNjYXBlIiwiSyIsImRvbmUiLCJfc3RhdHVzIiwiX3Jlc3VsdCIsIlJlYWN0Q3VycmVudERpc3BhdGNoZXIiLCJSZWFjdEN1cnJlbnRCYXRjaENvbmZpZyIsInRyYW5zaXRpb24iLCJSZWFjdEN1cnJlbnRPd25lciIsIklzU29tZVJlbmRlcmVyQWN0aW5nIiwiQ2hpbGRyZW4iLCJjb3VudCIsInRvQXJyYXkiLCJvbmx5IiwiQ29tcG9uZW50IiwiUHVyZUNvbXBvbmVudCIsIl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEIiwiY2xvbmVFbGVtZW50IiwiY3JlYXRlQ29udGV4dCIsIl9jYWxjdWxhdGVDaGFuZ2VkQml0cyIsIl9jdXJyZW50VmFsdWUiLCJfY3VycmVudFZhbHVlMiIsIl90aHJlYWRDb3VudCIsIkNvbnN1bWVyIiwiX2NvbnRleHQiLCJjcmVhdGVGYWN0b3J5IiwiY3JlYXRlUmVmIiwiZm9yd2FyZFJlZiIsImlzVmFsaWRFbGVtZW50IiwibGF6eSIsIl9wYXlsb2FkIiwiX2luaXQiLCJtZW1vIiwidXNlQ2FsbGJhY2siLCJ1c2VDb250ZXh0IiwidXNlRGVidWdWYWx1ZSIsInVzZUVmZmVjdCIsInVzZUltcGVyYXRpdmVIYW5kbGUiLCJ1c2VMYXlvdXRFZmZlY3QiLCJ1c2VNZW1vIiwidXNlUmVkdWNlciIsInVzZVJlZiIsInVzZVN0YXRlIiwidmVyc2lvbiIsImFhIiwiYmEiLCJTZXQiLCJjYSIsImRhIiwiZWEiLCJhZGQiLCJmYSIsIndpbmRvdyIsImhhIiwiaWEiLCJqYSIsImthIiwiYWNjZXB0c0Jvb2xlYW5zIiwiYXR0cmlidXRlTmFtZSIsImF0dHJpYnV0ZU5hbWVzcGFjZSIsIm11c3RVc2VQcm9wZXJ0eSIsInByb3BlcnR5TmFtZSIsInNhbml0aXplVVJMIiwicmVtb3ZlRW1wdHlTdHJpbmciLCJvYSIsInBhIiwidG9VcHBlckNhc2UiLCJxYSIsIm1hIiwiaXNOYU4iLCJuYSIsImxhIiwicmVtb3ZlQXR0cmlidXRlIiwic2V0QXR0cmlidXRlTlMiLCJ4bGlua0hyZWYiLCJyYSIsInNhIiwidGEiLCJ1YSIsIndhIiwieGEiLCJ5YSIsInphIiwiQWEiLCJCYSIsIkNhIiwiRGEiLCJFYSIsIkZhIiwiR2EiLCJIYSIsIklhIiwiSmEiLCJNYSIsIkthIiwiTGEiLCJOYSIsInN0YWNrIiwiT2EiLCJQYSIsInByZXBhcmVTdGFja1RyYWNlIiwiUmVmbGVjdCIsImNvbnN0cnVjdCIsIlFhIiwiX3JlbmRlciIsIlJhIiwiU2EiLCJUYSIsIm5vZGVOYW1lIiwiVmEiLCJfdmFsdWVUcmFja2VyIiwiY29uZmlndXJhYmxlIiwic2V0VmFsdWUiLCJzdG9wVHJhY2tpbmciLCJVYSIsIldhIiwiY2hlY2tlZCIsIlhhIiwiYWN0aXZlRWxlbWVudCIsImJvZHkiLCJZYSIsImRlZmF1bHRDaGVja2VkIiwiX3dyYXBwZXJTdGF0ZSIsImluaXRpYWxDaGVja2VkIiwiWmEiLCJpbml0aWFsVmFsdWUiLCJjb250cm9sbGVkIiwiJGEiLCJhYiIsImJiIiwiY2IiLCJvd25lckRvY3VtZW50IiwiZWIiLCJkYiIsImZiIiwiZGVmYXVsdFNlbGVjdGVkIiwiZ2IiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsImhiIiwiaWIiLCJqYiIsInRleHRDb250ZW50Iiwia2IiLCJsYiIsIm1iIiwibmIiLCJvYiIsIk1TQXBwIiwiZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24iLCJuYW1lc3BhY2VVUkkiLCJpbm5lckhUTUwiLCJ2YWx1ZU9mIiwicGIiLCJsYXN0Q2hpbGQiLCJub2RlVHlwZSIsIm5vZGVWYWx1ZSIsInFiIiwiZ3JpZEFyZWEiLCJsaW5lQ2xhbXAiLCJyYiIsInNiIiwidGIiLCJzZXRQcm9wZXJ0eSIsImNoYXJBdCIsInN1YnN0cmluZyIsInViIiwibWVudWl0ZW0iLCJhcmVhIiwiYnIiLCJjb2wiLCJlbWJlZCIsImhyIiwiaW1nIiwia2V5Z2VuIiwibGluayIsIm1ldGEiLCJwYXJhbSIsInRyYWNrIiwid2JyIiwidmIiLCJ3YiIsImlzIiwieGIiLCJzcmNFbGVtZW50IiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJ5YiIsInpiIiwiQWIiLCJCYiIsIkNiIiwic3RhdGVOb2RlIiwiRGIiLCJFYiIsIkZiIiwiR2IiLCJIYiIsIkliIiwiSmIiLCJLYiIsIkxiIiwiTWIiLCJPYiIsIlBiIiwiUWIiLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIlJiIiwib25FcnJvciIsIlNiIiwiVGIiLCJVYiIsIlZiIiwiV2IiLCJYYiIsIlpiIiwiYWx0ZXJuYXRlIiwiZmxhZ3MiLCIkYiIsIm1lbW9pemVkU3RhdGUiLCJkZWh5ZHJhdGVkIiwiYWMiLCJjYyIsImNoaWxkIiwic2libGluZyIsImJjIiwiZGMiLCJlYyIsImZjIiwiZ2MiLCJoYyIsImljIiwiamMiLCJrYyIsImxjIiwibWMiLCJuYyIsIk1hcCIsIm9jIiwicGMiLCJxYyIsInJjIiwiYmxvY2tlZE9uIiwiZG9tRXZlbnROYW1lIiwiZXZlbnRTeXN0ZW1GbGFncyIsIm5hdGl2ZUV2ZW50IiwidGFyZ2V0Q29udGFpbmVycyIsInNjIiwiZGVsZXRlIiwicG9pbnRlcklkIiwidGMiLCJ2YyIsIndjIiwibGFuZVByaW9yaXR5IiwidW5zdGFibGVfcnVuV2l0aFByaW9yaXR5IiwicHJpb3JpdHkiLCJjb250YWluZXJJbmZvIiwieGMiLCJ5YyIsInNoaWZ0IiwiemMiLCJBYyIsIkJjIiwidW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayIsInVuc3RhYmxlX05vcm1hbFByaW9yaXR5IiwiQ2MiLCJEYyIsIkVjIiwiYW5pbWF0aW9uZW5kIiwiYW5pbWF0aW9uaXRlcmF0aW9uIiwiYW5pbWF0aW9uc3RhcnQiLCJ0cmFuc2l0aW9uZW5kIiwiRmMiLCJHYyIsIkhjIiwiYW5pbWF0aW9uIiwiSWMiLCJKYyIsIktjIiwiTGMiLCJNYyIsIk5jIiwiT2MiLCJQYyIsIlFjIiwidW5zdGFibGVfbm93IiwiUmMiLCJVYyIsInBlbmRpbmdMYW5lcyIsImV4cGlyZWRMYW5lcyIsInN1c3BlbmRlZExhbmVzIiwicGluZ2VkTGFuZXMiLCJWYyIsImVudGFuZ2xlZExhbmVzIiwiZW50YW5nbGVtZW50cyIsIldjIiwiWGMiLCJZYyIsIlpjIiwiJGMiLCJldmVudFRpbWVzIiwiY2x6MzIiLCJiZCIsImNkIiwibG9nIiwiTE4yIiwiZGQiLCJ1bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSIsImVkIiwiZmQiLCJnZCIsImhkIiwiaWQiLCJ1YyIsImpkIiwia2QiLCJsZCIsIm5kIiwib2QiLCJrZXlDb2RlIiwiY2hhckNvZGUiLCJwZCIsInFkIiwicmQiLCJfcmVhY3ROYW1lIiwiX3RhcmdldEluc3QiLCJjdXJyZW50VGFyZ2V0IiwiaXNEZWZhdWx0UHJldmVudGVkIiwiZGVmYXVsdFByZXZlbnRlZCIsInJldHVyblZhbHVlIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsImNhbmNlbEJ1YmJsZSIsInBlcnNpc3QiLCJpc1BlcnNpc3RlbnQiLCJ3ZCIsInhkIiwieWQiLCJzZCIsImV2ZW50UGhhc2UiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsInRpbWVTdGFtcCIsIkRhdGUiLCJub3ciLCJpc1RydXN0ZWQiLCJ0ZCIsInVkIiwidmlldyIsImRldGFpbCIsInZkIiwiQWQiLCJzY3JlZW5YIiwic2NyZWVuWSIsImNsaWVudFgiLCJjbGllbnRZIiwicGFnZVgiLCJwYWdlWSIsImN0cmxLZXkiLCJzaGlmdEtleSIsImFsdEtleSIsIm1ldGFLZXkiLCJnZXRNb2RpZmllclN0YXRlIiwiemQiLCJidXR0b25zIiwicmVsYXRlZFRhcmdldCIsImZyb21FbGVtZW50IiwidG9FbGVtZW50IiwibW92ZW1lbnRYIiwibW92ZW1lbnRZIiwiQmQiLCJEZCIsImRhdGFUcmFuc2ZlciIsIkZkIiwiSGQiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwiSmQiLCJjbGlwYm9hcmREYXRhIiwiTGQiLCJNZCIsIkVzYyIsIlNwYWNlYmFyIiwiTGVmdCIsIlVwIiwiUmlnaHQiLCJEb3duIiwiRGVsIiwiV2luIiwiTWVudSIsIkFwcHMiLCJTY3JvbGwiLCJNb3pQcmludGFibGVLZXkiLCJOZCIsIjgiLCI5IiwiMTIiLCIxMyIsIjE2IiwiMTciLCIxOCIsIjE5IiwiMjAiLCIyNyIsIjMyIiwiMzMiLCIzNCIsIjM1IiwiMzYiLCIzNyIsIjM4IiwiMzkiLCI0MCIsIjQ1IiwiNDYiLCIxMTIiLCIxMTMiLCIxMTQiLCIxMTUiLCIxMTYiLCIxMTciLCIxMTgiLCIxMTkiLCIxMjAiLCIxMjEiLCIxMjIiLCIxMjMiLCIxNDQiLCIxNDUiLCIyMjQiLCJPZCIsIkFsdCIsIkNvbnRyb2wiLCJNZXRhIiwiU2hpZnQiLCJQZCIsIlJkIiwibG9jYXRpb24iLCJyZXBlYXQiLCJsb2NhbGUiLCJ3aGljaCIsIlRkIiwicHJlc3N1cmUiLCJ0YW5nZW50aWFsUHJlc3N1cmUiLCJ0aWx0WCIsInRpbHRZIiwidHdpc3QiLCJwb2ludGVyVHlwZSIsImlzUHJpbWFyeSIsIlZkIiwidG91Y2hlcyIsInRhcmdldFRvdWNoZXMiLCJjaGFuZ2VkVG91Y2hlcyIsIlhkIiwiWmQiLCJkZWx0YVgiLCJ3aGVlbERlbHRhWCIsImRlbHRhWSIsIndoZWVsRGVsdGFZIiwid2hlZWxEZWx0YSIsImRlbHRhWiIsImRlbHRhTW9kZSIsIiRkIiwiYmUiLCJkb2N1bWVudE1vZGUiLCJkZSIsImdlIiwiaGUiLCJsZSIsImRhdGUiLCJkYXRldGltZSIsImVtYWlsIiwibW9udGgiLCJudW1iZXIiLCJwYXNzd29yZCIsInJhbmdlIiwic2VhcmNoIiwidGVsIiwidGltZSIsIndlZWsiLCJtZSIsImV2ZW50IiwibGlzdGVuZXJzIiwicGUiLCJxZSIsIndlIiwieGUiLCJ5ZSIsInplIiwib25pbnB1dCIsIkFlIiwiZGV0YWNoRXZlbnQiLCJCZSIsIkNlIiwiYXR0YWNoRXZlbnQiLCJEZSIsIkVlIiwiRmUiLCJIZSIsIkllIiwiSmUiLCJLZSIsIkxlIiwib2Zmc2V0IiwiTmUiLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnRXaW5kb3ciLCJocmVmIiwiT2UiLCJjb250ZW50RWRpdGFibGUiLCJQZSIsIlFlIiwiUmUiLCJTZSIsIlRlIiwiVWUiLCJzdGFydCIsInNlbGVjdGlvblN0YXJ0IiwiZW5kIiwic2VsZWN0aW9uRW5kIiwiYW5jaG9yTm9kZSIsImRlZmF1bHRWaWV3IiwiZ2V0U2VsZWN0aW9uIiwiYW5jaG9yT2Zmc2V0IiwiZm9jdXNOb2RlIiwiZm9jdXNPZmZzZXQiLCJWZSIsIldlIiwiWGUiLCJZZSIsIlplIiwiWWIiLCJpbnN0YW5jZSIsImxpc3RlbmVyIiwiJGUiLCJhZiIsImJmIiwicmFuZG9tIiwiY2YiLCJkZiIsImNhcHR1cmUiLCJwYXNzaXZlIiwiTmIiLCJlZiIsImZmIiwicGFyZW50V2luZG93IiwiZ2YiLCJoZiIsImplIiwiY2hhciIsImtlIiwidW5zaGlmdCIsImpmIiwia2YiLCJsZiIsIm1mIiwiYXV0b0ZvY3VzIiwibmYiLCJfX2h0bWwiLCJvZiIsInNldFRpbWVvdXQiLCJwZiIsImNsZWFyVGltZW91dCIsInFmIiwicmYiLCJzZiIsInByZXZpb3VzU2libGluZyIsInRmIiwidmYiLCJ3ZiIsInhmIiwieWYiLCJ6ZiIsIkFmIiwiQmYiLCJDZiIsIkRmIiwiRWYiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0IiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQiLCJGZiIsIkdmIiwiSGYiLCJJZiIsImdldENoaWxkQ29udGV4dCIsIkpmIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQiLCJLZiIsIkxmIiwiTWYiLCJOZiIsIk9mIiwiUGYiLCJ1bnN0YWJsZV9jYW5jZWxDYWxsYmFjayIsIlFmIiwidW5zdGFibGVfc2hvdWxkWWllbGQiLCJSZiIsInVuc3RhYmxlX3JlcXVlc3RQYWludCIsIlNmIiwiVGYiLCJ1bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCIsIlVmIiwidW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHkiLCJWZiIsIldmIiwiWGYiLCJ1bnN0YWJsZV9Mb3dQcmlvcml0eSIsIllmIiwidW5zdGFibGVfSWRsZVByaW9yaXR5IiwiWmYiLCIkZiIsImFnIiwiYmciLCJjZyIsImRnIiwiZWciLCJmZyIsImdnIiwiaGciLCJpZyIsImpnIiwia2ciLCJtZyIsIm5nIiwib2ciLCJwZyIsInFnIiwicmciLCJzZyIsImNoaWxkTGFuZXMiLCJ0ZyIsImRlcGVuZGVuY2llcyIsImZpcnN0Q29udGV4dCIsImxhbmVzIiwidWciLCJ2ZyIsIm9ic2VydmVkQml0cyIsInJlc3BvbmRlcnMiLCJ3ZyIsInhnIiwidXBkYXRlUXVldWUiLCJiYXNlU3RhdGUiLCJmaXJzdEJhc2VVcGRhdGUiLCJsYXN0QmFzZVVwZGF0ZSIsInNoYXJlZCIsInBlbmRpbmciLCJlZmZlY3RzIiwieWciLCJ6ZyIsImV2ZW50VGltZSIsImxhbmUiLCJwYXlsb2FkIiwiQWciLCJCZyIsIkNnIiwiRGciLCJFZyIsIkZnIiwiR2ciLCJLZyIsIl9yZWFjdEludGVybmFscyIsIkhnIiwiSWciLCJKZyIsIkxnIiwic2hvdWxkQ29tcG9uZW50VXBkYXRlIiwiTWciLCJzdGF0ZSIsIk5nIiwiY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwiT2ciLCJnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnREaWRNb3VudCIsIlBnIiwiUWciLCJfc3RyaW5nUmVmIiwiUmciLCJTZyIsImxhc3RFZmZlY3QiLCJuZXh0RWZmZWN0IiwiZmlyc3RFZmZlY3QiLCJUZyIsIlVnIiwiZWxlbWVudFR5cGUiLCJWZyIsImltcGxlbWVudGF0aW9uIiwiV2ciLCJYZyIsIllnIiwiWmciLCIkZyIsImFoIiwiYmgiLCJjaCIsImRoIiwiZWgiLCJkb2N1bWVudEVsZW1lbnQiLCJmaCIsImdoIiwiaGgiLCJpaCIsIm1lbW9pemVkUHJvcHMiLCJyZXZlYWxPcmRlciIsImpoIiwia2giLCJsaCIsIm1oIiwibmgiLCJvaCIsInBlbmRpbmdQcm9wcyIsInBoIiwicWgiLCJyaCIsInNoIiwidGgiLCJ1aCIsIl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5IiwidmgiLCJ3aCIsInhoIiwieWgiLCJ6aCIsIkFoIiwiQmgiLCJDaCIsIkRoIiwiRWgiLCJGaCIsIkdoIiwiSGgiLCJiYXNlUXVldWUiLCJxdWV1ZSIsIkloIiwiSmgiLCJLaCIsImxhc3RSZW5kZXJlZFJlZHVjZXIiLCJlYWdlclJlZHVjZXIiLCJlYWdlclN0YXRlIiwibGFzdFJlbmRlcmVkU3RhdGUiLCJkaXNwYXRjaCIsIkxoIiwiTWgiLCJfZ2V0VmVyc2lvbiIsIl9zb3VyY2UiLCJtdXRhYmxlUmVhZExhbmVzIiwiTmgiLCJnZXRTbmFwc2hvdCIsInN1YnNjcmliZSIsInNldFNuYXBzaG90IiwiT2giLCJQaCIsIlFoIiwiUmgiLCJkZXN0cm95IiwiZGVwcyIsIlNoIiwiVGgiLCJVaCIsIlZoIiwiV2giLCJYaCIsIlloIiwiWmgiLCIkaCIsImFpIiwiYmkiLCJjaSIsImRpIiwicmVhZENvbnRleHQiLCJ1c2VEZWZlcnJlZFZhbHVlIiwidXNlVHJhbnNpdGlvbiIsInVzZU11dGFibGVTb3VyY2UiLCJ1c2VPcGFxdWVJZGVudGlmaWVyIiwidW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyIiwidWYiLCJlaSIsImZpIiwiZ2kiLCJoaSIsImlpIiwiamkiLCJraSIsImxpIiwibWkiLCJiYXNlTGFuZXMiLCJuaSIsIm9pIiwicGkiLCJVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnREaWRVcGRhdGUiLCJxaSIsInJpIiwicGVuZGluZ0NvbnRleHQiLCJCaSIsIkRpIiwiRWkiLCJzaSIsInJldHJ5TGFuZSIsInRpIiwiZmFsbGJhY2siLCJ1bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjayIsInVpIiwidW5zdGFibGVfZXhwZWN0ZWRMb2FkVGltZSIsInZpIiwid2kiLCJ4aSIsInlpIiwiemkiLCJpc0JhY2t3YXJkcyIsInJlbmRlcmluZyIsInJlbmRlcmluZ1N0YXJ0VGltZSIsImxhc3QiLCJ0YWlsIiwidGFpbE1vZGUiLCJBaSIsIkZpIiwiR2kiLCJ3YXNNdWx0aXBsZSIsIm11bHRpcGxlIiwib25DbGljayIsIm9uY2xpY2siLCJjcmVhdGVFbGVtZW50TlMiLCJIaSIsIklpIiwiSmkiLCJLaSIsIkxpIiwiTWkiLCJtZXNzYWdlIiwiTmkiLCJPaSIsIlBpIiwiUWkiLCJSaSIsIlNpIiwiY29tcG9uZW50RGlkQ2F0Y2giLCJUaSIsImNvbXBvbmVudFN0YWNrIiwiVWkiLCJXZWFrU2V0IiwiVmkiLCJXaSIsIlhpIiwiX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUiLCJZaSIsIlppIiwiJGkiLCJhaiIsImJqIiwib25Db21taXRGaWJlclVubW91bnQiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsImNqIiwiZGoiLCJlaiIsImZqIiwiZ2oiLCJfcmVhY3RSb290Q29udGFpbmVyIiwiaGoiLCJpaiIsImpqIiwia2oiLCJsaiIsIm1qIiwibmoiLCJjZWlsIiwib2oiLCJwaiIsIlgiLCJxaiIsInJqIiwic2oiLCJ0aiIsInVqIiwidmoiLCJJbmZpbml0eSIsIndqIiwiY2siLCJaIiwieGoiLCJ5aiIsInpqIiwiQWoiLCJCaiIsIkNqIiwiRGoiLCJFaiIsIkZqIiwiR2oiLCJIaiIsIklqIiwiSmoiLCJTYyIsIktqIiwiTGoiLCJNaiIsImNhbGxiYWNrTm9kZSIsImV4cGlyYXRpb25UaW1lcyIsImNhbGxiYWNrUHJpb3JpdHkiLCJUYyIsIk5qIiwiT2oiLCJQaiIsIlFqIiwiUmoiLCJTaiIsIlRqIiwiZmluaXNoZWRXb3JrIiwiZmluaXNoZWRMYW5lcyIsIlVqIiwidGltZW91dEhhbmRsZSIsIldqIiwiWGoiLCJwaW5nQ2FjaGUiLCJZaiIsIlpqIiwidmEiLCJhayIsImJrIiwiZGsiLCJyYW5nZUNvdW50IiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsImVrIiwiTWUiLCJjb250YWlucyIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwibWluIiwiZXh0ZW5kIiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwibGVmdCIsInNjcm9sbExlZnQiLCJ0b3AiLCJzY3JvbGxUb3AiLCJvbkNvbW1pdEZpYmVyUm9vdCIsImZrIiwiZ2siLCJpayIsInBlbmRpbmdDaGlsZHJlbiIsImprIiwibXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YSIsImtrIiwibGsiLCJtayIsIm5rIiwib2siLCJxayIsImh5ZHJhdGlvbk9wdGlvbnMiLCJtdXRhYmxlU291cmNlcyIsIl9pbnRlcm5hbFJvb3QiLCJyayIsInRrIiwiaGFzQXR0cmlidXRlIiwic2siLCJ1ayIsImhrIiwidW5zdGFibGVfb2JzZXJ2ZWRCaXRzIiwidW5tb3VudCIsImZvcm0iLCJWaiIsInZrIiwiRXZlbnRzIiwid2siLCJmaW5kRmliZXJCeUhvc3RJbnN0YW5jZSIsImJ1bmRsZVR5cGUiLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwieGsiLCJyZW5kZXJlckNvbmZpZyIsIm92ZXJyaWRlSG9va1N0YXRlIiwib3ZlcnJpZGVIb29rU3RhdGVEZWxldGVQYXRoIiwib3ZlcnJpZGVIb29rU3RhdGVSZW5hbWVQYXRoIiwib3ZlcnJpZGVQcm9wcyIsIm92ZXJyaWRlUHJvcHNEZWxldGVQYXRoIiwib3ZlcnJpZGVQcm9wc1JlbmFtZVBhdGgiLCJzZXRTdXNwZW5zZUhhbmRsZXIiLCJzY2hlZHVsZVVwZGF0ZSIsImN1cnJlbnREaXNwYXRjaGVyUmVmIiwiZmluZEhvc3RJbnN0YW5jZUJ5RmliZXIiLCJmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2giLCJzY2hlZHVsZVJlZnJlc2giLCJzY2hlZHVsZVJvb3QiLCJzZXRSZWZyZXNoSGFuZGxlciIsImdldEN1cnJlbnRGaWJlciIsInlrIiwiaXNEaXNhYmxlZCIsInN1cHBvcnRzRmliZXIiLCJpbmplY3QiLCJjcmVhdGVQb3J0YWwiLCJmaW5kRE9NTm9kZSIsImZsdXNoU3luYyIsInVubW91bnRDb21wb25lbnRBdE5vZGUiLCJ1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyIsInVuc3RhYmxlX2NyZWF0ZVBvcnRhbCIsInVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwicGVyZm9ybWFuY2UiLCJNZXNzYWdlQ2hhbm5lbCIsInVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJmbG9vciIsInBvcnQyIiwicG9ydDEiLCJvbm1lc3NhZ2UiLCJwb3N0TWVzc2FnZSIsInBvcCIsInNvcnRJbmRleCIsInN0YXJ0VGltZSIsImV4cGlyYXRpb25UaW1lIiwicHJpb3JpdHlMZXZlbCIsInVuc3RhYmxlX1Byb2ZpbGluZyIsInVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uIiwidW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGUiLCJ1bnN0YWJsZV9uZXh0IiwidW5zdGFibGVfcGF1c2VFeGVjdXRpb24iLCJ1bnN0YWJsZV93cmFwQ2FsbGJhY2siLCJnZXRPdmVybGF5QWxwaGEiLCJlbGV2YXRpb24iLCJhbHBoYVZhbHVlIiwidG9GaXhlZCIsIlBhcGVyUm9vdCIsInNxdWFyZSIsInJvdW5kZWQiLCJiYWNrZ3JvdW5kQ29sb3IiLCJzaGFwZSIsImJveFNoYWRvdyIsImJhY2tncm91bmRJbWFnZSIsIlBhcGVyIiwiaW5Qcm9wcyIsImNsYXNzZXMiLCJzbG90cyIsInVzZVV0aWxpdHlDbGFzc2VzIiwiY3JlYXRlU3BhY2luZyIsInNwYWNpbmdJbnB1dCIsIm11aSIsImFyZ3NJbnB1dCIsImNyZWF0ZUJyZWFrcG9pbnRzIiwidW5pdCIsInN0ZXAiLCJzb3J0ZWRWYWx1ZXMiLCJicmVha3BvaW50c0FzQXJyYXkiLCJicmVha3BvaW50MSIsImJyZWFrcG9pbnQyIiwic29ydEJyZWFrcG9pbnRzVmFsdWVzIiwiZG93biIsImJldHdlZW4iLCJlbmRJbmRleCIsIm5vdCIsImtleUluZGV4IiwiY29udGV4dFRoZW1lIiwiZ2V0VGhlbWVQcm9wcyIsInBhcmFtcyIsImNsYW1wIiwibWF4IiwiaGV4VG9SZ2IiLCJSZWdFeHAiLCJjb2xvcnMiLCJwYXJzZUludCIsImRlY29tcG9zZUNvbG9yIiwibWFya2VyIiwiY29sb3JTcGFjZSIsInBhcnNlRmxvYXQiLCJjb2xvckNoYW5uZWwiLCJkZWNvbXBvc2VkQ29sb3IiLCJyZWNvbXBvc2VDb2xvciIsInJnYlRvSGV4IiwiaW50IiwiaGV4IiwiaW50VG9IZXgiLCJoc2xUb1JnYiIsInJnYiIsImdldEx1bWluYW5jZSIsIk51bWJlciIsImdldENvbnRyYXN0UmF0aW8iLCJmb3JlZ3JvdW5kIiwibHVtQSIsImx1bUIiLCJhbHBoYSIsImRhcmtlbiIsImNvZWZmaWNpZW50IiwibGlnaHRlbiIsImVtcGhhc2l6ZSIsImdsb2JhbFN0YXRlQ2xhc3Nlc01hcHBpbmciLCJjb21wbGV0ZWQiLCJleHBhbmRlZCIsImZvY3VzZWQiLCJmb2N1c1Zpc2libGUiLCJyZXF1aXJlZCIsImdlbmVyYXRlVXRpbGl0eUNsYXNzIiwiZ2VuZXJhdGUiLCJBc3luY01vZGUiLCJDb25jdXJyZW50TW9kZSIsIkNvbnRleHRDb25zdW1lciIsIkNvbnRleHRQcm92aWRlciIsIkVsZW1lbnQiLCJMYXp5IiwiUG9ydGFsIiwiaXNBc3luY01vZGUiLCJpc0NvbmN1cnJlbnRNb2RlIiwiaXNDb250ZXh0Q29uc3VtZXIiLCJpc0NvbnRleHRQcm92aWRlciIsImlzRWxlbWVudCIsImlzRm9yd2FyZFJlZiIsImlzRnJhZ21lbnQiLCJpc0xhenkiLCJpc1BvcnRhbCIsImlzUHJvZmlsZXIiLCJpc1N0cmljdE1vZGUiLCJpc1N1c3BlbnNlIiwiaXNWYWxpZEVsZW1lbnRUeXBlIiwidHlwZU9mIiwianN4IiwianN4cyIsIkNvbnRleHQiLCJSZWFjdCIsImlzTG9hZGVkIiwiZGF0YVN0b3JhZ2UiLCJkZWxldGVMaW5rIiwiZGVsZXRlV2hpdGVMaXN0TGluayIsInNldFRvZ2dsZXMiLCJmaWVsZHMiLCJhZGRTaXRlIiwiYWRkV2hpdGVMaXN0U2l0ZSIsInVwZGF0ZVJlZGlyZWN0TGluayIsInVwZGF0ZVJlZGlyZWN0T3B0aW9uIiwicmVkaXJlY3RPcHRpb24iLCJGaWVsZFVwZGF0ZUVudW0iLCJTdG9yYWdlUHJvdmlkZXIiLCJzZXRJc0xvYWRlZCIsInNldERhdGFTdG9yYWdlIiwic2V0dGluZ3MiLCJpc0Jsb2NraW5nIiwic2l0ZUxpc3QiLCJpc1doaXRlTGlzdGluZyIsIndoaXRlTGlzdFNpdGVzIiwicmVkaXJlY3RMaW5rIiwibGlzdGVuZXJGdW5jIiwiY2hhbmdlcyIsIm9sZFZhbHVlIiwibmV3VmFsdWUiLCJvbkNoYW5nZWQiLCJhZGRMaXN0ZW5lciIsInJlbW92ZUxpc3RlbmVyIiwiaW5jbHVkZXMiLCJpc1N0YXJ0aW5nU3RyaW5nTWF0Y2giLCJzdHIxIiwic3RyMiIsImhhc0NvbmZsaWN0V2l0aFdoaXRlbGlzdCIsIndoaXRlbGlzdFNpdGVzIiwiZXZlcnkiLCJoYXNDb25mbGljdFdpdGhCbG9ja2xpc3QiLCJibG9ja0xpc3RTaXRlcyIsInNvbWUiLCJjb25mbGljdEhhbmRsZXIiLCJVUERBVEVfUkVESVJFQ1RfT1BUSU9OIiwiUmVkaXJlY3RFbnVtIiwiVVJMIiwiYWxlcnQiLCJVUERBVEVfUkVESVJFQ1RfTElOSyIsIkFERF9UT19TSVRFTElTVCIsIlVQREFURV9JU19CTE9DS0lORyIsIlVQREFURV9JU19XSElURUxJU1RJTkciLCJSRU1PVkVfRlJPTV9XSElURUxJU1QiLCJmaWx0ZXIiLCJzaXRlVVJMIiwiZmllbGRVcGRhdGUiLCJ1c2VTdG9yYWdlQ29udGV4dCIsInByZXZTZXR0aW5ncyIsIkJvb2xlYW4iLCJCTEFOSyIsIm5ld0RhdGEiLCJlbnN1cmVTZXR0aW5ncyIsInRhYnMiLCJxdWVyeSIsInNpdGVzIiwidGFiIiwiYmxvY2tTaXRlcyIsIm9uVXBkYXRlZCIsInRhYklkIiwiY2hhbmdlSW5mbyIsIm5hbWVzcGFjZSIsIm5Jc0Jsb2NraW5nIiwiblNpdGVMaXN0IiwibklzV2hpdGVMaXN0aW5nIiwibldoaXRlTGlzdFNpdGVzIiwiaXNXaGl0ZWxpc3QiLCJzaXRlIiwiaWdub3JlU2l0ZSIsImlzSW5MaXN0IiwiZmluZCIsInVwZGF0ZSIsInVzZVRoZW1lIiwicmVzb2x2ZVByb3BzIiwiY29tcG9zZUNsYXNzZXMiLCJnZXRVdGlsaXR5Q2xhc3MiLCJkZWZhdWx0R2VuZXJhdG9yIiwiQ2xhc3NOYW1lR2VuZXJhdG9yIiwiZ2VuZXJhdG9yIiwiY3JlYXRlQ2xhc3NOYW1lR2VuZXJhdG9yIiwiZ2VuZXJhdGVVdGlsaXR5Q2xhc3NlcyIsInNoYXBlSW5wdXQiLCJnZXRUaGVtZVZhbHVlIiwiaW5wdXRQcm9wcyIsInN0eWxlRnVuY3Rpb24iLCJzeCIsInRyYXZlcnNlIiwic3hJbnB1dCIsInN4T2JqZWN0IiwiZW1wdHlCcmVha3BvaW50cyIsInN0eWxlS2V5IiwibWF5YmVGbiIsImJyZWFrcG9pbnRzVmFsdWVzIiwib2JqZWN0cyIsImFsbEtleXMiLCJ1bmlvbiIsIm9iamVjdHNIYXZlU2FtZUtleXMiLCJ1bnN0YWJsZV9jcmVhdGVTdHlsZUZ1bmN0aW9uU3giLCJnZXRSYW5kb20iLCJxdW90ZXMiLCJOb3RBdmFpbGFibGUiLCJxdW90ZSIsImVuY291cmFnaW5nVGlwcyIsInRpdGxlIiwib2ZmZW5zaXZlVGlwcyIsIkVOQ09VUkFHSU5HIiwiT0ZGRU5TSVZFIiwiZ2V0RWxlbWVudEJ5SWQiXSwibWFwcGluZ3MiOiJhQUNFLElBQUlBLEVBQW1CLEdBR3ZCLFNBQVNDLEVBQW9CQyxHQUc1QixHQUFHRixFQUFpQkUsR0FDbkIsT0FBT0YsRUFBaUJFLEdBQVVDLFFBR25DLElBQUlDLEVBQVNKLEVBQWlCRSxHQUFZLENBQ3pDRyxFQUFHSCxFQUNISSxHQUFHLEVBQ0hILFFBQVMsSUFVVixPQU5BSSxFQUFRTCxHQUFVTSxLQUFLSixFQUFPRCxRQUFTQyxFQUFRQSxFQUFPRCxRQUFTRixHQUcvREcsRUFBT0UsR0FBSSxFQUdKRixFQUFPRCxRQUtmRixFQUFvQlEsRUFBSUYsRUFHeEJOLEVBQW9CUyxFQUFJVixFQUd4QkMsRUFBb0JVLEVBQUksU0FBU1IsRUFBU1MsRUFBTUMsR0FDM0NaLEVBQW9CYSxFQUFFWCxFQUFTUyxJQUNsQ0csT0FBT0MsZUFBZWIsRUFBU1MsRUFBTSxDQUFFSyxZQUFZLEVBQU1DLElBQUtMLEtBS2hFWixFQUFvQmtCLEVBQUksU0FBU2hCLEdBQ1gsb0JBQVhpQixRQUEwQkEsT0FBT0MsYUFDMUNOLE9BQU9DLGVBQWViLEVBQVNpQixPQUFPQyxZQUFhLENBQUVDLE1BQU8sV0FFN0RQLE9BQU9DLGVBQWViLEVBQVMsYUFBYyxDQUFFbUIsT0FBTyxLQVF2RHJCLEVBQW9Cc0IsRUFBSSxTQUFTRCxFQUFPRSxHQUV2QyxHQURVLEVBQVBBLElBQVVGLEVBQVFyQixFQUFvQnFCLElBQy9CLEVBQVBFLEVBQVUsT0FBT0YsRUFDcEIsR0FBVyxFQUFQRSxHQUE4QixpQkFBVkYsR0FBc0JBLEdBQVNBLEVBQU1HLFdBQVksT0FBT0gsRUFDaEYsSUFBSUksRUFBS1gsT0FBT1ksT0FBTyxNQUd2QixHQUZBMUIsRUFBb0JrQixFQUFFTyxHQUN0QlgsT0FBT0MsZUFBZVUsRUFBSSxVQUFXLENBQUVULFlBQVks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RUFBRyxFQUFHLEVBQUcsR0FBSSxHQUFJQSxFQUFhLEVBQUcsRUFBRyxHQUFJLEVBQUcsRUFBRyxFQUFHLEdBQUksRUFBRyxFQUFHLEVBQUcsR0FBSSxHQUFJQSxFQUFhLEVBQUcsRUFBRyxHQUFJLEVBQUcsRUFBRyxFQUFHLEdBQUksRUFBRyxFQUFHLEVBQUcsR0FBSSxHQUFJQSxFQUFhLEVBQUcsRUFBRyxHQUFJLEVBQUcsRUFBRyxHQUFJLEdBQUksRUFBRyxFQUFHLEVBQUcsR0FBSSxHQUFJQSxFQUFhLEVBQUcsRUFBRyxHQUFJLEVBQUcsRUFBRyxHQUFJLEdBQUksRUFBRyxFQUFHLEVBQUcsR0FBSSxHQUFJQSxFQUFhLEVBQUcsRUFBRyxHQUFJLEVBQUcsRUFBRyxHQUFJLEdBQUksRUFBRyxFQUFHLEVBQUcsR0FBSSxHQUFJQSxFQUFhLEVBQUcsRUFBRyxHQUFJLEVBQUcsRUFBRyxHQUFJLEdBQUksRUFBRyxFQUFHLEVBQUcsR0FBSSxHQUFJQSxFQUFhLEVBQUcsRUFBRyxHQUFJLEVBQUcsRUFBRyxHQUFJLEdBQUksRUFBRyxFQUFHLEVBQUcsR0FBSSxHQUFJQSxFQUFhLEVBQUcsRUFBRyxHQUFJLEVBQUcsRUFBRyxHQUFJLEdBQUksRUFBRyxFQUFHLEVBQUcsR0FBSSxHQUFJQSxFQUFhLEVBQUcsRUFBRyxJQUFLLEVBQUcsRUFBRyxHQUFJLEdBQUksRUFBRyxFQUFHLEVBQUcsR0FBSSxHQUFJQSxFQUFhLEVBQUcsRUFBRyxJQUFLLEVBQUcsRUFBRyxHQUFJLEdBQUksRUFBRyxFQUFHLEVBQUcsR0FBSSxHQUFJQSxFQUFhLEVBQUcsRUFBRyxJQUFLLEVBQUcsRUFBRyxHQUFJLEdBQUksRUFBRyxFQUFHLEVBQUcsR0FBSSxHQUFJQSxFQUFhLEVBQUcsRUFBRyxJQUFLLEVBQUcsRUFBRyxHQUFJLEdBQUksRUFBRyxFQUFHLEVBQUcsR0FBSSxHQUFJQSxFQUFhLEVBQUcsR0FBSSxJQUFLLEVBQUcsRUFBRyxHQUFJLEdBQUksRUFBRyxFQUFHLEVBQUcsR0FBSSxHQUFJQSxFQUFhLEVBQUcsR0FBSSxJ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b0JBQ1IsTUFFRixLQUFLLEVBQUFxekQsYUFBYXNFLFVBQ2hCTCxFQUFRSCxFQUFVTSxHQUNsQnozRCxFQUFRLGtCQUNSLE1BRUYsUUFDRSxPQUFPLGlDQUdYLE9BQ0UsdUJBQUtvSSxVQUFVLG9CQUNiLGdCQUFDLFVBQUssQ0FBQ3VpRCxVQUFXLEVBQUd2aUQsVUFBVyxlQUFlcEksR0FDN0MsdUJBQUtvSSxVQUFVLHVCQUNiLHNCQUFJOUcsTUFBTyxDQUFFc0csT0FBUSxTQUFXMHZELEVBQU1FLE9BQ3RDLDRCQUFPRixFQUFNbG5ELFdBZXZCLElBQUE2TCxRQUFPLGdCQVJLLElBRVIsZ0JBQUMsRUFBQXcxQyxnQkFBZSxLQUNkLGdCQUFDNEYsRUFBWSxPQUtSLE1BQUtuNUMsU0FBUzA1QyxlQUFlIiwiZmlsZSI6Im5vdF9hdmFpbGFibGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMTE0KTtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9leHRlbmRzKCkge1xuICBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkge1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuXG4gICAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7XG4gICAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXQ7XG4gIH07XG5cbiAgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59IiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LXJ1bnRpbWUuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsImltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuY29uc3QgX2V4Y2x1ZGVkID0gW1widmFyaWFudFwiXTtcbmltcG9ydCB7IHVuc3RhYmxlX2NhcGl0YWxpemUgYXMgY2FwaXRhbGl6ZSB9IGZyb20gJ0BtdWkvdXRpbHMnO1xuXG5mdW5jdGlvbiBpc0VtcHR5KHN0cmluZykge1xuICByZXR1cm4gc3RyaW5nLmxlbmd0aCA9PT0gMDtcbn1cbi8qKlxuICogR2VuZXJhdGVzIHN0cmluZyBjbGFzc0tleSBiYXNlZCBvbiB0aGUgcHJvcGVydGllcyBwcm92aWRlZC4gSXQgc3RhcnRzIHdpdGggdGhlXG4gKiB2YXJpYW50IGlmIGRlZmluZWQsIGFuZCB0aGVuIGl0IGFwcGVuZHMgYWxsIG90aGVyIHByb3BlcnRpZXMgaW4gYWxwaGFiZXRpY2FsIG9yZGVyLlxuICogQHBhcmFtIHtvYmplY3R9IHByb3BzIC0gdGhlIHByb3BlcnRpZXMgZm9yIHdoaWNoIHRoZSBjbGFzc0tleSBzaG91bGQgYmUgY3JlYXRlZC5cbiAqL1xuXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHByb3BzVG9DbGFzc0tleShwcm9wcykge1xuICBjb25zdCB7XG4gICAgdmFyaWFudFxuICB9ID0gcHJvcHMsXG4gICAgICAgIG90aGVyID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UocHJvcHMsIF9leGNsdWRlZCk7XG5cbiAgbGV0IGNsYXNzS2V5ID0gdmFyaWFudCB8fCAnJztcbiAgT2JqZWN0LmtleXMob3RoZXIpLnNvcnQoKS5mb3JFYWNoKGtleSA9PiB7XG4gICAgaWYgKGtleSA9PT0gJ2NvbG9yJykge1xuICAgICAgY2xhc3NLZXkgKz0gaXNFbXB0eShjbGFzc0tleSkgPyBwcm9wc1trZXldIDogY2FwaXRhbGl6ZShwcm9wc1trZXldKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY2xhc3NLZXkgKz0gYCR7aXNFbXB0eShjbGFzc0tleSkgPyBrZXkgOiBjYXBpdGFsaXplKGtleSl9JHtjYXBpdGFsaXplKHByb3BzW2tleV0udG9TdHJpbmcoKSl9YDtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gY2xhc3NLZXk7XG59IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmNvbnN0IF9leGNsdWRlZCA9IFtcIm5hbWVcIiwgXCJzbG90XCIsIFwic2tpcFZhcmlhbnRzUmVzb2x2ZXJcIiwgXCJza2lwU3hcIiwgXCJvdmVycmlkZXNSZXNvbHZlclwiXSxcbiAgICAgIF9leGNsdWRlZDIgPSBbXCJ0aGVtZVwiXSxcbiAgICAgIF9leGNsdWRlZDMgPSBbXCJ0aGVtZVwiXTtcbmltcG9ydCBzdHlsZWRFbmdpbmVTdHlsZWQgZnJvbSAnQG11aS9zdHlsZWQtZW5naW5lJztcbmltcG9ydCB7IGdldERpc3BsYXlOYW1lIH0gZnJvbSAnQG11aS91dGlscyc7XG5pbXBvcnQgY3JlYXRlVGhlbWUgZnJvbSAnLi9jcmVhdGVUaGVtZSc7XG5pbXBvcnQgcHJvcHNUb0NsYXNzS2V5IGZyb20gJy4vcHJvcHNUb0NsYXNzS2V5JztcbmltcG9ydCBkZWZhdWx0U3R5bGVGdW5jdGlvblN4IGZyb20gJy4vc3R5bGVGdW5jdGlvblN4JztcblxuZnVuY3Rpb24gaXNFbXB0eShvYmopIHtcbiAgcmV0dXJuIE9iamVjdC5rZXlzKG9iaikubGVuZ3RoID09PSAwO1xufVxuXG5jb25zdCBnZXRTdHlsZU92ZXJyaWRlcyA9IChuYW1lLCB0aGVtZSkgPT4ge1xuICBpZiAodGhlbWUuY29tcG9uZW50cyAmJiB0aGVtZS5jb21wb25lbnRzW25hbWVdICYmIHRoZW1lLmNvbXBvbmVudHNbbmFtZV0uc3R5bGVPdmVycmlkZXMpIHtcbiAgICByZXR1cm4gdGhlbWUuY29tcG9uZW50c1tuYW1lXS5zdHlsZU92ZXJyaWRlcztcbiAgfVxuXG4gIHJldHVybiBudWxsO1xufTtcblxuY29uc3QgZ2V0VmFyaWFudFN0eWxlcyA9IChuYW1lLCB0aGVtZSkgPT4ge1xuICBsZXQgdmFyaWFudHMgPSBbXTtcblxuICBpZiAodGhlbWUgJiYgdGhlbWUuY29tcG9uZW50cyAmJiB0aGVtZS5jb21wb25lbnRzW25hbWVdICYmIHRoZW1lLmNvbXBvbmVudHNbbmFtZV0udmFyaWFudHMpIHtcbiAgICB2YXJpYW50cyA9IHRoZW1lLmNvbXBvbmVudHNbbmFtZV0udmFyaWFudHM7XG4gIH1cblxuICBjb25zdCB2YXJpYW50c1N0eWxlcyA9IHt9O1xuICB2YXJpYW50cy5mb3JFYWNoKGRlZmluaXRpb24gPT4ge1xuICAgIGNvbnN0IGtleSA9IHByb3BzVG9DbGFzc0tleShkZWZpbml0aW9uLnByb3BzKTtcbiAgICB2YXJpYW50c1N0eWxlc1trZXldID0gZGVmaW5pdGlvbi5zdHlsZTtcbiAgfSk7XG4gIHJldHVybiB2YXJpYW50c1N0eWxlcztcbn07XG5cbmNvbnN0IHZhcmlhbnRzUmVzb2x2ZXIgPSAocHJvcHMsIHN0eWxlcywgdGhlbWUsIG5hbWUpID0+IHtcbiAgdmFyIF90aGVtZSRjb21wb25lbnRzLCBfdGhlbWUkY29tcG9uZW50cyRuYW07XG5cbiAgY29uc3Qge1xuICAgIG93bmVyU3RhdGUgPSB7fVxuICB9ID0gcHJvcHM7XG4gIGNvbnN0IHZhcmlhbnRzU3R5bGVzID0gW107XG4gIGNvbnN0IHRoZW1lVmFyaWFudHMgPSB0aGVtZSA9PSBudWxsID8gdm9pZCAwIDogKF90aGVtZSRjb21wb25lbnRzID0gdGhlbWUuY29tcG9uZW50cykgPT0gbnVsbCA/IHZvaWQgMCA6IChfdGhlbWUkY29tcG9uZW50cyRuYW0gPSBfdGhlbWUkY29tcG9uZW50c1tuYW1lXSkgPT0gbnVsbCA/IHZvaWQgMCA6IF90aGVtZSRjb21wb25lbnRzJG5hbS52YXJpYW50cztcblxuICBpZiAodGhlbWVWYXJpYW50cykge1xuICAgIHRoZW1lVmFyaWFudHMuZm9yRWFjaCh0aGVtZVZhcmlhbnQgPT4ge1xuICAgICAgbGV0IGlzTWF0Y2ggPSB0cnVlO1xuICAgICAgT2JqZWN0LmtleXModGhlbWVWYXJpYW50LnByb3BzKS5mb3JFYWNoKGtleSA9PiB7XG4gICAgICAgIGlmIChvd25lclN0YXRlW2tleV0gIT09IHRoZW1lVmFyaWFudC5wcm9wc1trZXldICYmIHByb3BzW2tleV0gIT09IHRoZW1lVmFyaWFudC5wcm9wc1trZXldKSB7XG4gICAgICAgICAgaXNNYXRjaCA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgaWYgKGlzTWF0Y2gpIHtcbiAgICAgICAgdmFyaWFudHNTdHlsZXMucHVzaChzdHlsZXNbcHJvcHNUb0NsYXNzS2V5KHRoZW1lVmFyaWFudC5wcm9wcyldKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiB2YXJpYW50c1N0eWxlcztcbn07IC8vIFVwZGF0ZSAvc3lzdGVtL3N0eWxlZC8jYXBpIGluIGNhc2UgaWYgdGhpcyBjaGFuZ2VzXG5cblxuZXhwb3J0IGZ1bmN0aW9uIHNob3VsZEZvcndhcmRQcm9wKHByb3ApIHtcbiAgcmV0dXJuIHByb3AgIT09ICdvd25lclN0YXRlJyAmJiBwcm9wICE9PSAndGhlbWUnICYmIHByb3AgIT09ICdzeCcgJiYgcHJvcCAhPT0gJ2FzJztcbn1cbmV4cG9ydCBjb25zdCBzeXN0ZW1EZWZhdWx0VGhlbWUgPSBjcmVhdGVUaGVtZSgpO1xuXG5jb25zdCBsb3dlcmNhc2VGaXJzdExldHRlciA9IHN0cmluZyA9PiB7XG4gIHJldHVybiBzdHJpbmcuY2hhckF0KDApLnRvTG93ZXJDYXNlKCkgKyBzdHJpbmcuc2xpY2UoMSk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVTdHlsZWQoaW5wdXQgPSB7fSkge1xuICBjb25zdCB7XG4gICAgZGVmYXVsdFRoZW1lID0gc3lzdGVtRGVmYXVsdFRoZW1lLFxuICAgIHJvb3RTaG91bGRGb3J3YXJkUHJvcCA9IHNob3VsZEZvcndhcmRQcm9wLFxuICAgIHNsb3RTaG91bGRGb3J3YXJkUHJvcCA9IHNob3VsZEZvcndhcmRQcm9wLFxuICAgIHN0eWxlRnVuY3Rpb25TeCA9IGRlZmF1bHRTdHlsZUZ1bmN0aW9uU3hcbiAgfSA9IGlucHV0O1xuICByZXR1cm4gKHRhZywgaW5wdXRPcHRpb25zID0ge30pID0+IHtcbiAgICBjb25zdCB7XG4gICAgICBuYW1lOiBjb21wb25lbnROYW1lLFxuICAgICAgc2xvdDogY29tcG9uZW50U2xvdCxcbiAgICAgIHNraXBWYXJpYW50c1Jlc29sdmVyOiBpbnB1dFNraXBWYXJpYW50c1Jlc29sdmVyLFxuICAgICAgc2tpcFN4OiBpbnB1dFNraXBTeCxcbiAgICAgIG92ZXJyaWRlc1Jlc29sdmVyXG4gICAgfSA9IGlucHV0T3B0aW9ucyxcbiAgICAgICAgICBvcHRpb25zID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoaW5wdXRPcHRpb25zLCBfZXhjbHVkZWQpOyAvLyBpZiBza2lwVmFyaWFudHNSZXNvbHZlciBvcHRpb24gaXMgZGVmaW5lZCwgdGFrZSB0aGUgdmFsdWUsIG90aGVyd2lzZSwgdHJ1ZSBmb3Igcm9vdCBhbmQgZmFsc2UgZm9yIG90aGVyIHNsb3RzLlxuXG5cbiAgICBjb25zdCBza2lwVmFyaWFudHNSZXNvbHZlciA9IGlucHV0U2tpcFZhcmlhbnRzUmVzb2x2ZXIgIT09IHVuZGVmaW5lZCA/IGlucHV0U2tpcFZhcmlhbnRzUmVzb2x2ZXIgOiBjb21wb25lbnRTbG90ICYmIGNvbXBvbmVudFNsb3QgIT09ICdSb290JyB8fCBmYWxzZTtcbiAgICBjb25zdCBza2lwU3ggPSBpbnB1dFNraXBTeCB8fCBmYWxzZTtcbiAgICBsZXQgbGFiZWw7XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgaWYgKGNvbXBvbmVudE5hbWUpIHtcbiAgICAgICAgbGFiZWwgPSBgJHtjb21wb25lbnROYW1lfS0ke2xvd2VyY2FzZUZpcnN0TGV0dGVyKGNvbXBvbmVudFNsb3QgfHwgJ1Jvb3QnKX1gO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxldCBzaG91bGRGb3J3YXJkUHJvcE9wdGlvbiA9IHNob3VsZEZvcndhcmRQcm9wO1xuXG4gICAgaWYgKGNvbXBvbmVudFNsb3QgPT09ICdSb290Jykge1xuICAgICAgc2hvdWxkRm9yd2FyZFByb3BPcHRpb24gPSByb290U2hvdWxkRm9yd2FyZFByb3A7XG4gICAgfSBlbHNlIGlmIChjb21wb25lbnRTbG90KSB7XG4gICAgICAvLyBhbnkgb3RoZXIgc2xvdCBzcGVjaWZpZWRcbiAgICAgIHNob3VsZEZvcndhcmRQcm9wT3B0aW9uID0gc2xvdFNob3VsZEZvcndhcmRQcm9wO1xuICAgIH1cblxuICAgIGNvbnN0IGRlZmF1bHRTdHlsZWRSZXNvbHZlciA9IHN0eWxlZEVuZ2luZVN0eWxlZCh0YWcsIF9leHRlbmRzKHtcbiAgICAgIHNob3VsZEZvcndhcmRQcm9wOiBzaG91bGRGb3J3YXJkUHJvcE9wdGlvbixcbiAgICAgIGxhYmVsXG4gICAgfSwgb3B0aW9ucykpO1xuXG4gICAgY29uc3QgbXVpU3R5bGVkUmVzb2x2ZXIgPSAoc3R5bGVBcmcsIC4uLmV4cHJlc3Npb25zKSA9PiB7XG4gICAgICBjb25zdCBleHByZXNzaW9uc1dpdGhEZWZhdWx0VGhlbWUgPSBleHByZXNzaW9ucyA/IGV4cHJlc3Npb25zLm1hcChzdHlsZXNBcmcgPT4ge1xuICAgICAgICAvLyBPbiB0aGUgc2VydmVyIGVtb3Rpb24gZG9lc24ndCB1c2UgUmVhY3QuZm9yd2FyZFJlZiBmb3IgY3JlYXRpbmcgY29tcG9uZW50cywgc28gdGhlIGNyZWF0ZWRcbiAgICAgICAgLy8gY29tcG9uZW50IHN0YXlzIGFzIGEgZnVuY3Rpb24uIFRoaXMgY29uZGl0aW9uIG1ha2VzIHN1cmUgdGhhdCB3ZSBkbyBub3QgaW50ZXJwb2xhdGUgZnVuY3Rpb25zXG4gICAgICAgIC8vIHdoaWNoIGFyZSBiYXNpY2FsbHkgY29tcG9uZW50cyB1c2VkIGFzIGEgc2VsZWN0b3JzLlxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZXJzY29yZS1kYW5nbGVcbiAgICAgICAgcmV0dXJuIHR5cGVvZiBzdHlsZXNBcmcgPT09ICdmdW5jdGlvbicgJiYgc3R5bGVzQXJnLl9fZW1vdGlvbl9yZWFsICE9PSBzdHlsZXNBcmcgPyBfcmVmID0+IHtcbiAgICAgICAgICBsZXQge1xuICAgICAgICAgICAgdGhlbWU6IHRoZW1lSW5wdXRcbiAgICAgICAgICB9ID0gX3JlZixcbiAgICAgICAgICAgICAgb3RoZXIgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmLCBfZXhjbHVkZWQyKTtcblxuICAgICAgICAgIHJldHVybiBzdHlsZXNBcmcoX2V4dGVuZHMoe1xuICAgICAgICAgICAgdGhlbWU6IGlzRW1wdHkodGhlbWVJbnB1dCkgPyBkZWZhdWx0VGhlbWUgOiB0aGVtZUlucHV0XG4gICAgICAgICAgfSwgb3RoZXIpKTtcbiAgICAgICAgfSA6IHN0eWxlc0FyZztcbiAgICAgIH0pIDogW107XG4gICAgICBsZXQgdHJhbnNmb3JtZWRTdHlsZUFyZyA9IHN0eWxlQXJnO1xuXG4gICAgICBpZiAoY29tcG9uZW50TmFtZSAmJiBvdmVycmlkZXNSZXNvbHZlcikge1xuICAgICAgICBleHByZXNzaW9uc1dpdGhEZWZhdWx0VGhlbWUucHVzaChwcm9wcyA9PiB7XG4gICAgICAgICAgY29uc3QgdGhlbWUgPSBpc0VtcHR5KHByb3BzLnRoZW1lKSA/IGRlZmF1bHRUaGVtZSA6IHByb3BzLnRoZW1lO1xuICAgICAgICAgIGNvbnN0IHN0eWxlT3ZlcnJpZGVzID0gZ2V0U3R5bGVPdmVycmlkZXMoY29tcG9uZW50TmFtZSwgdGhlbWUpO1xuXG4gICAgICAgICAgaWYgKHN0eWxlT3ZlcnJpZGVzKSB7XG4gICAgICAgICAgICBjb25zdCByZXNvbHZlZFN0eWxlT3ZlcnJpZGVzID0ge307XG4gICAgICAgICAgICBPYmplY3QuZW50cmllcyhzdHlsZU92ZXJyaWRlcykuZm9yRWFjaCgoW3Nsb3RLZXksIHNsb3RTdHlsZV0pID0+IHtcbiAgICAgICAgICAgICAgcmVzb2x2ZWRTdHlsZU92ZXJyaWRlc1tzbG90S2V5XSA9IHR5cGVvZiBzbG90U3R5bGUgPT09ICdmdW5jdGlvbicgPyBzbG90U3R5bGUoX2V4dGVuZHMoe30sIHByb3BzLCB7XG4gICAgICAgICAgICAgICAgdGhlbWVcbiAgICAgICAgICAgICAgfSkpIDogc2xvdFN0eWxlO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gb3ZlcnJpZGVzUmVzb2x2ZXIocHJvcHMsIHJlc29sdmVkU3R5bGVPdmVycmlkZXMpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgaWYgKGNvbXBvbmVudE5hbWUgJiYgIXNraXBWYXJpYW50c1Jlc29sdmVyKSB7XG4gICAgICAgIGV4cHJlc3Npb25zV2l0aERlZmF1bHRUaGVtZS5wdXNoKHByb3BzID0+IHtcbiAgICAgICAgICBjb25zdCB0aGVtZSA9IGlzRW1wdHkocHJvcHMudGhlbWUpID8gZGVmYXVsdFRoZW1lIDogcHJvcHMudGhlbWU7XG4gICAgICAgICAgcmV0dXJuIHZhcmlhbnRzUmVzb2x2ZXIocHJvcHMsIGdldFZhcmlhbnRTdHlsZXMoY29tcG9uZW50TmFtZSwgdGhlbWUpLCB0aGVtZSwgY29tcG9uZW50TmFtZSk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICBpZiAoIXNraXBTeCkge1xuICAgICAgICBleHByZXNzaW9uc1dpdGhEZWZhdWx0VGhlbWUucHVzaChwcm9wcyA9PiB7XG4gICAgICAgICAgY29uc3QgdGhlbWUgPSBpc0VtcHR5KHByb3BzLnRoZW1lKSA/IGRlZmF1bHRUaGVtZSA6IHByb3BzLnRoZW1lO1xuICAgICAgICAgIHJldHVybiBzdHlsZUZ1bmN0aW9uU3goX2V4dGVuZHMoe30sIHByb3BzLCB7XG4gICAgICAgICAgICB0aGVtZVxuICAgICAgICAgIH0pKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IG51bU9mQ3VzdG9tRm5zQXBwbGllZCA9IGV4cHJlc3Npb25zV2l0aERlZmF1bHRUaGVtZS5sZW5ndGggLSBleHByZXNzaW9ucy5sZW5ndGg7XG5cbiAgICAgIGlmIChBcnJheS5pc0FycmF5KHN0eWxlQXJnKSAmJiBudW1PZkN1c3RvbUZuc0FwcGxpZWQgPiAwKSB7XG4gICAgICAgIGNvbnN0IHBsYWNlaG9sZGVycyA9IG5ldyBBcnJheShudW1PZkN1c3RvbUZuc0FwcGxpZWQpLmZpbGwoJycpOyAvLyBJZiB0aGUgdHlwZSBpcyBhcnJheSwgdGhhbiB3ZSBuZWVkIHRvIGFkZCBwbGFjZWhvbGRlcnMgaW4gdGhlIHRlbXBsYXRlIGZvciB0aGUgb3ZlcnJpZGVzLCB2YXJpYW50cyBhbmQgdGhlIHN4IHN0eWxlcy5cblxuICAgICAgICB0cmFuc2Zvcm1lZFN0eWxlQXJnID0gWy4uLnN0eWxlQXJnLCAuLi5wbGFjZWhvbGRlcnNdO1xuICAgICAgICB0cmFuc2Zvcm1lZFN0eWxlQXJnLnJhdyA9IFsuLi5zdHlsZUFyZy5yYXcsIC4uLnBsYWNlaG9sZGVyc107XG4gICAgICB9IGVsc2UgaWYgKHR5cGVvZiBzdHlsZUFyZyA9PT0gJ2Z1bmN0aW9uJyAmJiAvLyBPbiB0aGUgc2VydmVyIGVtb3Rpb24gZG9lc24ndCB1c2UgUmVhY3QuZm9yd2FyZFJlZiBmb3IgY3JlYXRpbmcgY29tcG9uZW50cywgc28gdGhlIGNyZWF0ZWRcbiAgICAgIC8vIGNvbXBvbmVudCBzdGF5cyBhcyBhIGZ1bmN0aW9uLiBUaGlzIGNvbmRpdGlvbiBtYWtlcyBzdXJlIHRoYXQgd2UgZG8gbm90IGludGVycG9sYXRlIGZ1bmN0aW9uc1xuICAgICAgLy8gd2hpY2ggYXJlIGJhc2ljYWxseSBjb21wb25lbnRzIHVzZWQgYXMgYSBzZWxlY3RvcnMuXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZXJzY29yZS1kYW5nbGVcbiAgICAgIHN0eWxlQXJnLl9fZW1vdGlvbl9yZWFsICE9PSBzdHlsZUFyZykge1xuICAgICAgICAvLyBJZiB0aGUgdHlwZSBpcyBmdW5jdGlvbiwgd2UgbmVlZCB0byBkZWZpbmUgdGhlIGRlZmF1bHQgdGhlbWUuXG4gICAgICAgIHRyYW5zZm9ybWVkU3R5bGVBcmcgPSBfcmVmMiA9PiB7XG4gICAgICAgICAgbGV0IHtcbiAgICAgICAgICAgIHRoZW1lOiB0aGVtZUlucHV0XG4gICAgICAgICAgfSA9IF9yZWYyLFxuICAgICAgICAgICAgICBvdGhlciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYyLCBfZXhjbHVkZWQzKTtcblxuICAgICAgICAgIHJldHVybiBzdHlsZUFyZyhfZXh0ZW5kcyh7XG4gICAgICAgICAgICB0aGVtZTogaXNFbXB0eSh0aGVtZUlucHV0KSA/IGRlZmF1bHRUaGVtZSA6IHRoZW1lSW5wdXRcbiAgICAgICAgICB9LCBvdGhlcikpO1xuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICBjb25zdCBDb21wb25lbnQgPSBkZWZhdWx0U3R5bGVkUmVzb2x2ZXIodHJhbnNmb3JtZWRTdHlsZUFyZywgLi4uZXhwcmVzc2lvbnNXaXRoRGVmYXVsdFRoZW1lKTtcblxuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgbGV0IGRpc3BsYXlOYW1lO1xuXG4gICAgICAgIGlmIChjb21wb25lbnROYW1lKSB7XG4gICAgICAgICAgZGlzcGxheU5hbWUgPSBgJHtjb21wb25lbnROYW1lfSR7Y29tcG9uZW50U2xvdCB8fCAnJ31gO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGRpc3BsYXlOYW1lID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBkaXNwbGF5TmFtZSA9IGBTdHlsZWQoJHtnZXREaXNwbGF5TmFtZSh0YWcpfSlgO1xuICAgICAgICB9XG5cbiAgICAgICAgQ29tcG9uZW50LmRpc3BsYXlOYW1lID0gZGlzcGxheU5hbWU7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBDb21wb25lbnQ7XG4gICAgfTtcblxuICAgIGlmIChkZWZhdWx0U3R5bGVkUmVzb2x2ZXIud2l0aENvbmZpZykge1xuICAgICAgbXVpU3R5bGVkUmVzb2x2ZXIud2l0aENvbmZpZyA9IGRlZmF1bHRTdHlsZWRSZXNvbHZlci53aXRoQ29uZmlnO1xuICAgIH1cblxuICAgIHJldHVybiBtdWlTdHlsZWRSZXNvbHZlcjtcbiAgfTtcbn0iLCJpbXBvcnQgeyBjcmVhdGVTdHlsZWQsIHNob3VsZEZvcndhcmRQcm9wIH0gZnJvbSAnQG11aS9zeXN0ZW0nO1xuaW1wb3J0IGRlZmF1bHRUaGVtZSBmcm9tICcuL2RlZmF1bHRUaGVtZSc7XG5leHBvcnQgY29uc3Qgcm9vdFNob3VsZEZvcndhcmRQcm9wID0gcHJvcCA9PiBzaG91bGRGb3J3YXJkUHJvcChwcm9wKSAmJiBwcm9wICE9PSAnY2xhc3Nlcyc7XG5leHBvcnQgY29uc3Qgc2xvdFNob3VsZEZvcndhcmRQcm9wID0gc2hvdWxkRm9yd2FyZFByb3A7XG5jb25zdCBzdHlsZWQgPSBjcmVhdGVTdHlsZWQoe1xuICBkZWZhdWx0VGhlbWUsXG4gIHJvb3RTaG91bGRGb3J3YXJkUHJvcFxufSk7XG5leHBvcnQgZGVmYXVsdCBzdHlsZWQ7IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCkge1xuICBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTtcbiAgdmFyIHRhcmdldCA9IHt9O1xuICB2YXIgc291cmNlS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7XG4gIHZhciBrZXksIGk7XG5cbiAgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHtcbiAgICBrZXkgPSBzb3VyY2VLZXlzW2ldO1xuICAgIGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7XG4gICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59IiwiZnVuY3Rpb24gdG9WYWwobWl4KSB7XG5cdHZhciBrLCB5LCBzdHI9Jyc7XG5cblx0aWYgKHR5cGVvZiBtaXggPT09ICdzdHJpbmcnIHx8IHR5cGVvZiBtaXggPT09ICdudW1iZXInKSB7XG5cdFx0c3RyICs9IG1peDtcblx0fSBlbHNlIGlmICh0eXBlb2YgbWl4ID09PSAnb2JqZWN0Jykge1xuXHRcdGlmIChBcnJheS5pc0FycmF5KG1peCkpIHtcblx0XHRcdGZvciAoaz0wOyBrIDwgbWl4Lmxlbmd0aDsgaysrKSB7XG5cdFx0XHRcdGlmIChtaXhba10pIHtcblx0XHRcdFx0XHRpZiAoeSA9IHRvVmFsKG1peFtrXSkpIHtcblx0XHRcdFx0XHRcdHN0ciAmJiAoc3RyICs9ICcgJyk7XG5cdFx0XHRcdFx0XHRzdHIgKz0geTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0Zm9yIChrIGluIG1peCkge1xuXHRcdFx0XHRpZiAobWl4W2tdKSB7XG5cdFx0XHRcdFx0c3RyICYmIChzdHIgKz0gJyAnKTtcblx0XHRcdFx0XHRzdHIgKz0gaztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiBzdHI7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uICgpIHtcblx0dmFyIGk9MCwgdG1wLCB4LCBzdHI9Jyc7XG5cdHdoaWxlIChpIDwgYXJndW1lbnRzLmxlbmd0aCkge1xuXHRcdGlmICh0bXAgPSBhcmd1bWVudHNbaSsrXSkge1xuXHRcdFx0aWYgKHggPSB0b1ZhbCh0bXApKSB7XG5cdFx0XHRcdHN0ciAmJiAoc3RyICs9ICcgJyk7XG5cdFx0XHRcdHN0ciArPSB4XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cdHJldHVybiBzdHI7XG59XG4iLCJpbXBvcnQgeyB1c2VUaGVtZVByb3BzIGFzIHN5c3RlbVVzZVRoZW1lUHJvcHMgfSBmcm9tICdAbXVpL3N5c3RlbSc7XG5pbXBvcnQgZGVmYXVsdFRoZW1lIGZyb20gJy4vZGVmYXVsdFRoZW1lJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHVzZVRoZW1lUHJvcHMoe1xuICBwcm9wcyxcbiAgbmFtZVxufSkge1xuICByZXR1cm4gc3lzdGVtVXNlVGhlbWVQcm9wcyh7XG4gICAgcHJvcHMsXG4gICAgbmFtZSxcbiAgICBkZWZhdWx0VGhlbWVcbiAgfSk7XG59IiwiaW1wb3J0IHsgdW5zdGFibGVfY2FwaXRhbGl6ZSBhcyBjYXBpdGFsaXplIH0gZnJvbSAnQG11aS91dGlscyc7XG5pbXBvcnQgcmVzcG9uc2l2ZVByb3BUeXBlIGZyb20gJy4vcmVzcG9uc2l2ZVByb3BUeXBlJztcbmltcG9ydCB7IGhhbmRsZUJyZWFrcG9pbnRzIH0gZnJvbSAnLi9icmVha3BvaW50cyc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0UGF0aChvYmosIHBhdGgpIHtcbiAgaWYgKCFwYXRoIHx8IHR5cGVvZiBwYXRoICE9PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBudWxsO1xuICB9IC8vIENoZWNrIGlmIENTUyB2YXJpYWJsZXMgYXJlIHVzZWRcblxuXG4gIGlmIChvYmogJiYgb2JqLnZhcnMpIHtcbiAgICBjb25zdCB2YWwgPSBgdmFycy4ke3BhdGh9YC5zcGxpdCgnLicpLnJlZHVjZSgoYWNjLCBpdGVtKSA9PiBhY2MgJiYgYWNjW2l0ZW1dID8gYWNjW2l0ZW1dIDogbnVsbCwgb2JqKTtcblxuICAgIGlmICh2YWwgIT0gbnVsbCkge1xuICAgICAgcmV0dXJuIHZhbDtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcGF0aC5zcGxpdCgnLicpLnJlZHVjZSgoYWNjLCBpdGVtKSA9PiB7XG4gICAgaWYgKGFjYyAmJiBhY2NbaXRlbV0gIT0gbnVsbCkge1xuICAgICAgcmV0dXJuIGFjY1tpdGVtXTtcbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfSwgb2JqKTtcbn1cblxuZnVuY3Rpb24gZ2V0VmFsdWUodGhlbWVNYXBwaW5nLCB0cmFuc2Zvcm0sIHByb3BWYWx1ZUZpbmFsLCB1c2VyVmFsdWUgPSBwcm9wVmFsdWVGaW5hbCkge1xuICBsZXQgdmFsdWU7XG5cbiAgaWYgKHR5cGVvZiB0aGVtZU1hcHBpbmcgPT09ICdmdW5jdGlvbicpIHtcbiAgICB2YWx1ZSA9IHRoZW1lTWFwcGluZyhwcm9wVmFsdWVGaW5hbCk7XG4gIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheSh0aGVtZU1hcHBpbmcpKSB7XG4gICAgdmFsdWUgPSB0aGVtZU1hcHBpbmdbcHJvcFZhbHVlRmluYWxdIHx8IHVzZXJWYWx1ZTtcbiAgfSBlbHNlIHtcbiAgICB2YWx1ZSA9IGdldFBhdGgodGhlbWVNYXBwaW5nLCBwcm9wVmFsdWVGaW5hbCkgfHwgdXNlclZhbHVlO1xuICB9XG5cbiAgaWYgKHRyYW5zZm9ybSkge1xuICAgIHZhbHVlID0gdHJhbnNmb3JtKHZhbHVlKTtcbiAgfVxuXG4gIHJldHVybiB2YWx1ZTtcbn1cblxuZnVuY3Rpb24gc3R5bGUob3B0aW9ucykge1xuICBjb25zdCB7XG4gICAgcHJvcCxcbiAgICBjc3NQcm9wZXJ0eSA9IG9wdGlvbnMucHJvcCxcbiAgICB0aGVtZUtleSxcbiAgICB0cmFuc2Zvcm1cbiAgfSA9IG9wdGlvbnM7XG5cbiAgY29uc3QgZm4gPSBwcm9wcyA9PiB7XG4gICAgaWYgKHByb3BzW3Byb3BdID09IG51bGwpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIGNvbnN0IHByb3BWYWx1ZSA9IHByb3BzW3Byb3BdO1xuICAgIGNvbnN0IHRoZW1lID0gcHJvcHMudGhlbWU7XG4gICAgY29uc3QgdGhlbWVNYXBwaW5nID0gZ2V0UGF0aCh0aGVtZSwgdGhlbWVLZXkpIHx8IHt9O1xuXG4gICAgY29uc3Qgc3R5bGVGcm9tUHJvcFZhbHVlID0gcHJvcFZhbHVlRmluYWwgPT4ge1xuICAgICAgbGV0IHZhbHVlID0gZ2V0VmFsdWUodGhlbWVNYXBwaW5nLCB0cmFuc2Zvcm0sIHByb3BWYWx1ZUZpbmFsKTtcblxuICAgICAgaWYgKHByb3BWYWx1ZUZpbmFsID09PSB2YWx1ZSAmJiB0eXBlb2YgcHJvcFZhbHVlRmluYWwgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIC8vIEhhdmVuJ3QgZm91bmQgdmFsdWVcbiAgICAgICAgdmFsdWUgPSBnZXRWYWx1ZSh0aGVtZU1hcHBpbmcsIHRyYW5zZm9ybSwgYCR7cHJvcH0ke3Byb3BWYWx1ZUZpbmFsID09PSAnZGVmYXVsdCcgPyAnJyA6IGNhcGl0YWxpemUocHJvcFZhbHVlRmluYWwpfWAsIHByb3BWYWx1ZUZpbmFsKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGNzc1Byb3BlcnR5ID09PSBmYWxzZSkge1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIFtjc3NQcm9wZXJ0eV06IHZhbHVlXG4gICAgICB9O1xuICAgIH07XG5cbiAgICByZXR1cm4gaGFuZGxlQnJlYWtwb2ludHMocHJvcHMsIHByb3BWYWx1ZSwgc3R5bGVGcm9tUHJvcFZhbHVlKTtcbiAgfTtcblxuICBmbi5wcm9wVHlwZXMgPSBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nID8ge1xuICAgIFtwcm9wXTogcmVzcG9uc2l2ZVByb3BUeXBlXG4gIH0gOiB7fTtcbiAgZm4uZmlsdGVyUHJvcHMgPSBbcHJvcF07XG4gIHJldHVybiBmbjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgc3R5bGU7IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgZGVlcG1lcmdlIH0gZnJvbSAnQG11aS91dGlscyc7XG5pbXBvcnQgbWVyZ2UgZnJvbSAnLi9tZXJnZSc7IC8vIFRoZSBicmVha3BvaW50ICoqc3RhcnQqKiBhdCB0aGlzIHZhbHVlLlxuLy8gRm9yIGluc3RhbmNlIHdpdGggdGhlIGZpcnN0IGJyZWFrcG9pbnQgeHM6IFt4cywgc21bLlxuXG5leHBvcnQgY29uc3QgdmFsdWVzID0ge1xuICB4czogMCxcbiAgLy8gcGhvbmVcbiAgc206IDYwMCxcbiAgLy8gdGFibGV0XG4gIG1kOiA5MDAsXG4gIC8vIHNtYWxsIGxhcHRvcFxuICBsZzogMTIwMCxcbiAgLy8gZGVza3RvcFxuICB4bDogMTUzNiAvLyBsYXJnZSBzY3JlZW5cblxufTtcbmNvbnN0IGRlZmF1bHRCcmVha3BvaW50cyA9IHtcbiAgLy8gU29ydGVkIEFTQyBieSBzaXplLiBUaGF0J3MgaW1wb3J0YW50LlxuICAvLyBJdCBjYW4ndCBiZSBjb25maWd1cmVkIGFzIGl0J3MgdXNlZCBzdGF0aWNhbGx5IGZvciBwcm9wVHlwZXMuXG4gIGtleXM6IFsneHMnLCAnc20nLCAnbWQnLCAnbGcnLCAneGwnXSxcbiAgdXA6IGtleSA9PiBgQG1lZGlhIChtaW4td2lkdGg6JHt2YWx1ZXNba2V5XX1weClgXG59O1xuZXhwb3J0IGZ1bmN0aW9uIGhhbmRsZUJyZWFrcG9pbnRzKHByb3BzLCBwcm9wVmFsdWUsIHN0eWxlRnJvbVByb3BWYWx1ZSkge1xuICBjb25zdCB0aGVtZSA9IHByb3BzLnRoZW1lIHx8IHt9O1xuXG4gIGlmIChBcnJheS5pc0FycmF5KHByb3BWYWx1ZSkpIHtcbiAgICBjb25zdCB0aGVtZUJyZWFrcG9pbnRzID0gdGhlbWUuYnJlYWtwb2ludHMgfHwgZGVmYXVsdEJyZWFrcG9pbnRzO1xuICAgIHJldHVybiBwcm9wVmFsdWUucmVkdWNlKChhY2MsIGl0ZW0sIGluZGV4KSA9PiB7XG4gICAgICBhY2NbdGhlbWVCcmVha3BvaW50cy51cCh0aGVtZUJyZWFrcG9pbnRzLmtleXNbaW5kZXhdKV0gPSBzdHlsZUZyb21Qcm9wVmFsdWUocHJvcFZhbHVlW2luZGV4XSk7XG4gICAgICByZXR1cm4gYWNjO1xuICAgIH0sIHt9KTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgcHJvcFZhbHVlID09PSAnb2JqZWN0Jykge1xuICAgIGNvbnN0IHRoZW1lQnJlYWtwb2ludHMgPSB0aGVtZS5icmVha3BvaW50cyB8fCBkZWZhdWx0QnJlYWtwb2ludHM7XG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKHByb3BWYWx1ZSkucmVkdWNlKChhY2MsIGJyZWFrcG9pbnQpID0+IHtcbiAgICAgIC8vIGtleSBpcyBicmVha3BvaW50XG4gICAgICBpZiAoT2JqZWN0LmtleXModGhlbWVCcmVha3BvaW50cy52YWx1ZXMgfHwgdmFsdWVzKS5pbmRleE9mKGJyZWFrcG9pbnQpICE9PSAtMSkge1xuICAgICAgICBjb25zdCBtZWRpYUtleSA9IHRoZW1lQnJlYWtwb2ludHMudXAoYnJlYWtwb2ludCk7XG4gICAgICAgIGFjY1ttZWRpYUtleV0gPSBzdHlsZUZyb21Qcm9wVmFsdWUocHJvcFZhbHVlW2JyZWFrcG9pbnRdLCBicmVha3BvaW50KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnN0IGNzc0tleSA9IGJyZWFrcG9pbnQ7XG4gICAgICAgIGFjY1tjc3NLZXldID0gcHJvcFZhbHVlW2Nzc0tleV07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBhY2M7XG4gICAgfSwge30pO1xuICB9XG5cbiAgY29uc3Qgb3V0cHV0ID0gc3R5bGVGcm9tUHJvcFZhbHVlKHByb3BWYWx1ZSk7XG4gIHJldHVybiBvdXRwdXQ7XG59XG5cbmZ1bmN0aW9uIGJyZWFrcG9pbnRzKHN0eWxlRnVuY3Rpb24pIHtcbiAgY29uc3QgbmV3U3R5bGVGdW5jdGlvbiA9IHByb3BzID0+IHtcbiAgICBjb25zdCB0aGVtZSA9IHByb3BzLnRoZW1lIHx8IHt9O1xuICAgIGNvbnN0IGJhc2UgPSBzdHlsZUZ1bmN0aW9uKHByb3BzKTtcbiAgICBjb25zdCB0aGVtZUJyZWFrcG9pbnRzID0gdGhlbWUuYnJlYWtwb2ludHMgfHwgZGVmYXVsdEJyZWFrcG9pbnRzO1xuICAgIGNvbnN0IGV4dGVuZGVkID0gdGhlbWVCcmVha3BvaW50cy5rZXlzLnJlZHVjZSgoYWNjLCBrZXkpID0+IHtcbiAgICAgIGlmIChwcm9wc1trZXldKSB7XG4gICAgICAgIGFjYyA9IGFjYyB8fCB7fTtcbiAgICAgICAgYWNjW3RoZW1lQnJlYWtwb2ludHMudXAoa2V5KV0gPSBzdHlsZUZ1bmN0aW9uKF9leHRlbmRzKHtcbiAgICAgICAgICB0aGVtZVxuICAgICAgICB9LCBwcm9wc1trZXldKSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBhY2M7XG4gICAgfSwgbnVsbCk7XG4gICAgcmV0dXJuIG1lcmdlKGJhc2UsIGV4dGVuZGVkKTtcbiAgfTtcblxuICBuZXdTdHlsZUZ1bmN0aW9uLnByb3BUeXBlcyA9IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgPyBfZXh0ZW5kcyh7fSwgc3R5bGVGdW5jdGlvbi5wcm9wVHlwZXMsIHtcbiAgICB4czogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBzbTogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBtZDogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBsZzogUHJvcFR5cGVzLm9iamVjdCxcbiAgICB4bDogUHJvcFR5cGVzLm9iamVjdFxuICB9KSA6IHt9O1xuICBuZXdTdHlsZUZ1bmN0aW9uLmZpbHRlclByb3BzID0gWyd4cycsICdzbScsICdtZCcsICdsZycsICd4bCcsIC4uLnN0eWxlRnVuY3Rpb24uZmlsdGVyUHJvcHNdO1xuICByZXR1cm4gbmV3U3R5bGVGdW5jdGlvbjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUVtcHR5QnJlYWtwb2ludE9iamVjdChicmVha3BvaW50c0lucHV0ID0ge30pIHtcbiAgdmFyIF9icmVha3BvaW50c0lucHV0JGtleTtcblxuICBjb25zdCBicmVha3BvaW50c0luT3JkZXIgPSBicmVha3BvaW50c0lucHV0ID09IG51bGwgPyB2b2lkIDAgOiAoX2JyZWFrcG9pbnRzSW5wdXQka2V5ID0gYnJlYWtwb2ludHNJbnB1dC5rZXlzKSA9PSBudWxsID8gdm9pZCAwIDogX2JyZWFrcG9pbnRzSW5wdXQka2V5LnJlZHVjZSgoYWNjLCBrZXkpID0+IHtcbiAgICBjb25zdCBicmVha3BvaW50U3R5bGVLZXkgPSBicmVha3BvaW50c0lucHV0LnVwKGtleSk7XG4gICAgYWNjW2JyZWFrcG9pbnRTdHlsZUtleV0gPSB7fTtcbiAgICByZXR1cm4gYWNjO1xuICB9LCB7fSk7XG4gIHJldHVybiBicmVha3BvaW50c0luT3JkZXIgfHwge307XG59XG5leHBvcnQgZnVuY3Rpb24gcmVtb3ZlVW51c2VkQnJlYWtwb2ludHMoYnJlYWtwb2ludEtleXMsIHN0eWxlKSB7XG4gIHJldHVybiBicmVha3BvaW50S2V5cy5yZWR1Y2UoKGFjYywga2V5KSA9PiB7XG4gICAgY29uc3QgYnJlYWtwb2ludE91dHB1dCA9IGFjY1trZXldO1xuICAgIGNvbnN0IGlzQnJlYWtwb2ludFVudXNlZCA9ICFicmVha3BvaW50T3V0cHV0IHx8IE9iamVjdC5rZXlzKGJyZWFrcG9pbnRPdXRwdXQpLmxlbmd0aCA9PT0gMDtcblxuICAgIGlmIChpc0JyZWFrcG9pbnRVbnVzZWQpIHtcbiAgICAgIGRlbGV0ZSBhY2Nba2V5XTtcbiAgICB9XG5cbiAgICByZXR1cm4gYWNjO1xuICB9LCBzdHlsZSk7XG59XG5leHBvcnQgZnVuY3Rpb24gbWVyZ2VCcmVha3BvaW50c0luT3JkZXIoYnJlYWtwb2ludHNJbnB1dCwgLi4uc3R5bGVzKSB7XG4gIGNvbnN0IGVtcHR5QnJlYWtwb2ludHMgPSBjcmVhdGVFbXB0eUJyZWFrcG9pbnRPYmplY3QoYnJlYWtwb2ludHNJbnB1dCk7XG4gIGNvbnN0IG1lcmdlZE91dHB1dCA9IFtlbXB0eUJyZWFrcG9pbnRzLCAuLi5zdHlsZXNdLnJlZHVjZSgocHJldiwgbmV4dCkgPT4gZGVlcG1lcmdlKHByZXYsIG5leHQpLCB7fSk7XG4gIHJldHVybiByZW1vdmVVbnVzZWRCcmVha3BvaW50cyhPYmplY3Qua2V5cyhlbXB0eUJyZWFrcG9pbnRzKSwgbWVyZ2VkT3V0cHV0KTtcbn0gLy8gY29tcHV0ZSBiYXNlIGZvciByZXNwb25zaXZlIHZhbHVlczsgZS5nLixcbi8vIFsxLDIsM10gPT4ge3hzOiB0cnVlLCBzbTogdHJ1ZSwgbWQ6IHRydWV9XG4vLyB7eHM6IDEsIHNtOiAyLCBtZDogM30gPT4ge3hzOiB0cnVlLCBzbTogdHJ1ZSwgbWQ6IHRydWV9XG5cbmV4cG9ydCBmdW5jdGlvbiBjb21wdXRlQnJlYWtwb2ludHNCYXNlKGJyZWFrcG9pbnRWYWx1ZXMsIHRoZW1lQnJlYWtwb2ludHMpIHtcbiAgLy8gZml4ZWQgdmFsdWVcbiAgaWYgKHR5cGVvZiBicmVha3BvaW50VmFsdWVzICE9PSAnb2JqZWN0Jykge1xuICAgIHJldHVybiB7fTtcbiAgfVxuXG4gIGNvbnN0IGJhc2UgPSB7fTtcbiAgY29uc3QgYnJlYWtwb2ludHNLZXlzID0gT2JqZWN0LmtleXModGhlbWVCcmVha3BvaW50cyk7XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkoYnJlYWtwb2ludFZhbHVlcykpIHtcbiAgICBicmVha3BvaW50c0tleXMuZm9yRWFjaCgoYnJlYWtwb2ludCwgaSkgPT4ge1xuICAgICAgaWYgKGkgPCBicmVha3BvaW50VmFsdWVzLmxlbmd0aCkge1xuICAgICAgICBiYXNlW2JyZWFrcG9pbnRdID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBicmVha3BvaW50c0tleXMuZm9yRWFjaChicmVha3BvaW50ID0+IHtcbiAgICAgIGlmIChicmVha3BvaW50VmFsdWVzW2JyZWFrcG9pbnRdICE9IG51bGwpIHtcbiAgICAgICAgYmFzZVticmVha3BvaW50XSA9IHRydWU7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gYmFzZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiByZXNvbHZlQnJlYWtwb2ludFZhbHVlcyh7XG4gIHZhbHVlczogYnJlYWtwb2ludFZhbHVlcyxcbiAgYnJlYWtwb2ludHM6IHRoZW1lQnJlYWtwb2ludHMsXG4gIGJhc2U6IGN1c3RvbUJhc2Vcbn0pIHtcbiAgY29uc3QgYmFzZSA9IGN1c3RvbUJhc2UgfHwgY29tcHV0ZUJyZWFrcG9pbnRzQmFzZShicmVha3BvaW50VmFsdWVzLCB0aGVtZUJyZWFrcG9pbnRzKTtcbiAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKGJhc2UpO1xuXG4gIGlmIChrZXlzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBicmVha3BvaW50VmFsdWVzO1xuICB9XG5cbiAgbGV0IHByZXZpb3VzO1xuICByZXR1cm4ga2V5cy5yZWR1Y2UoKGFjYywgYnJlYWtwb2ludCwgaSkgPT4ge1xuICAgIGlmIChBcnJheS5pc0FycmF5KGJyZWFrcG9pbnRWYWx1ZXMpKSB7XG4gICAgICBhY2NbYnJlYWtwb2ludF0gPSBicmVha3BvaW50VmFsdWVzW2ldICE9IG51bGwgPyBicmVha3BvaW50VmFsdWVzW2ldIDogYnJlYWtwb2ludFZhbHVlc1twcmV2aW91c107XG4gICAgICBwcmV2aW91cyA9IGk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFjY1ticmVha3BvaW50XSA9IGJyZWFrcG9pbnRWYWx1ZXNbYnJlYWtwb2ludF0gIT0gbnVsbCA/IGJyZWFrcG9pbnRWYWx1ZXNbYnJlYWtwb2ludF0gOiBicmVha3BvaW50VmFsdWVzW3ByZXZpb3VzXSB8fCBicmVha3BvaW50VmFsdWVzO1xuICAgICAgcHJldmlvdXMgPSBicmVha3BvaW50O1xuICAgIH1cblxuICAgIHJldHVybiBhY2M7XG4gIH0sIHt9KTtcbn1cbmV4cG9ydCBkZWZhdWx0IGJyZWFrcG9pbnRzOyIsImltcG9ydCByZXNwb25zaXZlUHJvcFR5cGUgZnJvbSAnLi9yZXNwb25zaXZlUHJvcFR5cGUnO1xuaW1wb3J0IHsgaGFuZGxlQnJlYWtwb2ludHMgfSBmcm9tICcuL2JyZWFrcG9pbnRzJztcbmltcG9ydCB7IGdldFBhdGggfSBmcm9tICcuL3N0eWxlJztcbmltcG9ydCBtZXJnZSBmcm9tICcuL21lcmdlJztcbmltcG9ydCBtZW1vaXplIGZyb20gJy4vbWVtb2l6ZSc7XG5jb25zdCBwcm9wZXJ0aWVzID0ge1xuICBtOiAnbWFyZ2luJyxcbiAgcDogJ3BhZGRpbmcnXG59O1xuY29uc3QgZGlyZWN0aW9ucyA9IHtcbiAgdDogJ1RvcCcsXG4gIHI6ICdSaWdodCcsXG4gIGI6ICdCb3R0b20nLFxuICBsOiAnTGVmdCcsXG4gIHg6IFsnTGVmdCcsICdSaWdodCddLFxuICB5OiBbJ1RvcCcsICdCb3R0b20nXVxufTtcbmNvbnN0IGFsaWFzZXMgPSB7XG4gIG1hcmdpblg6ICdteCcsXG4gIG1hcmdpblk6ICdteScsXG4gIHBhZGRpbmdYOiAncHgnLFxuICBwYWRkaW5nWTogJ3B5J1xufTsgLy8gbWVtb2l6ZSgpIGltcGFjdDpcbi8vIEZyb20gMzAwLDAwMCBvcHMvc2VjXG4vLyBUbyAzNTAsMDAwIG9wcy9zZWNcblxuY29uc3QgZ2V0Q3NzUHJvcGVydGllcyA9IG1lbW9pemUocHJvcCA9PiB7XG4gIC8vIEl0J3Mgbm90IGEgc2hvcnRoYW5kIG5vdGF0aW9uLlxuICBpZiAocHJvcC5sZW5ndGggPiAyKSB7XG4gICAgaWYgKGFsaWFzZXNbcHJvcF0pIHtcbiAgICAgIHByb3AgPSBhbGlhc2VzW3Byb3BdO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gW3Byb3BdO1xuICAgIH1cbiAgfVxuXG4gIGNvbnN0IFthLCBiXSA9IHByb3Auc3BsaXQoJycpO1xuICBjb25zdCBwcm9wZXJ0eSA9IHByb3BlcnRpZXNbYV07XG4gIGNvbnN0IGRpcmVjdGlvbiA9IGRpcmVjdGlvbnNbYl0gfHwgJyc7XG4gIHJldHVybiBBcnJheS5pc0FycmF5KGRpcmVjdGlvbikgPyBkaXJlY3Rpb24ubWFwKGRpciA9PiBwcm9wZXJ0eSArIGRpcikgOiBbcHJvcGVydHkgKyBkaXJlY3Rpb25dO1xufSk7XG5jb25zdCBtYXJnaW5LZXlzID0gWydtJywgJ210JywgJ21yJywgJ21iJywgJ21sJywgJ214JywgJ215JywgJ21hcmdpbicsICdtYXJnaW5Ub3AnLCAnbWFyZ2luUmlnaHQnLCAnbWFyZ2luQm90dG9tJywgJ21hcmdpbkxlZnQnLCAnbWFyZ2luWCcsICdtYXJnaW5ZJywgJ21hcmdpbklubGluZScsICdtYXJnaW5JbmxpbmVTdGFydCcsICdtYXJnaW5JbmxpbmVFbmQnLCAnbWFyZ2luQmxvY2snLCAnbWFyZ2luQmxvY2tTdGFydCcsICdtYXJnaW5CbG9ja0VuZCddO1xuY29uc3QgcGFkZGluZ0tleXMgPSBbJ3AnLCAncHQnLCAncHInLCAncGInLCAncGwnLCAncHgnLCAncHknLCAncGFkZGluZycsICdwYWRkaW5nVG9wJywgJ3BhZGRpbmdSaWdodCcsICdwYWRkaW5nQm90dG9tJywgJ3BhZGRpbmdMZWZ0JywgJ3BhZGRpbmdYJywgJ3BhZGRpbmdZJywgJ3BhZGRpbmdJbmxpbmUnLCAncGFkZGluZ0lubGluZVN0YXJ0JywgJ3BhZGRpbmdJbmxpbmVFbmQnLCAncGFkZGluZ0Jsb2NrJywgJ3BhZGRpbmdCbG9ja1N0YXJ0JywgJ3BhZGRpbmdCbG9ja0VuZCddO1xuY29uc3Qgc3BhY2luZ0tleXMgPSBbLi4ubWFyZ2luS2V5cywgLi4ucGFkZGluZ0tleXNdO1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVVuYXJ5VW5pdCh0aGVtZSwgdGhlbWVLZXksIGRlZmF1bHRWYWx1ZSwgcHJvcE5hbWUpIHtcbiAgdmFyIF9nZXRQYXRoO1xuXG4gIGNvbnN0IHRoZW1lU3BhY2luZyA9IChfZ2V0UGF0aCA9IGdldFBhdGgodGhlbWUsIHRoZW1lS2V5KSkgIT0gbnVsbCA/IF9nZXRQYXRoIDogZGVmYXVsdFZhbHVlO1xuXG4gIGlmICh0eXBlb2YgdGhlbWVTcGFjaW5nID09PSAnbnVtYmVyJykge1xuICAgIHJldHVybiBhYnMgPT4ge1xuICAgICAgaWYgKHR5cGVvZiBhYnMgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiBhYnM7XG4gICAgICB9XG5cbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIGlmICh0eXBlb2YgYWJzICE9PSAnbnVtYmVyJykge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYE1VSTogRXhwZWN0ZWQgJHtwcm9wTmFtZX0gYXJndW1lbnQgdG8gYmUgYSBudW1iZXIgb3IgYSBzdHJpbmcsIGdvdCAke2Fic30uYCk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoZW1lU3BhY2luZyAqIGFicztcbiAgICB9O1xuICB9XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkodGhlbWVTcGFjaW5nKSkge1xuICAgIHJldHVybiBhYnMgPT4ge1xuICAgICAgaWYgKHR5cGVvZiBhYnMgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiBhYnM7XG4gICAgICB9XG5cbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIGlmICghTnVtYmVyLmlzSW50ZWdlcihhYnMpKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihbYE1VSTogVGhlIFxcYHRoZW1lLiR7dGhlbWVLZXl9XFxgIGFycmF5IHR5cGUgY2Fubm90IGJlIGNvbWJpbmVkIHdpdGggbm9uIGludGVnZXIgdmFsdWVzLmAgKyBgWW91IHNob3VsZCBlaXRoZXIgdXNlIGFuIGludGVnZXIgdmFsdWUgdGhhdCBjYW4gYmUgdXNlZCBhcyBpbmRleCwgb3IgZGVmaW5lIHRoZSBcXGB0aGVtZS4ke3RoZW1lS2V5fVxcYCBhcyBhIG51bWJlci5gXS5qb2luKCdcXG4nKSk7XG4gICAgICAgIH0gZWxzZSBpZiAoYWJzID4gdGhlbWVTcGFjaW5nLmxlbmd0aCAtIDEpIHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKFtgTVVJOiBUaGUgdmFsdWUgcHJvdmlkZWQgKCR7YWJzfSkgb3ZlcmZsb3dzLmAsIGBUaGUgc3VwcG9ydGVkIHZhbHVlcyBhcmU6ICR7SlNPTi5zdHJpbmdpZnkodGhlbWVTcGFjaW5nKX0uYCwgYCR7YWJzfSA+ICR7dGhlbWVTcGFjaW5nLmxlbmd0aCAtIDF9LCB5b3UgbmVlZCB0byBhZGQgdGhlIG1pc3NpbmcgdmFsdWVzLmBdLmpvaW4oJ1xcbicpKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhlbWVTcGFjaW5nW2Fic107XG4gICAgfTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgdGhlbWVTcGFjaW5nID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIHRoZW1lU3BhY2luZztcbiAgfVxuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgY29uc29sZS5lcnJvcihbYE1VSTogVGhlIFxcYHRoZW1lLiR7dGhlbWVLZXl9XFxgIHZhbHVlICgke3RoZW1lU3BhY2luZ30pIGlzIGludmFsaWQuYCwgJ0l0IHNob3VsZCBiZSBhIG51bWJlciwgYW4gYXJyYXkgb3IgYSBmdW5jdGlvbi4nXS5qb2luKCdcXG4nKSk7XG4gIH1cblxuICByZXR1cm4gKCkgPT4gdW5kZWZpbmVkO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVVuYXJ5U3BhY2luZyh0aGVtZSkge1xuICByZXR1cm4gY3JlYXRlVW5hcnlVbml0KHRoZW1lLCAnc3BhY2luZycsIDgsICdzcGFjaW5nJyk7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0VmFsdWUodHJhbnNmb3JtZXIsIHByb3BWYWx1ZSkge1xuICBpZiAodHlwZW9mIHByb3BWYWx1ZSA9PT0gJ3N0cmluZycgfHwgcHJvcFZhbHVlID09IG51bGwpIHtcbiAgICByZXR1cm4gcHJvcFZhbHVlO1xuICB9XG5cbiAgY29uc3QgYWJzID0gTWF0aC5hYnMocHJvcFZhbHVlKTtcbiAgY29uc3QgdHJhbnNmb3JtZWQgPSB0cmFuc2Zvcm1lcihhYnMpO1xuXG4gIGlmIChwcm9wVmFsdWUgPj0gMCkge1xuICAgIHJldHVybiB0cmFuc2Zvcm1lZDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgdHJhbnNmb3JtZWQgPT09ICdudW1iZXInKSB7XG4gICAgcmV0dXJuIC10cmFuc2Zvcm1lZDtcbiAgfVxuXG4gIHJldHVybiBgLSR7dHJhbnNmb3JtZWR9YDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRTdHlsZUZyb21Qcm9wVmFsdWUoY3NzUHJvcGVydGllcywgdHJhbnNmb3JtZXIpIHtcbiAgcmV0dXJuIHByb3BWYWx1ZSA9PiBjc3NQcm9wZXJ0aWVzLnJlZHVjZSgoYWNjLCBjc3NQcm9wZXJ0eSkgPT4ge1xuICAgIGFjY1tjc3NQcm9wZXJ0eV0gPSBnZXRWYWx1ZSh0cmFuc2Zvcm1lciwgcHJvcFZhbHVlKTtcbiAgICByZXR1cm4gYWNjO1xuICB9LCB7fSk7XG59XG5cbmZ1bmN0aW9uIHJlc29sdmVDc3NQcm9wZXJ0eShwcm9wcywga2V5cywgcHJvcCwgdHJhbnNmb3JtZXIpIHtcbiAgLy8gVXNpbmcgYSBoYXNoIGNvbXB1dGF0aW9uIG92ZXIgYW4gYXJyYXkgaXRlcmF0aW9uIGNvdWxkIGJlIGZhc3RlciwgYnV0IHdpdGggb25seSAyOCBpdGVtcyxcbiAgLy8gaXQncyBkb2Vzbid0IHdvcnRoIHRoZSBidW5kbGUgc2l6ZS5cbiAgaWYgKGtleXMuaW5kZXhPZihwcm9wKSA9PT0gLTEpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGNvbnN0IGNzc1Byb3BlcnRpZXMgPSBnZXRDc3NQcm9wZXJ0aWVzKHByb3ApO1xuICBjb25zdCBzdHlsZUZyb21Qcm9wVmFsdWUgPSBnZXRTdHlsZUZyb21Qcm9wVmFsdWUoY3NzUHJvcGVydGllcywgdHJhbnNmb3JtZXIpO1xuICBjb25zdCBwcm9wVmFsdWUgPSBwcm9wc1twcm9wXTtcbiAgcmV0dXJuIGhhbmRsZUJyZWFrcG9pbnRzKHByb3BzLCBwcm9wVmFsdWUsIHN0eWxlRnJvbVByb3BWYWx1ZSk7XG59XG5cbmZ1bmN0aW9uIHN0eWxlKHByb3BzLCBrZXlzKSB7XG4gIGNvbnN0IHRyYW5zZm9ybWVyID0gY3JlYXRlVW5hcnlTcGFjaW5nKHByb3BzLnRoZW1lKTtcbiAgcmV0dXJuIE9iamVjdC5rZXlzKHByb3BzKS5tYXAocHJvcCA9PiByZXNvbHZlQ3NzUHJvcGVydHkocHJvcHMsIGtleXMsIHByb3AsIHRyYW5zZm9ybWVyKSkucmVkdWNlKG1lcmdlLCB7fSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtYXJnaW4ocHJvcHMpIHtcbiAgcmV0dXJuIHN0eWxlKHByb3BzLCBtYXJnaW5LZXlzKTtcbn1cbm1hcmdpbi5wcm9wVHlwZXMgPSBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nID8gbWFyZ2luS2V5cy5yZWR1Y2UoKG9iaiwga2V5KSA9PiB7XG4gIG9ialtrZXldID0gcmVzcG9uc2l2ZVByb3BUeXBlO1xuICByZXR1cm4gb2JqO1xufSwge30pIDoge307XG5tYXJnaW4uZmlsdGVyUHJvcHMgPSBtYXJnaW5LZXlzO1xuZXhwb3J0IGZ1bmN0aW9uIHBhZGRpbmcocHJvcHMpIHtcbiAgcmV0dXJuIHN0eWxlKHByb3BzLCBwYWRkaW5nS2V5cyk7XG59XG5wYWRkaW5nLnByb3BUeXBlcyA9IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgPyBwYWRkaW5nS2V5cy5yZWR1Y2UoKG9iaiwga2V5KSA9PiB7XG4gIG9ialtrZXldID0gcmVzcG9uc2l2ZVByb3BUeXBlO1xuICByZXR1cm4gb2JqO1xufSwge30pIDoge307XG5wYWRkaW5nLmZpbHRlclByb3BzID0gcGFkZGluZ0tleXM7XG5cbmZ1bmN0aW9uIHNwYWNpbmcocHJvcHMpIHtcbiAgcmV0dXJuIHN0eWxlKHByb3BzLCBzcGFjaW5nS2V5cyk7XG59XG5cbnNwYWNpbmcucHJvcFR5cGVzID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyA/IHNwYWNpbmdLZXlzLnJlZHVjZSgob2JqLCBrZXkpID0+IHtcbiAgb2JqW2tleV0gPSByZXNwb25zaXZlUHJvcFR5cGU7XG4gIHJldHVybiBvYmo7XG59LCB7fSkgOiB7fTtcbnNwYWNpbmcuZmlsdGVyUHJvcHMgPSBzcGFjaW5nS2V5cztcbmV4cG9ydCBkZWZhdWx0IHNwYWNpbmc7IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbWVtb2l6ZShmbikge1xuICBjb25zdCBjYWNoZSA9IHt9O1xuICByZXR1cm4gYXJnID0+IHtcbiAgICBpZiAoY2FjaGVbYXJnXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBjYWNoZVthcmddID0gZm4oYXJnKTtcbiAgICB9XG5cbiAgICByZXR1cm4gY2FjaGVbYXJnXTtcbiAgfTtcbn0iLCJ2YXIgaXNCcm93c2VyID0gXCJvYmplY3RcIiAhPT0gJ3VuZGVmaW5lZCc7XG5mdW5jdGlvbiBnZXRSZWdpc3RlcmVkU3R5bGVzKHJlZ2lzdGVyZWQsIHJlZ2lzdGVyZWRTdHlsZXMsIGNsYXNzTmFtZXMpIHtcbiAgdmFyIHJhd0NsYXNzTmFtZSA9ICcnO1xuICBjbGFzc05hbWVzLnNwbGl0KCcgJykuZm9yRWFjaChmdW5jdGlvbiAoY2xhc3NOYW1lKSB7XG4gICAgaWYgKHJlZ2lzdGVyZWRbY2xhc3NOYW1lXSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICByZWdpc3RlcmVkU3R5bGVzLnB1c2gocmVnaXN0ZXJlZFtjbGFzc05hbWVdICsgXCI7XCIpO1xuICAgIH0gZWxzZSB7XG4gICAgICByYXdDbGFzc05hbWUgKz0gY2xhc3NOYW1lICsgXCIgXCI7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIHJhd0NsYXNzTmFtZTtcbn1cbnZhciByZWdpc3RlclN0eWxlcyA9IGZ1bmN0aW9uIHJlZ2lzdGVyU3R5bGVzKGNhY2hlLCBzZXJpYWxpemVkLCBpc1N0cmluZ1RhZykge1xuICB2YXIgY2xhc3NOYW1lID0gY2FjaGUua2V5ICsgXCItXCIgKyBzZXJpYWxpemVkLm5hbWU7XG5cbiAgaWYgKCAvLyB3ZSBvbmx5IG5lZWQgdG8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIHJlZ2lzdGVyZWQgY2FjaGUgaWYgdGhlXG4gIC8vIGNsYXNzIG5hbWUgY291bGQgYmUgdXNlZCBmdXJ0aGVyIGRvd25cbiAgLy8gdGhlIHRyZWUgYnV0IGlmIGl0J3MgYSBzdHJpbmcgdGFnLCB3ZSBrbm93IGl0IHdvbid0XG4gIC8vIHNvIHdlIGRvbid0IGhhdmUgdG8gYWRkIGl0IHRvIHJlZ2lzdGVyZWQgY2FjaGUuXG4gIC8vIHRoaXMgaW1wcm92ZXMgbWVtb3J5IHVzYWdlIHNpbmNlIHdlIGNhbiBhdm9pZCBzdG9yaW5nIHRoZSB3aG9sZSBzdHlsZSBzdHJpbmdcbiAgKGlzU3RyaW5nVGFnID09PSBmYWxzZSB8fCAvLyB3ZSBuZWVkIHRvIGFsd2F5cyBzdG9yZSBpdCBpZiB3ZSdyZSBpbiBjb21wYXQgbW9kZSBhbmRcbiAgLy8gaW4gbm9kZSBzaW5jZSBlbW90aW9uLXNlcnZlciByZWxpZXMgb24gd2hldGhlciBhIHN0eWxlIGlzIGluXG4gIC8vIHRoZSByZWdpc3RlcmVkIGNhY2hlIHRvIGtub3cgd2hldGhlciBhIHN0eWxlIGlzIGdsb2JhbCBvciBub3RcbiAgLy8gYWxzbywgbm90ZSB0aGF0IHRoaXMgY2hlY2sgd2lsbCBiZSBkZWFkIGNvZGUgZWxpbWluYXRlZCBpbiB0aGUgYnJvd3NlclxuICBpc0Jyb3dzZXIgPT09IGZhbHNlICkgJiYgY2FjaGUucmVnaXN0ZXJlZFtjbGFzc05hbWVdID09PSB1bmRlZmluZWQpIHtcbiAgICBjYWNoZS5yZWdpc3RlcmVkW2NsYXNzTmFtZV0gPSBzZXJpYWxpemVkLnN0eWxlcztcbiAgfVxufTtcbnZhciBpbnNlcnRTdHlsZXMgPSBmdW5jdGlvbiBpbnNlcnRTdHlsZXMoY2FjaGUsIHNlcmlhbGl6ZWQsIGlzU3RyaW5nVGFnKSB7XG4gIHJlZ2lzdGVyU3R5bGVzKGNhY2hlLCBzZXJpYWxpemVkLCBpc1N0cmluZ1RhZyk7XG4gIHZhciBjbGFzc05hbWUgPSBjYWNoZS5rZXkgKyBcIi1cIiArIHNlcmlhbGl6ZWQubmFtZTtcblxuICBpZiAoY2FjaGUuaW5zZXJ0ZWRbc2VyaWFsaXplZC5uYW1lXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdmFyIGN1cnJlbnQgPSBzZXJpYWxpemVkO1xuXG4gICAgZG8ge1xuICAgICAgdmFyIG1heWJlU3R5bGVzID0gY2FjaGUuaW5zZXJ0KHNlcmlhbGl6ZWQgPT09IGN1cnJlbnQgPyBcIi5cIiArIGNsYXNzTmFtZSA6ICcnLCBjdXJyZW50LCBjYWNoZS5zaGVldCwgdHJ1ZSk7XG5cbiAgICAgIGN1cnJlbnQgPSBjdXJyZW50Lm5leHQ7XG4gICAgfSB3aGlsZSAoY3VycmVudCAhPT0gdW5kZWZpbmVkKTtcbiAgfVxufTtcblxuZXhwb3J0IHsgZ2V0UmVnaXN0ZXJlZFN0eWxlcywgaW5zZXJ0U3R5bGVzLCByZWdpc3RlclN0eWxlcyB9O1xuIiwiaW1wb3J0IHsgZGVlcG1lcmdlIH0gZnJvbSAnQG11aS91dGlscyc7XG5cbmZ1bmN0aW9uIG1lcmdlKGFjYywgaXRlbSkge1xuICBpZiAoIWl0ZW0pIHtcbiAgICByZXR1cm4gYWNjO1xuICB9XG5cbiAgcmV0dXJuIGRlZXBtZXJnZShhY2MsIGl0ZW0sIHtcbiAgICBjbG9uZTogZmFsc2UgLy8gTm8gbmVlZCB0byBjbG9uZSBkZWVwLCBpdCdzIHdheSBmYXN0ZXIuXG5cbiAgfSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IG1lcmdlOyIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNyZWF0ZUNvbnRleHQsIHVzZUNvbnRleHQsIGZvcndhcmRSZWYsIGNyZWF0ZUVsZW1lbnQsIEZyYWdtZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IGNyZWF0ZUNhY2hlIGZyb20gJ0BlbW90aW9uL2NhY2hlJztcbmltcG9ydCBfZXh0ZW5kcyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzJztcbmltcG9ydCB3ZWFrTWVtb2l6ZSBmcm9tICdAZW1vdGlvbi93ZWFrLW1lbW9pemUnO1xuaW1wb3J0IGhvaXN0Tm9uUmVhY3RTdGF0aWNzIGZyb20gJy4uL19pc29sYXRlZC1obnJzL2Rpc3QvZW1vdGlvbi1yZWFjdC1faXNvbGF0ZWQtaG5ycy5icm93c2VyLmVzbS5qcyc7XG5pbXBvcnQgeyBnZXRSZWdpc3RlcmVkU3R5bGVzLCByZWdpc3RlclN0eWxlcywgaW5zZXJ0U3R5bGVzIH0gZnJvbSAnQGVtb3Rpb24vdXRpbHMnO1xuaW1wb3J0IHsgc2VyaWFsaXplU3R5bGVzIH0gZnJvbSAnQGVtb3Rpb24vc2VyaWFsaXplJztcblxudmFyIGhhc093blByb3BlcnR5ID0ge30uaGFzT3duUHJvcGVydHk7XG5cbnZhciBFbW90aW9uQ2FjaGVDb250ZXh0ID0gLyogI19fUFVSRV9fICovY3JlYXRlQ29udGV4dCggLy8gd2UncmUgZG9pbmcgdGhpcyB0byBhdm9pZCBwcmVjb25zdHJ1Y3QncyBkZWFkIGNvZGUgZWxpbWluYXRpb24gaW4gdGhpcyBvbmUgY2FzZVxuLy8gYmVjYXVzZSB0aGlzIG1vZHVsZSBpcyBwcmltYXJpbHkgaW50ZW5kZWQgZm9yIHRoZSBicm93c2VyIGFuZCBub2RlXG4vLyBidXQgaXQncyBhbHNvIHJlcXVpcmVkIGluIHJlYWN0IG5hdGl2ZSBhbmQgc2ltaWxhciBlbnZpcm9ubWVudHMgc29tZXRpbWVzXG4vLyBhbmQgd2UgY291bGQgaGF2ZSBhIHNwZWNpYWwgYnVpbGQganVzdCBmb3IgdGhhdFxuLy8gYnV0IHRoaXMgaXMgbXVjaCBlYXNpZXIgYW5kIHRoZSBuYXRpdmUgcGFja2FnZXNcbi8vIG1pZ2h0IHVzZSBhIGRpZmZlcmVudCB0aGVtZSBjb250ZXh0IGluIHRoZSBmdXR1cmUgYW55d2F5XG50eXBlb2YgSFRNTEVsZW1lbnQgIT09ICd1bmRlZmluZWQnID8gLyogI19fUFVSRV9fICovY3JlYXRlQ2FjaGUoe1xuICBrZXk6ICdjc3MnXG59KSA6IG51bGwpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBFbW90aW9uQ2FjaGVDb250ZXh0LmRpc3BsYXlOYW1lID0gJ0Vtb3Rpb25DYWNoZUNvbnRleHQnO1xufVxuXG52YXIgQ2FjaGVQcm92aWRlciA9IEVtb3Rpb25DYWNoZUNvbnRleHQuUHJvdmlkZXI7XG52YXIgX191bnNhZmVfdXNlRW1vdGlvbkNhY2hlID0gZnVuY3Rpb24gdXNlRW1vdGlvbkNhY2hlKCkge1xuICByZXR1cm4gdXNlQ29udGV4dChFbW90aW9uQ2FjaGVDb250ZXh0KTtcbn07XG5cbnZhciB3aXRoRW1vdGlvbkNhY2hlID0gZnVuY3Rpb24gd2l0aEVtb3Rpb25DYWNoZShmdW5jKSB7XG4gIC8vICRGbG93Rml4TWVcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9mb3J3YXJkUmVmKGZ1bmN0aW9uIChwcm9wcywgcmVmKSB7XG4gICAgLy8gdGhlIGNhY2hlIHdpbGwgbmV2ZXIgYmUgbnVsbCBpbiB0aGUgYnJvd3NlclxuICAgIHZhciBjYWNoZSA9IHVzZUNvbnRleHQoRW1vdGlvbkNhY2hlQ29udGV4dCk7XG4gICAgcmV0dXJuIGZ1bmMocHJvcHMsIGNhY2hlLCByZWYpO1xuICB9KTtcbn07XG5cbnZhciBUaGVtZUNvbnRleHQgPSAvKiAjX19QVVJFX18gKi9jcmVhdGVDb250ZXh0KHt9KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgVGhlbWVDb250ZXh0LmRpc3BsYXlOYW1lID0gJ0Vtb3Rpb25UaGVtZUNvbnRleHQnO1xufVxuXG52YXIgdXNlVGhlbWUgPSBmdW5jdGlvbiB1c2VUaGVtZSgpIHtcbiAgcmV0dXJuIHVzZUNvbnRleHQoVGhlbWVDb250ZXh0KTtcbn07XG5cbnZhciBnZXRUaGVtZSA9IGZ1bmN0aW9uIGdldFRoZW1lKG91dGVyVGhlbWUsIHRoZW1lKSB7XG4gIGlmICh0eXBlb2YgdGhlbWUgPT09ICdmdW5jdGlvbicpIHtcbiAgICB2YXIgbWVyZ2VkVGhlbWUgPSB0aGVtZShvdXRlclRoZW1lKTtcblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIChtZXJnZWRUaGVtZSA9PSBudWxsIHx8IHR5cGVvZiBtZXJnZWRUaGVtZSAhPT0gJ29iamVjdCcgfHwgQXJyYXkuaXNBcnJheShtZXJnZWRUaGVtZSkpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1tUaGVtZVByb3ZpZGVyXSBQbGVhc2UgcmV0dXJuIGFuIG9iamVjdCBmcm9tIHlvdXIgdGhlbWUgZnVuY3Rpb24sIGkuZS4gdGhlbWU9eygpID0+ICh7fSl9IScpO1xuICAgIH1cblxuICAgIHJldHVybiBtZXJnZWRUaGVtZTtcbiAgfVxuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmICh0aGVtZSA9PSBudWxsIHx8IHR5cGVvZiB0aGVtZSAhPT0gJ29iamVjdCcgfHwgQXJyYXkuaXNBcnJheSh0aGVtZSkpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdbVGhlbWVQcm92aWRlcl0gUGxlYXNlIG1ha2UgeW91ciB0aGVtZSBwcm9wIGEgcGxhaW4gb2JqZWN0Jyk7XG4gIH1cblxuICByZXR1cm4gX2V4dGVuZHMoe30sIG91dGVyVGhlbWUsIHRoZW1lKTtcbn07XG5cbnZhciBjcmVhdGVDYWNoZVdpdGhUaGVtZSA9IC8qICNfX1BVUkVfXyAqL3dlYWtNZW1vaXplKGZ1bmN0aW9uIChvdXRlclRoZW1lKSB7XG4gIHJldHVybiB3ZWFrTWVtb2l6ZShmdW5jdGlvbiAodGhlbWUpIHtcbiAgICByZXR1cm4gZ2V0VGhlbWUob3V0ZXJUaGVtZSwgdGhlbWUpO1xuICB9KTtcbn0pO1xudmFyIFRoZW1lUHJvdmlkZXIgPSBmdW5jdGlvbiBUaGVtZVByb3ZpZGVyKHByb3BzKSB7XG4gIHZhciB0aGVtZSA9IHVzZUNvbnRleHQoVGhlbWVDb250ZXh0KTtcblxuICBpZiAocHJvcHMudGhlbWUgIT09IHRoZW1lKSB7XG4gICAgdGhlbWUgPSBjcmVhdGVDYWNoZVdpdGhUaGVtZSh0aGVtZSkocHJvcHMudGhlbWUpO1xuICB9XG5cbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9jcmVhdGVFbGVtZW50KFRoZW1lQ29udGV4dC5Qcm92aWRlciwge1xuICAgIHZhbHVlOiB0aGVtZVxuICB9LCBwcm9wcy5jaGlsZHJlbik7XG59O1xuZnVuY3Rpb24gd2l0aFRoZW1lKENvbXBvbmVudCkge1xuICB2YXIgY29tcG9uZW50TmFtZSA9IENvbXBvbmVudC5kaXNwbGF5TmFtZSB8fCBDb21wb25lbnQubmFtZSB8fCAnQ29tcG9uZW50JztcblxuICB2YXIgcmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKHByb3BzLCByZWYpIHtcbiAgICB2YXIgdGhlbWUgPSB1c2VDb250ZXh0KFRoZW1lQ29udGV4dCk7XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9jcmVhdGVFbGVtZW50KENvbXBvbmVudCwgX2V4dGVuZHMoe1xuICAgICAgdGhlbWU6IHRoZW1lLFxuICAgICAgcmVmOiByZWZcbiAgICB9LCBwcm9wcykpO1xuICB9OyAvLyAkRmxvd0ZpeE1lXG5cblxuICB2YXIgV2l0aFRoZW1lID0gLyojX19QVVJFX18qL2ZvcndhcmRSZWYocmVuZGVyKTtcbiAgV2l0aFRoZW1lLmRpc3BsYXlOYW1lID0gXCJXaXRoVGhlbWUoXCIgKyBjb21wb25lbnROYW1lICsgXCIpXCI7XG4gIHJldHVybiBob2lzdE5vblJlYWN0U3RhdGljcyhXaXRoVGhlbWUsIENvbXBvbmVudCk7XG59XG5cbnZhciBnZXRMYXN0UGFydCA9IGZ1bmN0aW9uIGdldExhc3RQYXJ0KGZ1bmN0aW9uTmFtZSkge1xuICAvLyBUaGUgbWF0Y2ggbWF5IGJlIHNvbWV0aGluZyBsaWtlICdPYmplY3QuY3JlYXRlRW1vdGlvblByb3BzJyBvclxuICAvLyAnTG9hZGVyLnByb3RvdHlwZS5yZW5kZXInXG4gIHZhciBwYXJ0cyA9IGZ1bmN0aW9uTmFtZS5zcGxpdCgnLicpO1xuICByZXR1cm4gcGFydHNbcGFydHMubGVuZ3RoIC0gMV07XG59O1xuXG52YXIgZ2V0RnVuY3Rpb25OYW1lRnJvbVN0YWNrVHJhY2VMaW5lID0gZnVuY3Rpb24gZ2V0RnVuY3Rpb25OYW1lRnJvbVN0YWNrVHJhY2VMaW5lKGxpbmUpIHtcbiAgLy8gVjhcbiAgdmFyIG1hdGNoID0gL15cXHMrYXRcXHMrKFtBLVphLXowLTkkLl0rKVxccy8uZXhlYyhsaW5lKTtcbiAgaWYgKG1hdGNoKSByZXR1cm4gZ2V0TGFzdFBhcnQobWF0Y2hbMV0pOyAvLyBTYWZhcmkgLyBGaXJlZm94XG5cbiAgbWF0Y2ggPSAvXihbQS1aYS16MC05JC5dKylALy5leGVjKGxpbmUpO1xuICBpZiAobWF0Y2gpIHJldHVybiBnZXRMYXN0UGFydChtYXRjaFsxXSk7XG4gIHJldHVybiB1bmRlZmluZWQ7XG59O1xuXG52YXIgaW50ZXJuYWxSZWFjdEZ1bmN0aW9uTmFtZXMgPSAvKiAjX19QVVJFX18gKi9uZXcgU2V0KFsncmVuZGVyV2l0aEhvb2tzJywgJ3Byb2Nlc3NDaGlsZCcsICdmaW5pc2hDbGFzc0NvbXBvbmVudCcsICdyZW5kZXJUb1N0cmluZyddKTsgLy8gVGhlc2UgaWRlbnRpZmllcnMgY29tZSBmcm9tIGVycm9yIHN0YWNrcywgc28gdGhleSBoYXZlIHRvIGJlIHZhbGlkIEpTXG4vLyBpZGVudGlmaWVycywgdGh1cyB3ZSBvbmx5IG5lZWQgdG8gcmVwbGFjZSB3aGF0IGlzIGEgdmFsaWQgY2hhcmFjdGVyIGZvciBKUyxcbi8vIGJ1dCBub3QgZm9yIENTUy5cblxudmFyIHNhbml0aXplSWRlbnRpZmllciA9IGZ1bmN0aW9uIHNhbml0aXplSWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHJldHVybiBpZGVudGlmaWVyLnJlcGxhY2UoL1xcJC9nLCAnLScpO1xufTtcblxudmFyIGdldExhYmVsRnJvbVN0YWNrVHJhY2UgPSBmdW5jdGlvbiBnZXRMYWJlbEZyb21TdGFja1RyYWNlKHN0YWNrVHJhY2UpIHtcbiAgaWYgKCFzdGFja1RyYWNlKSByZXR1cm4gdW5kZWZpbmVkO1xuICB2YXIgbGluZXMgPSBzdGFja1RyYWNlLnNwbGl0KCdcXG4nKTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpbmVzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGZ1bmN0aW9uTmFtZSA9IGdldEZ1bmN0aW9uTmFtZUZyb21TdGFja1RyYWNlTGluZShsaW5lc1tpXSk7IC8vIFRoZSBmaXJzdCBsaW5lIG9mIFY4IHN0YWNrIHRyYWNlcyBpcyBqdXN0IFwiRXJyb3JcIlxuXG4gICAgaWYgKCFmdW5jdGlvbk5hbWUpIGNvbnRpbnVlOyAvLyBJZiB3ZSByZWFjaCBvbmUgb2YgdGhlc2UsIHdlIGhhdmUgZ29uZSB0b28gZmFyIGFuZCBzaG91bGQgcXVpdFxuXG4gICAgaWYgKGludGVybmFsUmVhY3RGdW5jdGlvbk5hbWVzLmhhcyhmdW5jdGlvbk5hbWUpKSBicmVhazsgLy8gVGhlIGNvbXBvbmVudCBuYW1lIGlzIHRoZSBmaXJzdCBmdW5jdGlvbiBpbiB0aGUgc3RhY2sgdGhhdCBzdGFydHMgd2l0aCBhblxuICAgIC8vIHVwcGVyY2FzZSBsZXR0ZXJcblxuICAgIGlmICgvXltBLVpdLy50ZXN0KGZ1bmN0aW9uTmFtZSkpIHJldHVybiBzYW5pdGl6ZUlkZW50aWZpZXIoZnVuY3Rpb25OYW1lKTtcbiAgfVxuXG4gIHJldHVybiB1bmRlZmluZWQ7XG59O1xuXG52YXIgdXNlSW5zZXJ0aW9uRWZmZWN0ID0gUmVhY3RbJ3VzZUluc2VydGlvbicgKyAnRWZmZWN0J10gPyBSZWFjdFsndXNlSW5zZXJ0aW9uJyArICdFZmZlY3QnXSA6IGZ1bmN0aW9uIHVzZUluc2VydGlvbkVmZmVjdChjcmVhdGUpIHtcbiAgY3JlYXRlKCk7XG59O1xuZnVuY3Rpb24gdXNlSW5zZXJ0aW9uRWZmZWN0TWF5YmUoY3JlYXRlKSB7XG5cbiAgdXNlSW5zZXJ0aW9uRWZmZWN0KGNyZWF0ZSk7XG59XG5cbnZhciB0eXBlUHJvcE5hbWUgPSAnX19FTU9USU9OX1RZUEVfUExFQVNFX0RPX05PVF9VU0VfXyc7XG52YXIgbGFiZWxQcm9wTmFtZSA9ICdfX0VNT1RJT05fTEFCRUxfUExFQVNFX0RPX05PVF9VU0VfXyc7XG52YXIgY3JlYXRlRW1vdGlvblByb3BzID0gZnVuY3Rpb24gY3JlYXRlRW1vdGlvblByb3BzKHR5cGUsIHByb3BzKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHR5cGVvZiBwcm9wcy5jc3MgPT09ICdzdHJpbmcnICYmIC8vIGNoZWNrIGlmIHRoZXJlIGlzIGEgY3NzIGRlY2xhcmF0aW9uXG4gIHByb3BzLmNzcy5pbmRleE9mKCc6JykgIT09IC0xKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiU3RyaW5ncyBhcmUgbm90IGFsbG93ZWQgYXMgY3NzIHByb3AgdmFsdWVzLCBwbGVhc2Ugd3JhcCBpdCBpbiBhIGNzcyB0ZW1wbGF0ZSBsaXRlcmFsIGZyb20gJ0BlbW90aW9uL3JlYWN0JyBsaWtlIHRoaXM6IGNzc2BcIiArIHByb3BzLmNzcyArIFwiYFwiKTtcbiAgfVxuXG4gIHZhciBuZXdQcm9wcyA9IHt9O1xuXG4gIGZvciAodmFyIGtleSBpbiBwcm9wcykge1xuICAgIGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKHByb3BzLCBrZXkpKSB7XG4gICAgICBuZXdQcm9wc1trZXldID0gcHJvcHNba2V5XTtcbiAgICB9XG4gIH1cblxuICBuZXdQcm9wc1t0eXBlUHJvcE5hbWVdID0gdHlwZTsgLy8gRm9yIHBlcmZvcm1hbmNlLCBvbmx5IGNhbGwgZ2V0TGFiZWxGcm9tU3RhY2tUcmFjZSBpbiBkZXZlbG9wbWVudCBhbmQgd2hlblxuICAvLyB0aGUgbGFiZWwgaGFzbid0IGFscmVhZHkgYmVlbiBjb21wdXRlZFxuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmICEhcHJvcHMuY3NzICYmICh0eXBlb2YgcHJvcHMuY3NzICE9PSAnb2JqZWN0JyB8fCB0eXBlb2YgcHJvcHMuY3NzLm5hbWUgIT09ICdzdHJpbmcnIHx8IHByb3BzLmNzcy5uYW1lLmluZGV4T2YoJy0nKSA9PT0gLTEpKSB7XG4gICAgdmFyIGxhYmVsID0gZ2V0TGFiZWxGcm9tU3RhY2tUcmFjZShuZXcgRXJyb3IoKS5zdGFjayk7XG4gICAgaWYgKGxhYmVsKSBuZXdQcm9wc1tsYWJlbFByb3BOYW1lXSA9IGxhYmVsO1xuICB9XG5cbiAgcmV0dXJuIG5ld1Byb3BzO1xufTtcblxudmFyIEluc2VydGlvbiA9IGZ1bmN0aW9uIEluc2VydGlvbihfcmVmKSB7XG4gIHZhciBjYWNoZSA9IF9yZWYuY2FjaGUsXG4gICAgICBzZXJpYWxpemVkID0gX3JlZi5zZXJpYWxpemVkLFxuICAgICAgaXNTdHJpbmdUYWcgPSBfcmVmLmlzU3RyaW5nVGFnO1xuICByZWdpc3RlclN0eWxlcyhjYWNoZSwgc2VyaWFsaXplZCwgaXNTdHJpbmdUYWcpO1xuICB2YXIgcnVsZXMgPSB1c2VJbnNlcnRpb25FZmZlY3RNYXliZShmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIGluc2VydFN0eWxlcyhjYWNoZSwgc2VyaWFsaXplZCwgaXNTdHJpbmdUYWcpO1xuICB9KTtcblxuICByZXR1cm4gbnVsbDtcbn07XG5cbnZhciBFbW90aW9uID0gLyogI19fUFVSRV9fICovd2l0aEVtb3Rpb25DYWNoZShmdW5jdGlvbiAocHJvcHMsIGNhY2hlLCByZWYpIHtcbiAgdmFyIGNzc1Byb3AgPSBwcm9wcy5jc3M7IC8vIHNvIHRoYXQgdXNpbmcgYGNzc2AgZnJvbSBgZW1vdGlvbmAgYW5kIHBhc3NpbmcgdGhlIHJlc3VsdCB0byB0aGUgY3NzIHByb3Agd29ya3NcbiAgLy8gbm90IHBhc3NpbmcgdGhlIHJlZ2lzdGVyZWQgY2FjaGUgdG8gc2VyaWFsaXplU3R5bGVzIGJlY2F1c2UgaXQgd291bGRcbiAgLy8gbWFrZSBjZXJ0YWluIGJhYmVsIG9wdGltaXNhdGlvbnMgbm90IHBvc3NpYmxlXG5cbiAgaWYgKHR5cGVvZiBjc3NQcm9wID09PSAnc3RyaW5nJyAmJiBjYWNoZS5yZWdpc3RlcmVkW2Nzc1Byb3BdICE9PSB1bmRlZmluZWQpIHtcbiAgICBjc3NQcm9wID0gY2FjaGUucmVnaXN0ZXJlZFtjc3NQcm9wXTtcbiAgfVxuXG4gIHZhciBXcmFwcGVkQ29tcG9uZW50ID0gcHJvcHNbdHlwZVByb3BOYW1lXTtcbiAgdmFyIHJlZ2lzdGVyZWRTdHlsZXMgPSBbY3NzUHJvcF07XG4gIHZhciBjbGFzc05hbWUgPSAnJztcblxuICBpZiAodHlwZW9mIHByb3BzLmNsYXNzTmFtZSA9PT0gJ3N0cmluZycpIHtcbiAgICBjbGFzc05hbWUgPSBnZXRSZWdpc3RlcmVkU3R5bGVzKGNhY2hlLnJlZ2lzdGVyZWQsIHJlZ2lzdGVyZWRTdHlsZXMsIHByb3BzLmNsYXNzTmFtZSk7XG4gIH0gZWxzZSBpZiAocHJvcHMuY2xhc3NOYW1lICE9IG51bGwpIHtcbiAgICBjbGFzc05hbWUgPSBwcm9wcy5jbGFzc05hbWUgKyBcIiBcIjtcbiAgfVxuXG4gIHZhciBzZXJpYWxpemVkID0gc2VyaWFsaXplU3R5bGVzKHJlZ2lzdGVyZWRTdHlsZXMsIHVuZGVmaW5lZCwgdXNlQ29udGV4dChUaGVtZUNvbnRleHQpKTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBzZXJpYWxpemVkLm5hbWUuaW5kZXhPZignLScpID09PSAtMSkge1xuICAgIHZhciBsYWJlbEZyb21TdGFjayA9IHByb3BzW2xhYmVsUHJvcE5hbWVdO1xuXG4gICAgaWYgKGxhYmVsRnJvbVN0YWNrKSB7XG4gICAgICBzZXJpYWxpemVkID0gc2VyaWFsaXplU3R5bGVzKFtzZXJpYWxpemVkLCAnbGFiZWw6JyArIGxhYmVsRnJvbVN0YWNrICsgJzsnXSk7XG4gICAgfVxuICB9XG5cbiAgY2xhc3NOYW1lICs9IGNhY2hlLmtleSArIFwiLVwiICsgc2VyaWFsaXplZC5uYW1lO1xuICB2YXIgbmV3UHJvcHMgPSB7fTtcblxuICBmb3IgKHZhciBrZXkgaW4gcHJvcHMpIHtcbiAgICBpZiAoaGFzT3duUHJvcGVydHkuY2FsbChwcm9wcywga2V5KSAmJiBrZXkgIT09ICdjc3MnICYmIGtleSAhPT0gdHlwZVByb3BOYW1lICYmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nIHx8IGtleSAhPT0gbGFiZWxQcm9wTmFtZSkpIHtcbiAgICAgIG5ld1Byb3BzW2tleV0gPSBwcm9wc1trZXldO1xuICAgIH1cbiAgfVxuXG4gIG5ld1Byb3BzLnJlZiA9IHJlZjtcbiAgbmV3UHJvcHMuY2xhc3NOYW1lID0gY2xhc3NOYW1lO1xuICByZXR1cm4gLyojX19QVVJFX18qL2NyZWF0ZUVsZW1lbnQoRnJhZ21lbnQsIG51bGwsIC8qI19fUFVSRV9fKi9jcmVhdGVFbGVtZW50KEluc2VydGlvbiwge1xuICAgIGNhY2hlOiBjYWNoZSxcbiAgICBzZXJpYWxpemVkOiBzZXJpYWxpemVkLFxuICAgIGlzU3RyaW5nVGFnOiB0eXBlb2YgV3JhcHBlZENvbXBvbmVudCA9PT0gJ3N0cmluZydcbiAgfSksIC8qI19fUFVSRV9fKi9jcmVhdGVFbGVtZW50KFdyYXBwZWRDb21wb25lbnQsIG5ld1Byb3BzKSk7XG59KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgRW1vdGlvbi5kaXNwbGF5TmFtZSA9ICdFbW90aW9uQ3NzUHJvcEludGVybmFsJztcbn1cblxuZXhwb3J0IHsgQ2FjaGVQcm92aWRlciBhcyBDLCBFbW90aW9uIGFzIEUsIFRoZW1lQ29udGV4dCBhcyBULCBfX3Vuc2FmZV91c2VFbW90aW9uQ2FjaGUgYXMgXywgdXNlVGhlbWUgYXMgYSwgVGhlbWVQcm92aWRlciBhcyBiLCBjcmVhdGVFbW90aW9uUHJvcHMgYXMgYywgd2l0aFRoZW1lIGFzIGQsIGhhc093blByb3BlcnR5IGFzIGgsIHVzZUluc2VydGlvbkVmZmVjdE1heWJlIGFzIHUsIHdpdGhFbW90aW9uQ2FjaGUgYXMgdyB9O1xuIiwiY29uc3QgcmVkID0ge1xuICA1MDogJyNmZmViZWUnLFxuICAxMDA6ICcjZmZjZGQyJyxcbiAgMjAwOiAnI2VmOWE5YScsXG4gIDMwMDogJyNlNTczNzMnLFxuICA0MDA6ICcjZWY1MzUwJyxcbiAgNTAwOiAnI2Y0NDMzNicsXG4gIDYwMDogJyNlNTM5MzUnLFxuICA3MDA6ICcjZDMyZjJmJyxcbiAgODAwOiAnI2M2MjgyOCcsXG4gIDkwMDogJyNiNzFjMWMnLFxuICBBMTAwOiAnI2ZmOGE4MCcsXG4gIEEyMDA6ICcjZmY1MjUyJyxcbiAgQTQwMDogJyNmZjE3NDQnLFxuICBBNzAwOiAnI2Q1MDAwMCdcbn07XG5leHBvcnQgZGVmYXVsdCByZWQ7IiwiY29uc3QgcHVycGxlID0ge1xuICA1MDogJyNmM2U1ZjUnLFxuICAxMDA6ICcjZTFiZWU3JyxcbiAgMjAwOiAnI2NlOTNkOCcsXG4gIDMwMDogJyNiYTY4YzgnLFxuICA0MDA6ICcjYWI0N2JjJyxcbiAgNTAwOiAnIzljMjdiMCcsXG4gIDYwMDogJyM4ZTI0YWEnLFxuICA3MDA6ICcjN2IxZmEyJyxcbiAgODAwOiAnIzZhMWI5YScsXG4gIDkwMDogJyM0YTE0OGMnLFxuICBBMTAwOiAnI2VhODBmYycsXG4gIEEyMDA6ICcjZTA0MGZiJyxcbiAgQTQwMDogJyNkNTAwZjknLFxuICBBNzAwOiAnI2FhMDBmZidcbn07XG5leHBvcnQgZGVmYXVsdCBwdXJwbGU7IiwiY29uc3QgYmx1ZSA9IHtcbiAgNTA6ICcjZTNmMmZkJyxcbiAgMTAwOiAnI2JiZGVmYicsXG4gIDIwMDogJyM5MGNhZjknLFxuICAzMDA6ICcjNjRiNWY2JyxcbiAgNDAwOiAnIzQyYTVmNScsXG4gIDUwMDogJyMyMTk2ZjMnLFxuICA2MDA6ICcjMWU4OGU1JyxcbiAgNzAwOiAnIzE5NzZkMicsXG4gIDgwMDogJyMxNTY1YzAnLFxuICA5MDA6ICcjMGQ0N2ExJyxcbiAgQTEwMDogJyM4MmIxZmYnLFxuICBBMjAwOiAnIzQ0OGFmZicsXG4gIEE0MDA6ICcjMjk3OWZmJyxcbiAgQTcwMDogJyMyOTYyZmYnXG59O1xuZXhwb3J0IGRlZmF1bHQgYmx1ZTsiLCJjb25zdCBsaWdodEJsdWUgPSB7XG4gIDUwOiAnI2UxZjVmZScsXG4gIDEwMDogJyNiM2U1ZmMnLFxuICAyMDA6ICcjODFkNGZhJyxcbiAgMzAwOiAnIzRmYzNmNycsXG4gIDQwMDogJyMyOWI2ZjYnLFxuICA1MDA6ICcjMDNhOWY0JyxcbiAgNjAwOiAnIzAzOWJlNScsXG4gIDcwMDogJyMwMjg4ZDEnLFxuICA4MDA6ICcjMDI3N2JkJyxcbiAgOTAwOiAnIzAxNTc5YicsXG4gIEExMDA6ICcjODBkOGZmJyxcbiAgQTIwMDogJyM0MGM0ZmYnLFxuICBBNDAwOiAnIzAwYjBmZicsXG4gIEE3MDA6ICcjMDA5MWVhJ1xufTtcbmV4cG9ydCBkZWZhdWx0IGxpZ2h0Qmx1ZTsiLCJjb25zdCBncmVlbiA9IHtcbiAgNTA6ICcjZThmNWU5JyxcbiAgMTAwOiAnI2M4ZTZjOScsXG4gIDIwMDogJyNhNWQ2YTcnLFxuICAzMDA6ICcjODFjNzg0JyxcbiAgNDAwOiAnIzY2YmI2YScsXG4gIDUwMDogJyM0Y2FmNTAnLFxuICA2MDA6ICcjNDNhMDQ3JyxcbiAgNzAwOiAnIzM4OGUzYycsXG4gIDgwMDogJyMyZTdkMzInLFxuICA5MDA6ICcjMWI1ZTIwJyxcbiAgQTEwMDogJyNiOWY2Y2EnLFxuICBBMjAwOiAnIzY5ZjBhZScsXG4gIEE0MDA6ICcjMDBlNjc2JyxcbiAgQTcwMDogJyMwMGM4NTMnXG59O1xuZXhwb3J0IGRlZmF1bHQgZ3JlZW47IiwiZXhwb3J0IHsgZGVmYXVsdCB9IGZyb20gJy4vUGFwZXInO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBwYXBlckNsYXNzZXMgfSBmcm9tICcuL3BhcGVyQ2xhc3Nlcyc7XG5leHBvcnQgKiBmcm9tICcuL3BhcGVyQ2xhc3Nlcyc7IiwiLyogZXNsaW50LWRpc2FibGUgKi9cbi8vIEluc3BpcmVkIGJ5IGh0dHBzOi8vZ2l0aHViLmNvbS9nYXJ5Y291cnQvbXVybXVyaGFzaC1qc1xuLy8gUG9ydGVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2FhcHBsZWJ5L3NtaGFzaGVyL2Jsb2IvNjFhMDUzMGYyODI3N2YyZTg1MGJmYzM5NjAwY2U2MWQwMmI1MThkZS9zcmMvTXVybXVySGFzaDIuY3BwI0wzNy1MODZcbmZ1bmN0aW9uIG11cm11cjIoc3RyKSB7XG4gIC8vICdtJyBhbmQgJ3InIGFyZSBtaXhpbmcgY29uc3RhbnRzIGdlbmVyYXRlZCBvZmZsaW5lLlxuICAvLyBUaGV5J3JlIG5vdCByZWFsbHkgJ21hZ2ljJywgdGhleSBqdXN0IGhhcHBlbiB0byB3b3JrIHdlbGwuXG4gIC8vIGNvbnN0IG0gPSAweDViZDFlOTk1O1xuICAvLyBjb25zdCByID0gMjQ7XG4gIC8vIEluaXRpYWxpemUgdGhlIGhhc2hcbiAgdmFyIGggPSAwOyAvLyBNaXggNCBieXRlcyBhdCBhIHRpbWUgaW50byB0aGUgaGFzaFxuXG4gIHZhciBrLFxuICAgICAgaSA9IDAsXG4gICAgICBsZW4gPSBzdHIubGVuZ3RoO1xuXG4gIGZvciAoOyBsZW4gPj0gNDsgKytpLCBsZW4gLT0gNCkge1xuICAgIGsgPSBzdHIuY2hhckNvZGVBdChpKSAmIDB4ZmYgfCAoc3RyLmNoYXJDb2RlQXQoKytpKSAmIDB4ZmYpIDw8IDggfCAoc3RyLmNoYXJDb2RlQXQoKytpKSAmIDB4ZmYpIDw8IDE2IHwgKHN0ci5jaGFyQ29kZUF0KCsraSkgJiAweGZmKSA8PCAyNDtcbiAgICBrID1cbiAgICAvKiBNYXRoLmltdWwoaywgbSk6ICovXG4gICAgKGsgJiAweGZmZmYpICogMHg1YmQxZTk5NSArICgoayA+Pj4gMTYpICogMHhlOTk1IDw8IDE2KTtcbiAgICBrIF49XG4gICAgLyogayA+Pj4gcjogKi9cbiAgICBrID4+PiAyNDtcbiAgICBoID1cbiAgICAvKiBNYXRoLmltdWwoaywgbSk6ICovXG4gICAgKGsgJiAweGZmZmYpICogMHg1YmQxZTk5NSArICgoayA+Pj4gMTYpICogMHhlOTk1IDw8IDE2KSBeXG4gICAgLyogTWF0aC5pbXVsKGgsIG0pOiAqL1xuICAgIChoICYgMHhmZmZmKSAqIDB4NWJkMWU5OTUgKyAoKGggPj4+IDE2KSAqIDB4ZTk5NSA8PCAxNik7XG4gIH0gLy8gSGFuZGxlIHRoZSBsYXN0IGZldyBieXRlcyBvZiB0aGUgaW5wdXQgYXJyYXlcblxuXG4gIHN3aXRjaCAobGVuKSB7XG4gICAgY2FzZSAzOlxuICAgICAgaCBePSAoc3RyLmNoYXJDb2RlQXQoaSArIDIpICYgMHhmZikgPDwgMTY7XG5cbiAgICBjYXNlIDI6XG4gICAgICBoIF49IChzdHIuY2hhckNvZGVBdChpICsgMSkgJiAweGZmKSA8PCA4O1xuXG4gICAgY2FzZSAxOlxuICAgICAgaCBePSBzdHIuY2hhckNvZGVBdChpKSAmIDB4ZmY7XG4gICAgICBoID1cbiAgICAgIC8qIE1hdGguaW11bChoLCBtKTogKi9cbiAgICAgIChoICYgMHhmZmZmKSAqIDB4NWJkMWU5OTUgKyAoKGggPj4+IDE2KSAqIDB4ZTk5NSA8PCAxNik7XG4gIH0gLy8gRG8gYSBmZXcgZmluYWwgbWl4ZXMgb2YgdGhlIGhhc2ggdG8gZW5zdXJlIHRoZSBsYXN0IGZld1xuICAvLyBieXRlcyBhcmUgd2VsbC1pbmNvcnBvcmF0ZWQuXG5cblxuICBoIF49IGggPj4+IDEzO1xuICBoID1cbiAgLyogTWF0aC5pbXVsKGgsIG0pOiAqL1xuICAoaCAmIDB4ZmZmZikgKiAweDViZDFlOTk1ICsgKChoID4+PiAxNikgKiAweGU5OTUgPDwgMTYpO1xuICByZXR1cm4gKChoIF4gaCA+Pj4gMTUpID4+PiAwKS50b1N0cmluZygzNik7XG59XG5cbmV4cG9ydCBkZWZhdWx0IG11cm11cjI7XG4iLCJ2YXIgdW5pdGxlc3NLZXlzID0ge1xuICBhbmltYXRpb25JdGVyYXRpb25Db3VudDogMSxcbiAgYm9yZGVySW1hZ2VPdXRzZXQ6IDEsXG4gIGJvcmRlckltYWdlU2xpY2U6IDEsXG4gIGJvcmRlckltYWdlV2lkdGg6IDEsXG4gIGJveEZsZXg6IDEsXG4gIGJveEZsZXhHcm91cDogMSxcbiAgYm94T3JkaW5hbEdyb3VwOiAxLFxuICBjb2x1bW5Db3VudDogMSxcbiAgY29sdW1uczogMSxcbiAgZmxleDogMSxcbiAgZmxleEdyb3c6IDEsXG4gIGZsZXhQb3NpdGl2ZTogMSxcbiAgZmxleFNocmluazogMSxcbiAgZmxleE5lZ2F0aXZlOiAxLFxuICBmbGV4T3JkZXI6IDEsXG4gIGdyaWRSb3c6IDEsXG4gIGdyaWRSb3dFbmQ6IDEsXG4gIGdyaWRSb3dTcGFuOiAxLFxuICBncmlkUm93U3RhcnQ6IDEsXG4gIGdyaWRDb2x1bW46IDEsXG4gIGdyaWRDb2x1bW5FbmQ6IDEsXG4gIGdyaWRDb2x1bW5TcGFuOiAxLFxuICBncmlkQ29sdW1uU3RhcnQ6IDEsXG4gIG1zR3JpZFJvdzogMSxcbiAgbXNHcmlkUm93U3BhbjogMSxcbiAgbXNHcmlkQ29sdW1uOiAxLFxuICBtc0dyaWRDb2x1bW5TcGFuOiAxLFxuICBmb250V2VpZ2h0OiAxLFxuICBsaW5lSGVpZ2h0OiAxLFxuICBvcGFjaXR5OiAxLFxuICBvcmRlcjogMSxcbiAgb3JwaGFuczogMSxcbiAgdGFiU2l6ZTogMSxcbiAgd2lkb3dzOiAxLFxuICB6SW5kZXg6IDEsXG4gIHpvb206IDEsXG4gIFdlYmtpdExpbmVDbGFtcDogMSxcbiAgLy8gU1ZHLXJlbGF0ZWQgcHJvcGVydGllc1xuICBmaWxsT3BhY2l0eTogMSxcbiAgZmxvb2RPcGFjaXR5OiAxLFxuICBzdG9wT3BhY2l0eTogMSxcbiAgc3Ryb2tlRGFzaGFycmF5OiAxLFxuICBzdHJva2VEYXNob2Zmc2V0OiAxLFxuICBzdHJva2VNaXRlcmxpbWl0OiAxLFxuICBzdHJva2VPcGFjaXR5OiAxLFxuICBzdHJva2VXaWR0aDogMVxufTtcblxuZXhwb3J0IGRlZmF1bHQgdW5pdGxlc3NLZXlzO1xuIiwiaW1wb3J0IGhhc2hTdHJpbmcgZnJvbSAnQGVtb3Rpb24vaGFzaCc7XG5pbXBvcnQgdW5pdGxlc3MgZnJvbSAnQGVtb3Rpb24vdW5pdGxlc3MnO1xuaW1wb3J0IG1lbW9pemUgZnJvbSAnQGVtb3Rpb24vbWVtb2l6ZSc7XG5cbnZhciBJTExFR0FMX0VTQ0FQRV9TRVFVRU5DRV9FUlJPUiA9IFwiWW91IGhhdmUgaWxsZWdhbCBlc2NhcGUgc2VxdWVuY2UgaW4geW91ciB0ZW1wbGF0ZSBsaXRlcmFsLCBtb3N0IGxpa2VseSBpbnNpZGUgY29udGVudCdzIHByb3BlcnR5IHZhbHVlLlxcbkJlY2F1c2UgeW91IHdyaXRlIHlvdXIgQ1NTIGluc2lkZSBhIEphdmFTY3JpcHQgc3RyaW5nIHlvdSBhY3R1YWxseSBoYXZlIHRvIGRvIGRvdWJsZSBlc2NhcGluZywgc28gZm9yIGV4YW1wbGUgXFxcImNvbnRlbnQ6ICdcXFxcMDBkNyc7XFxcIiBzaG91bGQgYmVjb21lIFxcXCJjb250ZW50OiAnXFxcXFxcXFwwMGQ3JztcXFwiLlxcbllvdSBjYW4gcmVhZCBtb3JlIGFib3V0IHRoaXMgaGVyZTpcXG5odHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9UZW1wbGF0ZV9saXRlcmFscyNFUzIwMThfcmV2aXNpb25fb2ZfaWxsZWdhbF9lc2NhcGVfc2VxdWVuY2VzXCI7XG52YXIgVU5ERUZJTkVEX0FTX09CSkVDVF9LRVlfRVJST1IgPSBcIllvdSBoYXZlIHBhc3NlZCBpbiBmYWxzeSB2YWx1ZSBhcyBzdHlsZSBvYmplY3QncyBrZXkgKGNhbiBoYXBwZW4gd2hlbiBpbiBleGFtcGxlIHlvdSBwYXNzIHVuZXhwb3J0ZWQgY29tcG9uZW50IGFzIGNvbXB1dGVkIGtleSkuXCI7XG52YXIgaHlwaGVuYXRlUmVnZXggPSAvW0EtWl18Xm1zL2c7XG52YXIgYW5pbWF0aW9uUmVnZXggPSAvX0VNT18oW15fXSs/KV8oW15dKj8pX0VNT18vZztcblxudmFyIGlzQ3VzdG9tUHJvcGVydHkgPSBmdW5jdGlvbiBpc0N1c3RvbVByb3BlcnR5KHByb3BlcnR5KSB7XG4gIHJldHVybiBwcm9wZXJ0eS5jaGFyQ29kZUF0KDEpID09PSA0NTtcbn07XG5cbnZhciBpc1Byb2Nlc3NhYmxlVmFsdWUgPSBmdW5jdGlvbiBpc1Byb2Nlc3NhYmxlVmFsdWUodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlICE9IG51bGwgJiYgdHlwZW9mIHZhbHVlICE9PSAnYm9vbGVhbic7XG59O1xuXG52YXIgcHJvY2Vzc1N0eWxlTmFtZSA9IC8qICNfX1BVUkVfXyAqL21lbW9pemUoZnVuY3Rpb24gKHN0eWxlTmFtZSkge1xuICByZXR1cm4gaXNDdXN0b21Qcm9wZXJ0eShzdHlsZU5hbWUpID8gc3R5bGVOYW1lIDogc3R5bGVOYW1lLnJlcGxhY2UoaHlwaGVuYXRlUmVnZXgsICctJCYnKS50b0xvd2VyQ2FzZSgpO1xufSk7XG5cbnZhciBwcm9jZXNzU3R5bGVWYWx1ZSA9IGZ1bmN0aW9uIHByb2Nlc3NTdHlsZVZhbHVlKGtleSwgdmFsdWUpIHtcbiAgc3dpdGNoIChrZXkpIHtcbiAgICBjYXNlICdhbmltYXRpb24nOlxuICAgIGNhc2UgJ2FuaW1hdGlvbk5hbWUnOlxuICAgICAge1xuICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgICAgIHJldHVybiB2YWx1ZS5yZXBsYWNlKGFuaW1hdGlvblJlZ2V4LCBmdW5jdGlvbiAobWF0Y2gsIHAxLCBwMikge1xuICAgICAgICAgICAgY3Vyc29yID0ge1xuICAgICAgICAgICAgICBuYW1lOiBwMSxcbiAgICAgICAgICAgICAgc3R5bGVzOiBwMixcbiAgICAgICAgICAgICAgbmV4dDogY3Vyc29yXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmV0dXJuIHAxO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9XG4gIH1cblxuICBpZiAodW5pdGxlc3Nba2V5XSAhPT0gMSAmJiAhaXNDdXN0b21Qcm9wZXJ0eShrZXkpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicgJiYgdmFsdWUgIT09IDApIHtcbiAgICByZXR1cm4gdmFsdWUgKyAncHgnO1xuICB9XG5cbiAgcmV0dXJuIHZhbHVlO1xufTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIGNvbnRlbnRWYWx1ZVBhdHRlcm4gPSAvKHZhcnxhdHRyfGNvdW50ZXJzP3x1cmx8KCgocmVwZWF0aW5nLSk/KGxpbmVhcnxyYWRpYWwpKXxjb25pYyktZ3JhZGllbnQpXFwofChuby0pPyhvcGVufGNsb3NlKS1xdW90ZS87XG4gIHZhciBjb250ZW50VmFsdWVzID0gWydub3JtYWwnLCAnbm9uZScsICdpbml0aWFsJywgJ2luaGVyaXQnLCAndW5zZXQnXTtcbiAgdmFyIG9sZFByb2Nlc3NTdHlsZVZhbHVlID0gcHJvY2Vzc1N0eWxlVmFsdWU7XG4gIHZhciBtc1BhdHRlcm4gPSAvXi1tcy0vO1xuICB2YXIgaHlwaGVuUGF0dGVybiA9IC8tKC4pL2c7XG4gIHZhciBoeXBoZW5hdGVkQ2FjaGUgPSB7fTtcblxuICBwcm9jZXNzU3R5bGVWYWx1ZSA9IGZ1bmN0aW9uIHByb2Nlc3NTdHlsZVZhbHVlKGtleSwgdmFsdWUpIHtcbiAgICBpZiAoa2V5ID09PSAnY29udGVudCcpIHtcbiAgICAgIGlmICh0eXBlb2YgdmFsdWUgIT09ICdzdHJpbmcnIHx8IGNvbnRlbnRWYWx1ZXMuaW5kZXhPZih2YWx1ZSkgPT09IC0xICYmICFjb250ZW50VmFsdWVQYXR0ZXJuLnRlc3QodmFsdWUpICYmICh2YWx1ZS5jaGFyQXQoMCkgIT09IHZhbHVlLmNoYXJBdCh2YWx1ZS5sZW5ndGggLSAxKSB8fCB2YWx1ZS5jaGFyQXQoMCkgIT09ICdcIicgJiYgdmFsdWUuY2hhckF0KDApICE9PSBcIidcIikpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiWW91IHNlZW0gdG8gYmUgdXNpbmcgYSB2YWx1ZSBmb3IgJ2NvbnRlbnQnIHdpdGhvdXQgcXVvdGVzLCB0cnkgcmVwbGFjaW5nIGl0IHdpdGggYGNvbnRlbnQ6ICdcXFwiXCIgKyB2YWx1ZSArIFwiXFxcIidgXCIpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBwcm9jZXNzZWQgPSBvbGRQcm9jZXNzU3R5bGVWYWx1ZShrZXksIHZhbHVlKTtcblxuICAgIGlmIChwcm9jZXNzZWQgIT09ICcnICYmICFpc0N1c3RvbVByb3BlcnR5KGtleSkgJiYga2V5LmluZGV4T2YoJy0nKSAhPT0gLTEgJiYgaHlwaGVuYXRlZENhY2hlW2tleV0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgaHlwaGVuYXRlZENhY2hlW2tleV0gPSB0cnVlO1xuICAgICAgY29uc29sZS5lcnJvcihcIlVzaW5nIGtlYmFiLWNhc2UgZm9yIGNzcyBwcm9wZXJ0aWVzIGluIG9iamVjdHMgaXMgbm90IHN1cHBvcnRlZC4gRGlkIHlvdSBtZWFuIFwiICsga2V5LnJlcGxhY2UobXNQYXR0ZXJuLCAnbXMtJykucmVwbGFjZShoeXBoZW5QYXR0ZXJuLCBmdW5jdGlvbiAoc3RyLCBfY2hhcikge1xuICAgICAgICByZXR1cm4gX2NoYXIudG9VcHBlckNhc2UoKTtcbiAgICAgIH0pICsgXCI/XCIpO1xuICAgIH1cblxuICAgIHJldHVybiBwcm9jZXNzZWQ7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGhhbmRsZUludGVycG9sYXRpb24obWVyZ2VkUHJvcHMsIHJlZ2lzdGVyZWQsIGludGVycG9sYXRpb24pIHtcbiAgaWYgKGludGVycG9sYXRpb24gPT0gbnVsbCkge1xuICAgIHJldHVybiAnJztcbiAgfVxuXG4gIGlmIChpbnRlcnBvbGF0aW9uLl9fZW1vdGlvbl9zdHlsZXMgIT09IHVuZGVmaW5lZCkge1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIGludGVycG9sYXRpb24udG9TdHJpbmcoKSA9PT0gJ05PX0NPTVBPTkVOVF9TRUxFQ1RPUicpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignQ29tcG9uZW50IHNlbGVjdG9ycyBjYW4gb25seSBiZSB1c2VkIGluIGNvbmp1bmN0aW9uIHdpdGggQGVtb3Rpb24vYmFiZWwtcGx1Z2luLicpO1xuICAgIH1cblxuICAgIHJldHVybiBpbnRlcnBvbGF0aW9uO1xuICB9XG5cbiAgc3dpdGNoICh0eXBlb2YgaW50ZXJwb2xhdGlvbikge1xuICAgIGNhc2UgJ2Jvb2xlYW4nOlxuICAgICAge1xuICAgICAgICByZXR1cm4gJyc7XG4gICAgICB9XG5cbiAgICBjYXNlICdvYmplY3QnOlxuICAgICAge1xuICAgICAgICBpZiAoaW50ZXJwb2xhdGlvbi5hbmltID09PSAxKSB7XG4gICAgICAgICAgY3Vyc29yID0ge1xuICAgICAgICAgICAgbmFtZTogaW50ZXJwb2xhdGlvbi5uYW1lLFxuICAgICAgICAgICAgc3R5bGVzOiBpbnRlcnBvbGF0aW9uLnN0eWxlcyxcbiAgICAgICAgICAgIG5leHQ6IGN1cnNvclxuICAgICAgICAgIH07XG4gICAgICAgICAgcmV0dXJuIGludGVycG9sYXRpb24ubmFtZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChpbnRlcnBvbGF0aW9uLnN0eWxlcyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgdmFyIG5leHQgPSBpbnRlcnBvbGF0aW9uLm5leHQ7XG5cbiAgICAgICAgICBpZiAobmV4dCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAvLyBub3QgdGhlIG1vc3QgZWZmaWNpZW50IHRoaW5nIGV2ZXIgYnV0IHRoaXMgaXMgYSBwcmV0dHkgcmFyZSBjYXNlXG4gICAgICAgICAgICAvLyBhbmQgdGhlcmUgd2lsbCBiZSB2ZXJ5IGZldyBpdGVyYXRpb25zIG9mIHRoaXMgZ2VuZXJhbGx5XG4gICAgICAgICAgICB3aGlsZSAobmV4dCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgIGN1cnNvciA9IHtcbiAgICAgICAgICAgICAgICBuYW1lOiBuZXh0Lm5hbWUsXG4gICAgICAgICAgICAgICAgc3R5bGVzOiBuZXh0LnN0eWxlcyxcbiAgICAgICAgICAgICAgICBuZXh0OiBjdXJzb3JcbiAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgbmV4dCA9IG5leHQubmV4dDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICB2YXIgc3R5bGVzID0gaW50ZXJwb2xhdGlvbi5zdHlsZXMgKyBcIjtcIjtcblxuICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIGludGVycG9sYXRpb24ubWFwICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHN0eWxlcyArPSBpbnRlcnBvbGF0aW9uLm1hcDtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gc3R5bGVzO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGNyZWF0ZVN0cmluZ0Zyb21PYmplY3QobWVyZ2VkUHJvcHMsIHJlZ2lzdGVyZWQsIGludGVycG9sYXRpb24pO1xuICAgICAgfVxuXG4gICAgY2FzZSAnZnVuY3Rpb24nOlxuICAgICAge1xuICAgICAgICBpZiAobWVyZ2VkUHJvcHMgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIHZhciBwcmV2aW91c0N1cnNvciA9IGN1cnNvcjtcbiAgICAgICAgICB2YXIgcmVzdWx0ID0gaW50ZXJwb2xhdGlvbihtZXJnZWRQcm9wcyk7XG4gICAgICAgICAgY3Vyc29yID0gcHJldmlvdXNDdXJzb3I7XG4gICAgICAgICAgcmV0dXJuIGhhbmRsZUludGVycG9sYXRpb24obWVyZ2VkUHJvcHMsIHJlZ2lzdGVyZWQsIHJlc3VsdCk7XG4gICAgICAgIH0gZWxzZSBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Z1bmN0aW9ucyB0aGF0IGFyZSBpbnRlcnBvbGF0ZWQgaW4gY3NzIGNhbGxzIHdpbGwgYmUgc3RyaW5naWZpZWQuXFxuJyArICdJZiB5b3Ugd2FudCB0byBoYXZlIGEgY3NzIGNhbGwgYmFzZWQgb24gcHJvcHMsIGNyZWF0ZSBhIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhIGNzcyBjYWxsIGxpa2UgdGhpc1xcbicgKyAnbGV0IGR5bmFtaWNTdHlsZSA9IChwcm9wcykgPT4gY3NzYGNvbG9yOiAke3Byb3BzLmNvbG9yfWBcXG4nICsgJ0l0IGNhbiBiZSBjYWxsZWQgZGlyZWN0bHkgd2l0aCBwcm9wcyBvciBpbnRlcnBvbGF0ZWQgaW4gYSBzdHlsZWQgY2FsbCBsaWtlIHRoaXNcXG4nICsgXCJsZXQgU29tZUNvbXBvbmVudCA9IHN0eWxlZCgnZGl2JylgJHtkeW5hbWljU3R5bGV9YFwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgY2FzZSAnc3RyaW5nJzpcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIHZhciBtYXRjaGVkID0gW107XG4gICAgICAgIHZhciByZXBsYWNlZCA9IGludGVycG9sYXRpb24ucmVwbGFjZShhbmltYXRpb25SZWdleCwgZnVuY3Rpb24gKG1hdGNoLCBwMSwgcDIpIHtcbiAgICAgICAgICB2YXIgZmFrZVZhck5hbWUgPSBcImFuaW1hdGlvblwiICsgbWF0Y2hlZC5sZW5ndGg7XG4gICAgICAgICAgbWF0Y2hlZC5wdXNoKFwiY29uc3QgXCIgKyBmYWtlVmFyTmFtZSArIFwiID0ga2V5ZnJhbWVzYFwiICsgcDIucmVwbGFjZSgvXkBrZXlmcmFtZXMgYW5pbWF0aW9uLVxcdysvLCAnJykgKyBcImBcIik7XG4gICAgICAgICAgcmV0dXJuIFwiJHtcIiArIGZha2VWYXJOYW1lICsgXCJ9XCI7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmIChtYXRjaGVkLmxlbmd0aCkge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ2BrZXlmcmFtZXNgIG91dHB1dCBnb3QgaW50ZXJwb2xhdGVkIGludG8gcGxhaW4gc3RyaW5nLCBwbGVhc2Ugd3JhcCBpdCB3aXRoIGBjc3NgLlxcblxcbicgKyAnSW5zdGVhZCBvZiBkb2luZyB0aGlzOlxcblxcbicgKyBbXS5jb25jYXQobWF0Y2hlZCwgW1wiYFwiICsgcmVwbGFjZWQgKyBcImBcIl0pLmpvaW4oJ1xcbicpICsgJ1xcblxcbllvdSBzaG91bGQgd3JhcCBpdCB3aXRoIGBjc3NgIGxpa2UgdGhpczpcXG5cXG4nICsgKFwiY3NzYFwiICsgcmVwbGFjZWQgKyBcImBcIikpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGJyZWFrO1xuICB9IC8vIGZpbmFsaXplIHN0cmluZyB2YWx1ZXMgKHJlZ3VsYXIgc3RyaW5ncyBhbmQgZnVuY3Rpb25zIGludGVycG9sYXRlZCBpbnRvIGNzcyBjYWxscylcblxuXG4gIGlmIChyZWdpc3RlcmVkID09IG51bGwpIHtcbiAgICByZXR1cm4gaW50ZXJwb2xhdGlvbjtcbiAgfVxuXG4gIHZhciBjYWNoZWQgPSByZWdpc3RlcmVkW2ludGVycG9sYXRpb25dO1xuICByZXR1cm4gY2FjaGVkICE9PSB1bmRlZmluZWQgPyBjYWNoZWQgOiBpbnRlcnBvbGF0aW9uO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVTdHJpbmdGcm9tT2JqZWN0KG1lcmdlZFByb3BzLCByZWdpc3RlcmVkLCBvYmopIHtcbiAgdmFyIHN0cmluZyA9ICcnO1xuXG4gIGlmIChBcnJheS5pc0FycmF5KG9iaikpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG9iai5sZW5ndGg7IGkrKykge1xuICAgICAgc3RyaW5nICs9IGhhbmRsZUludGVycG9sYXRpb24obWVyZ2VkUHJvcHMsIHJlZ2lzdGVyZWQsIG9ialtpXSkgKyBcIjtcIjtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgZm9yICh2YXIgX2tleSBpbiBvYmopIHtcbiAgICAgIHZhciB2YWx1ZSA9IG9ialtfa2V5XTtcblxuICAgICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgaWYgKHJlZ2lzdGVyZWQgIT0gbnVsbCAmJiByZWdpc3RlcmVkW3ZhbHVlXSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgc3RyaW5nICs9IF9rZXkgKyBcIntcIiArIHJlZ2lzdGVyZWRbdmFsdWVdICsgXCJ9XCI7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNQcm9jZXNzYWJsZVZhbHVlKHZhbHVlKSkge1xuICAgICAgICAgIHN0cmluZyArPSBwcm9jZXNzU3R5bGVOYW1lKF9rZXkpICsgXCI6XCIgKyBwcm9jZXNzU3R5bGVWYWx1ZShfa2V5LCB2YWx1ZSkgKyBcIjtcIjtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKF9rZXkgPT09ICdOT19DT01QT05FTlRfU0VMRUNUT1InICYmIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NvbXBvbmVudCBzZWxlY3RvcnMgY2FuIG9ubHkgYmUgdXNlZCBpbiBjb25qdW5jdGlvbiB3aXRoIEBlbW90aW9uL2JhYmVsLXBsdWdpbi4nKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSAmJiB0eXBlb2YgdmFsdWVbMF0gPT09ICdzdHJpbmcnICYmIChyZWdpc3RlcmVkID09IG51bGwgfHwgcmVnaXN0ZXJlZFt2YWx1ZVswXV0gPT09IHVuZGVmaW5lZCkpIHtcbiAgICAgICAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgdmFsdWUubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICBpZiAoaXNQcm9jZXNzYWJsZVZhbHVlKHZhbHVlW19pXSkpIHtcbiAgICAgICAgICAgICAgc3RyaW5nICs9IHByb2Nlc3NTdHlsZU5hbWUoX2tleSkgKyBcIjpcIiArIHByb2Nlc3NTdHlsZVZhbHVlKF9rZXksIHZhbHVlW19pXSkgKyBcIjtcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIGludGVycG9sYXRlZCA9IGhhbmRsZUludGVycG9sYXRpb24obWVyZ2VkUHJvcHMsIHJlZ2lzdGVyZWQsIHZhbHVlKTtcblxuICAgICAgICAgIHN3aXRjaCAoX2tleSkge1xuICAgICAgICAgICAgY2FzZSAnYW5pbWF0aW9uJzpcbiAgICAgICAgICAgIGNhc2UgJ2FuaW1hdGlvbk5hbWUnOlxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc3RyaW5nICs9IHByb2Nlc3NTdHlsZU5hbWUoX2tleSkgKyBcIjpcIiArIGludGVycG9sYXRlZCArIFwiO1wiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBfa2V5ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihVTkRFRklORURfQVNfT0JKRUNUX0tFWV9FUlJPUik7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgc3RyaW5nICs9IF9rZXkgKyBcIntcIiArIGludGVycG9sYXRlZCArIFwifVwiO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHN0cmluZztcbn1cblxudmFyIGxhYmVsUGF0dGVybiA9IC9sYWJlbDpcXHMqKFteXFxzO1xcbntdKylcXHMqKDt8JCkvZztcbnZhciBzb3VyY2VNYXBQYXR0ZXJuO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBzb3VyY2VNYXBQYXR0ZXJuID0gL1xcL1xcKiNcXHNzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb25cXC9qc29uO1xcUytcXHMrXFwqXFwvL2c7XG59IC8vIHRoaXMgaXMgdGhlIGN1cnNvciBmb3Iga2V5ZnJhbWVzXG4vLyBrZXlmcmFtZXMgYXJlIHN0b3JlZCBvbiB0aGUgU2VyaWFsaXplZFN0eWxlcyBvYmplY3QgYXMgYSBsaW5rZWQgbGlzdFxuXG5cbnZhciBjdXJzb3I7XG52YXIgc2VyaWFsaXplU3R5bGVzID0gZnVuY3Rpb24gc2VyaWFsaXplU3R5bGVzKGFyZ3MsIHJlZ2lzdGVyZWQsIG1lcmdlZFByb3BzKSB7XG4gIGlmIChhcmdzLmxlbmd0aCA9PT0gMSAmJiB0eXBlb2YgYXJnc1swXSA9PT0gJ29iamVjdCcgJiYgYXJnc1swXSAhPT0gbnVsbCAmJiBhcmdzWzBdLnN0eWxlcyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuIGFyZ3NbMF07XG4gIH1cblxuICB2YXIgc3RyaW5nTW9kZSA9IHRydWU7XG4gIHZhciBzdHlsZXMgPSAnJztcbiAgY3Vyc29yID0gdW5kZWZpbmVkO1xuICB2YXIgc3RyaW5ncyA9IGFyZ3NbMF07XG5cbiAgaWYgKHN0cmluZ3MgPT0gbnVsbCB8fCBzdHJpbmdzLnJhdyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgc3RyaW5nTW9kZSA9IGZhbHNlO1xuICAgIHN0eWxlcyArPSBoYW5kbGVJbnRlcnBvbGF0aW9uKG1lcmdlZFByb3BzLCByZWdpc3RlcmVkLCBzdHJpbmdzKTtcbiAgfSBlbHNlIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBzdHJpbmdzWzBdID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoSUxMRUdBTF9FU0NBUEVfU0VRVUVOQ0VfRVJST1IpO1xuICAgIH1cblxuICAgIHN0eWxlcyArPSBzdHJpbmdzWzBdO1xuICB9IC8vIHdlIHN0YXJ0IGF0IDEgc2luY2Ugd2UndmUgYWxyZWFkeSBoYW5kbGVkIHRoZSBmaXJzdCBhcmdcblxuXG4gIGZvciAodmFyIGkgPSAxOyBpIDwgYXJncy5sZW5ndGg7IGkrKykge1xuICAgIHN0eWxlcyArPSBoYW5kbGVJbnRlcnBvbGF0aW9uKG1lcmdlZFByb3BzLCByZWdpc3RlcmVkLCBhcmdzW2ldKTtcblxuICAgIGlmIChzdHJpbmdNb2RlKSB7XG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBzdHJpbmdzW2ldID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihJTExFR0FMX0VTQ0FQRV9TRVFVRU5DRV9FUlJPUik7XG4gICAgICB9XG5cbiAgICAgIHN0eWxlcyArPSBzdHJpbmdzW2ldO1xuICAgIH1cbiAgfVxuXG4gIHZhciBzb3VyY2VNYXA7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICBzdHlsZXMgPSBzdHlsZXMucmVwbGFjZShzb3VyY2VNYXBQYXR0ZXJuLCBmdW5jdGlvbiAobWF0Y2gpIHtcbiAgICAgIHNvdXJjZU1hcCA9IG1hdGNoO1xuICAgICAgcmV0dXJuICcnO1xuICAgIH0pO1xuICB9IC8vIHVzaW5nIGEgZ2xvYmFsIHJlZ2V4IHdpdGggLmV4ZWMgaXMgc3RhdGVmdWwgc28gbGFzdEluZGV4IGhhcyB0byBiZSByZXNldCBlYWNoIHRpbWVcblxuXG4gIGxhYmVsUGF0dGVybi5sYXN0SW5kZXggPSAwO1xuICB2YXIgaWRlbnRpZmllck5hbWUgPSAnJztcbiAgdmFyIG1hdGNoOyAvLyBodHRwczovL2VzYmVuY2guY29tL2JlbmNoLzViODA5YzJjZjI5NDk4MDBhMGY2MWZiNVxuXG4gIHdoaWxlICgobWF0Y2ggPSBsYWJlbFBhdHRlcm4uZXhlYyhzdHlsZXMpKSAhPT0gbnVsbCkge1xuICAgIGlkZW50aWZpZXJOYW1lICs9ICctJyArIC8vICRGbG93Rml4TWUgd2Uga25vdyBpdCdzIG5vdCBudWxsXG4gICAgbWF0Y2hbMV07XG4gIH1cblxuICB2YXIgbmFtZSA9IGhhc2hTdHJpbmcoc3R5bGVzKSArIGlkZW50aWZpZXJOYW1lO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gJEZsb3dGaXhNZSBTZXJpYWxpemVkU3R5bGVzIHR5cGUgZG9lc24ndCBoYXZlIHRvU3RyaW5nIHByb3BlcnR5IChhbmQgd2UgZG9uJ3Qgd2FudCB0byBhZGQgaXQpXG4gICAgcmV0dXJuIHtcbiAgICAgIG5hbWU6IG5hbWUsXG4gICAgICBzdHlsZXM6IHN0eWxlcyxcbiAgICAgIG1hcDogc291cmNlTWFwLFxuICAgICAgbmV4dDogY3Vyc29yLFxuICAgICAgdG9TdHJpbmc6IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gXCJZb3UgaGF2ZSB0cmllZCB0byBzdHJpbmdpZnkgb2JqZWN0IHJldHVybmVkIGZyb20gYGNzc2AgZnVuY3Rpb24uIEl0IGlzbid0IHN1cHBvc2VkIHRvIGJlIHVzZWQgZGlyZWN0bHkgKGUuZy4gYXMgdmFsdWUgb2YgdGhlIGBjbGFzc05hbWVgIHByb3ApLCBidXQgcmF0aGVyIGhhbmRlZCB0byBlbW90aW9uIHNvIGl0IGNhbiBoYW5kbGUgaXQgKGUuZy4gYXMgdmFsdWUgb2YgYGNzc2AgcHJvcCkuXCI7XG4gICAgICB9XG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgbmFtZTogbmFtZSxcbiAgICBzdHlsZXM6IHN0eWxlcyxcbiAgICBuZXh0OiBjdXJzb3JcbiAgfTtcbn07XG5cbmV4cG9ydCB7IHNlcmlhbGl6ZVN0eWxlcyB9O1xuIiwiY29uc3QgY29tbW9uID0ge1xuICBibGFjazogJyMwMDAnLFxuICB3aGl0ZTogJyNmZmYnXG59O1xuZXhwb3J0IGRlZmF1bHQgY29tbW9uOyIsImNvbnN0IG9yYW5nZSA9IHtcbiAgNTA6ICcjZmZmM2UwJyxcbiAgMTAwOiAnI2ZmZTBiMicsXG4gIDIwMDogJyNmZmNjODAnLFxuICAzMDA6ICcjZmZiNzRkJyxcbiAgNDAwOiAnI2ZmYTcyNicsXG4gIDUwMDogJyNmZjk4MDAnLFxuICA2MDA6ICcjZmI4YzAwJyxcbiAgNzAwOiAnI2Y1N2MwMCcsXG4gIDgwMDogJyNlZjZjMDAnLFxuICA5MDA6ICcjZTY1MTAwJyxcbiAgQTEwMDogJyNmZmQxODAnLFxuICBBMjAwOiAnI2ZmYWI0MCcsXG4gIEE0MDA6ICcjZmY5MTAwJyxcbiAgQTcwMDogJyNmZjZkMDAnXG59O1xuZXhwb3J0IGRlZmF1bHQgb3JhbmdlOyIsImltcG9ydCB7IGdlbmVyYXRlVXRpbGl0eUNsYXNzLCBnZW5lcmF0ZVV0aWxpdHlDbGFzc2VzIH0gZnJvbSAnQG11aS9iYXNlJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRQYXBlclV0aWxpdHlDbGFzcyhzbG90KSB7XG4gIHJldHVybiBnZW5lcmF0ZVV0aWxpdHlDbGFzcygnTXVpUGFwZXInLCBzbG90KTtcbn1cbmNvbnN0IHBhcGVyQ2xhc3NlcyA9IGdlbmVyYXRlVXRpbGl0eUNsYXNzZXMoJ011aVBhcGVyJywgWydyb290JywgJ3JvdW5kZWQnLCAnb3V0bGluZWQnLCAnZWxldmF0aW9uJywgJ2VsZXZhdGlvbjAnLCAnZWxldmF0aW9uMScsICdlbGV2YXRpb24yJywgJ2VsZXZhdGlvbjMnLCAnZWxldmF0aW9uNCcsICdlbGV2YXRpb241JywgJ2VsZXZhdGlvbjYnLCAnZWxldmF0aW9uNycsICdlbGV2YXRpb244JywgJ2VsZXZhdGlvbjknLCAnZWxldmF0aW9uMTAnLCAnZWxldmF0aW9uMTEnLCAnZWxldmF0aW9uMTInLCAnZWxldmF0aW9uMTMnLCAnZWxldmF0aW9uMTQnLCAnZWxldmF0aW9uMTUnLCAnZWxldmF0aW9uMTYnLCAnZWxldmF0aW9uMTcnLCAnZWxldmF0aW9uMTgnLCAnZWxldmF0aW9uMTknLCAnZWxldmF0aW9uMjAnLCAnZWxldmF0aW9uMjEnLCAnZWxldmF0aW9uMjInLCAnZWxldmF0aW9uMjMnLCAnZWxldmF0aW9uMjQnXSk7XG5leHBvcnQgZGVmYXVsdCBwYXBlckNsYXNzZXM7IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmltcG9ydCB7IGZvcm1hdE11aUVycm9yTWVzc2FnZSBhcyBfZm9ybWF0TXVpRXJyb3JNZXNzYWdlIH0gZnJvbSBcIkBtdWkvdXRpbHNcIjtcbmNvbnN0IF9leGNsdWRlZCA9IFtcIm1vZGVcIiwgXCJjb250cmFzdFRocmVzaG9sZFwiLCBcInRvbmFsT2Zmc2V0XCJdO1xuaW1wb3J0IHsgZGVlcG1lcmdlIH0gZnJvbSAnQG11aS91dGlscyc7XG5pbXBvcnQgeyBkYXJrZW4sIGdldENvbnRyYXN0UmF0aW8sIGxpZ2h0ZW4gfSBmcm9tICdAbXVpL3N5c3RlbSc7XG5pbXBvcnQgY29tbW9uIGZyb20gJy4uL2NvbG9ycy9jb21tb24nO1xuaW1wb3J0IGdyZXkgZnJvbSAnLi4vY29sb3JzL2dyZXknO1xuaW1wb3J0IHB1cnBsZSBmcm9tICcuLi9jb2xvcnMvcHVycGxlJztcbmltcG9ydCByZWQgZnJvbSAnLi4vY29sb3JzL3JlZCc7XG5pbXBvcnQgb3JhbmdlIGZyb20gJy4uL2NvbG9ycy9vcmFuZ2UnO1xuaW1wb3J0IGJsdWUgZnJvbSAnLi4vY29sb3JzL2JsdWUnO1xuaW1wb3J0IGxpZ2h0Qmx1ZSBmcm9tICcuLi9jb2xvcnMvbGlnaHRCbHVlJztcbmltcG9ydCBncmVlbiBmcm9tICcuLi9jb2xvcnMvZ3JlZW4nO1xuZXhwb3J0IGNvbnN0IGxpZ2h0ID0ge1xuICAvLyBUaGUgY29sb3JzIHVzZWQgdG8gc3R5bGUgdGhlIHRleHQuXG4gIHRleHQ6IHtcbiAgICAvLyBUaGUgbW9zdCBpbXBvcnRhbnQgdGV4dC5cbiAgICBwcmltYXJ5OiAncmdiYSgwLCAwLCAwLCAwLjg3KScsXG4gICAgLy8gU2Vjb25kYXJ5IHRleHQuXG4gICAgc2Vjb25kYXJ5OiAncmdiYSgwLCAwLCAwLCAwLjYpJyxcbiAgICAvLyBEaXNhYmxlZCB0ZXh0IGhhdmUgZXZlbiBsb3dlciB2aXN1YWwgcHJvbWluZW5jZS5cbiAgICBkaXNhYmxlZDogJ3JnYmEoMCwgMCwgMCwgMC4zOCknXG4gIH0sXG4gIC8vIFRoZSBjb2xvciB1c2VkIHRvIGRpdmlkZSBkaWZmZXJlbnQgZWxlbWVudHMuXG4gIGRpdmlkZXI6ICdyZ2JhKDAsIDAsIDAsIDAuMTIpJyxcbiAgLy8gVGhlIGJhY2tncm91bmQgY29sb3JzIHVzZWQgdG8gc3R5bGUgdGhlIHN1cmZhY2VzLlxuICAvLyBDb25zaXN0ZW5jeSBiZXR3ZWVuIHRoZXNlIHZhbHVlcyBpcyBpbXBvcnRhbnQuXG4gIGJhY2tncm91bmQ6IHtcbiAgICBwYXBlcjogY29tbW9uLndoaXRlLFxuICAgIGRlZmF1bHQ6IGNvbW1vbi53aGl0ZVxuICB9LFxuICAvLyBUaGUgY29sb3JzIHVzZWQgdG8gc3R5bGUgdGhlIGFjdGlvbiBlbGVtZW50cy5cbiAgYWN0aW9uOiB7XG4gICAgLy8gVGhlIGNvbG9yIG9mIGFuIGFjdGl2ZSBhY3Rpb24gbGlrZSBhbiBpY29uIGJ1dHRvbi5cbiAgICBhY3RpdmU6ICdyZ2JhKDAsIDAsIDAsIDAuNTQpJyxcbiAgICAvLyBUaGUgY29sb3Igb2YgYW4gaG92ZXJlZCBhY3Rpb24uXG4gICAgaG92ZXI6ICdyZ2JhKDAsIDAsIDAsIDAuMDQpJyxcbiAgICBob3Zlck9wYWNpdHk6IDAuMDQsXG4gICAgLy8gVGhlIGNvbG9yIG9mIGEgc2VsZWN0ZWQgYWN0aW9uLlxuICAgIHNlbGVjdGVkOiAncmdiYSgwLCAwLCAwLCAwLjA4KScsXG4gICAgc2VsZWN0ZWRPcGFjaXR5OiAwLjA4LFxuICAgIC8vIFRoZSBjb2xvciBvZiBhIGRpc2FibGVkIGFjdGlvbi5cbiAgICBkaXNhYmxlZDogJ3JnYmEoMCwgMCwgMCwgMC4yNiknLFxuICAgIC8vIFRoZSBiYWNrZ3JvdW5kIGNvbG9yIG9mIGEgZGlzYWJsZWQgYWN0aW9uLlxuICAgIGRpc2FibGVkQmFja2dyb3VuZDogJ3JnYmEoMCwgMCwgMCwgMC4xMiknLFxuICAgIGRpc2FibGVkT3BhY2l0eTogMC4zOCxcbiAgICBmb2N1czogJ3JnYmEoMCwgMCwgMCwgMC4xMiknLFxuICAgIGZvY3VzT3BhY2l0eTogMC4xMixcbiAgICBhY3RpdmF0ZWRPcGFjaXR5OiAwLjEyXG4gIH1cbn07XG5leHBvcnQgY29uc3QgZGFyayA9IHtcbiAgdGV4dDoge1xuICAgIHByaW1hcnk6IGNvbW1vbi53aGl0ZSxcbiAgICBzZWNvbmRhcnk6ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNyknLFxuICAgIGRpc2FibGVkOiAncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjUpJyxcbiAgICBpY29uOiAncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjUpJ1xuICB9LFxuICBkaXZpZGVyOiAncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEyKScsXG4gIGJhY2tncm91bmQ6IHtcbiAgICBwYXBlcjogJyMxMjEyMTInLFxuICAgIGRlZmF1bHQ6ICcjMTIxMjEyJ1xuICB9LFxuICBhY3Rpb246IHtcbiAgICBhY3RpdmU6IGNvbW1vbi53aGl0ZSxcbiAgICBob3ZlcjogJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMC4wOCknLFxuICAgIGhvdmVyT3BhY2l0eTogMC4wOCxcbiAgICBzZWxlY3RlZDogJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNiknLFxuICAgIHNlbGVjdGVkT3BhY2l0eTogMC4xNixcbiAgICBkaXNhYmxlZDogJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMC4zKScsXG4gICAgZGlzYWJsZWRCYWNrZ3JvdW5kOiAncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEyKScsXG4gICAgZGlzYWJsZWRPcGFjaXR5OiAwLjM4LFxuICAgIGZvY3VzOiAncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEyKScsXG4gICAgZm9jdXNPcGFjaXR5OiAwLjEyLFxuICAgIGFjdGl2YXRlZE9wYWNpdHk6IDAuMjRcbiAgfVxufTtcblxuZnVuY3Rpb24gYWRkTGlnaHRPckRhcmsoaW50ZW50LCBkaXJlY3Rpb24sIHNoYWRlLCB0b25hbE9mZnNldCkge1xuICBjb25zdCB0b25hbE9mZnNldExpZ2h0ID0gdG9uYWxPZmZzZXQubGlnaHQgfHwgdG9uYWxPZmZzZXQ7XG4gIGNvbnN0IHRvbmFsT2Zmc2V0RGFyayA9IHRvbmFsT2Zmc2V0LmRhcmsgfHwgdG9uYWxPZmZzZXQgKiAxLjU7XG5cbiAgaWYgKCFpbnRlbnRbZGlyZWN0aW9uXSkge1xuICAgIGlmIChpbnRlbnQuaGFzT3duUHJvcGVydHkoc2hhZGUpKSB7XG4gICAgICBpbnRlbnRbZGlyZWN0aW9uXSA9IGludGVudFtzaGFkZV07XG4gICAgfSBlbHNlIGlmIChkaXJlY3Rpb24gPT09ICdsaWdodCcpIHtcbiAgICAgIGludGVudC5saWdodCA9IGxpZ2h0ZW4oaW50ZW50Lm1haW4sIHRvbmFsT2Zmc2V0TGlnaHQpO1xuICAgIH0gZWxzZSBpZiAoZGlyZWN0aW9uID09PSAnZGFyaycpIHtcbiAgICAgIGludGVudC5kYXJrID0gZGFya2VuKGludGVudC5tYWluLCB0b25hbE9mZnNldERhcmspO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBnZXREZWZhdWx0UHJpbWFyeShtb2RlID0gJ2xpZ2h0Jykge1xuICBpZiAobW9kZSA9PT0gJ2RhcmsnKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG1haW46IGJsdWVbMjAwXSxcbiAgICAgIGxpZ2h0OiBibHVlWzUwXSxcbiAgICAgIGRhcms6IGJsdWVbNDAwXVxuICAgIH07XG4gIH1cblxuICByZXR1cm4ge1xuICAgIG1haW46IGJsdWVbNzAwXSxcbiAgICBsaWdodDogYmx1ZVs0MDBdLFxuICAgIGRhcms6IGJsdWVbODAwXVxuICB9O1xufVxuXG5mdW5jdGlvbiBnZXREZWZhdWx0U2Vjb25kYXJ5KG1vZGUgPSAnbGlnaHQnKSB7XG4gIGlmIChtb2RlID09PSAnZGFyaycpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbWFpbjogcHVycGxlWzIwMF0sXG4gICAgICBsaWdodDogcHVycGxlWzUwXSxcbiAgICAgIGRhcms6IHB1cnBsZVs0MDBdXG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgbWFpbjogcHVycGxlWzUwMF0sXG4gICAgbGlnaHQ6IHB1cnBsZVszMDBdLFxuICAgIGRhcms6IHB1cnBsZVs3MDBdXG4gIH07XG59XG5cbmZ1bmN0aW9uIGdldERlZmF1bHRFcnJvcihtb2RlID0gJ2xpZ2h0Jykge1xuICBpZiAobW9kZSA9PT0gJ2RhcmsnKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG1haW46IHJlZFs1MDBdLFxuICAgICAgbGlnaHQ6IHJlZFszMDBdLFxuICAgICAgZGFyazogcmVkWzcwMF1cbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBtYWluOiByZWRbNzAwXSxcbiAgICBsaWdodDogcmVkWzQwMF0sXG4gICAgZGFyazogcmVkWzgwMF1cbiAgfTtcbn1cblxuZnVuY3Rpb24gZ2V0RGVmYXVsdEluZm8obW9kZSA9ICdsaWdodCcpIHtcbiAgaWYgKG1vZGUgPT09ICdkYXJrJykge1xuICAgIHJldHVybiB7XG4gICAgICBtYWluOiBsaWdodEJsdWVbNDAwXSxcbiAgICAgIGxpZ2h0OiBsaWdodEJsdWVbMzAwXSxcbiAgICAgIGRhcms6IGxpZ2h0Qmx1ZVs3MDBdXG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgbWFpbjogbGlnaHRCbHVlWzcwMF0sXG4gICAgbGlnaHQ6IGxpZ2h0Qmx1ZVs1MDBdLFxuICAgIGRhcms6IGxpZ2h0Qmx1ZVs5MDBdXG4gIH07XG59XG5cbmZ1bmN0aW9uIGdldERlZmF1bHRTdWNjZXNzKG1vZGUgPSAnbGlnaHQnKSB7XG4gIGlmIChtb2RlID09PSAnZGFyaycpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbWFpbjogZ3JlZW5bNDAwXSxcbiAgICAgIGxpZ2h0OiBncmVlblszMDBdLFxuICAgICAgZGFyazogZ3JlZW5bNzAwXVxuICAgIH07XG4gIH1cblxuICByZXR1cm4ge1xuICAgIG1haW46IGdyZWVuWzgwMF0sXG4gICAgbGlnaHQ6IGdyZWVuWzUwMF0sXG4gICAgZGFyazogZ3JlZW5bOTAwXVxuICB9O1xufVxuXG5mdW5jdGlvbiBnZXREZWZhdWx0V2FybmluZyhtb2RlID0gJ2xpZ2h0Jykge1xuICBpZiAobW9kZSA9PT0gJ2RhcmsnKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG1haW46IG9yYW5nZVs0MDBdLFxuICAgICAgbGlnaHQ6IG9yYW5nZVszMDBdLFxuICAgICAgZGFyazogb3JhbmdlWzcwMF1cbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBtYWluOiAnI2VkNmMwMicsXG4gICAgLy8gY2xvc2VzdCB0byBvcmFuZ2VbODAwXSB0aGF0IHBhc3MgMzoxLlxuICAgIGxpZ2h0OiBvcmFuZ2VbNTAwXSxcbiAgICBkYXJrOiBvcmFuZ2VbOTAwXVxuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVQYWxldHRlKHBhbGV0dGUpIHtcbiAgY29uc3Qge1xuICAgIG1vZGUgPSAnbGlnaHQnLFxuICAgIGNvbnRyYXN0VGhyZXNob2xkID0gMyxcbiAgICB0b25hbE9mZnNldCA9IDAuMlxuICB9ID0gcGFsZXR0ZSxcbiAgICAgICAgb3RoZXIgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwYWxldHRlLCBfZXhjbHVkZWQpO1xuXG4gIGNvbnN0IHByaW1hcnkgPSBwYWxldHRlLnByaW1hcnkgfHwgZ2V0RGVmYXVsdFByaW1hcnkobW9kZSk7XG4gIGNvbnN0IHNlY29uZGFyeSA9IHBhbGV0dGUuc2Vjb25kYXJ5IHx8IGdldERlZmF1bHRTZWNvbmRhcnkobW9kZSk7XG4gIGNvbnN0IGVycm9yID0gcGFsZXR0ZS5lcnJvciB8fCBnZXREZWZhdWx0RXJyb3IobW9kZSk7XG4gIGNvbnN0IGluZm8gPSBwYWxldHRlLmluZm8gfHwgZ2V0RGVmYXVsdEluZm8obW9kZSk7XG4gIGNvbnN0IHN1Y2Nlc3MgPSBwYWxldHRlLnN1Y2Nlc3MgfHwgZ2V0RGVmYXVsdFN1Y2Nlc3MobW9kZSk7XG4gIGNvbnN0IHdhcm5pbmcgPSBwYWxldHRlLndhcm5pbmcgfHwgZ2V0RGVmYXVsdFdhcm5pbmcobW9kZSk7IC8vIFVzZSB0aGUgc2FtZSBsb2dpYyBhc1xuICAvLyBCb290c3RyYXA6IGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iLzFkNmUzNzEwZGQ0NDdkZTFhMjAwZjI5ZThmYTUyMWY4YTA5MDhmNzAvc2Nzcy9fZnVuY3Rpb25zLnNjc3MjTDU5XG4gIC8vIGFuZCBtYXRlcmlhbC1jb21wb25lbnRzLXdlYiBodHRwczovL2dpdGh1Yi5jb20vbWF0ZXJpYWwtY29tcG9uZW50cy9tYXRlcmlhbC1jb21wb25lbnRzLXdlYi9ibG9iL2FjNDZiODg2M2M0ZGFiOWZjMjJjNGM2NjJkYzZiZDFiNjVkZDY1MmYvcGFja2FnZXMvbWRjLXRoZW1lL19mdW5jdGlvbnMuc2NzcyNMNTRcblxuICBmdW5jdGlvbiBnZXRDb250cmFzdFRleHQoYmFja2dyb3VuZCkge1xuICAgIGNvbnN0IGNvbnRyYXN0VGV4dCA9IGdldENvbnRyYXN0UmF0aW8oYmFja2dyb3VuZCwgZGFyay50ZXh0LnByaW1hcnkpID49IGNvbnRyYXN0VGhyZXNob2xkID8gZGFyay50ZXh0LnByaW1hcnkgOiBsaWdodC50ZXh0LnByaW1hcnk7XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgY29uc3QgY29udHJhc3QgPSBnZXRDb250cmFzdFJhdGlvKGJhY2tncm91bmQsIGNvbnRyYXN0VGV4dCk7XG5cbiAgICAgIGlmIChjb250cmFzdCA8IDMpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihbYE1VSTogVGhlIGNvbnRyYXN0IHJhdGlvIG9mICR7Y29udHJhc3R9OjEgZm9yICR7Y29udHJhc3RUZXh0fSBvbiAke2JhY2tncm91bmR9YCwgJ2ZhbGxzIGJlbG93IHRoZSBXQ0FHIHJlY29tbWVuZGVkIGFic29sdXRlIG1pbmltdW0gY29udHJhc3QgcmF0aW8gb2YgMzoxLicsICdodHRwczovL3d3dy53My5vcmcvVFIvMjAwOC9SRUMtV0NBRzIwLTIwMDgxMjExLyN2aXN1YWwtYXVkaW8tY29udHJhc3QtY29udHJhc3QnXS5qb2luKCdcXG4nKSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGNvbnRyYXN0VGV4dDtcbiAgfVxuXG4gIGNvbnN0IGF1Z21lbnRDb2xvciA9ICh7XG4gICAgY29sb3IsXG4gICAgbmFtZSxcbiAgICBtYWluU2hhZGUgPSA1MDAsXG4gICAgbGlnaHRTaGFkZSA9IDMwMCxcbiAgICBkYXJrU2hhZGUgPSA3MDBcbiAgfSkgPT4ge1xuICAgIGNvbG9yID0gX2V4dGVuZHMoe30sIGNvbG9yKTtcblxuICAgIGlmICghY29sb3IubWFpbiAmJiBjb2xvclttYWluU2hhZGVdKSB7XG4gICAgICBjb2xvci5tYWluID0gY29sb3JbbWFpblNoYWRlXTtcbiAgICB9XG5cbiAgICBpZiAoIWNvbG9yLmhhc093blByb3BlcnR5KCdtYWluJykpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBgTVVJOiBUaGUgY29sb3Ike25hbWUgPyBgICgke25hbWV9KWAgOiAnJ30gcHJvdmlkZWQgdG8gYXVnbWVudENvbG9yKGNvbG9yKSBpcyBpbnZhbGlkLlxuVGhlIGNvbG9yIG9iamVjdCBuZWVkcyB0byBoYXZlIGEgXFxgbWFpblxcYCBwcm9wZXJ0eSBvciBhIFxcYCR7bWFpblNoYWRlfVxcYCBwcm9wZXJ0eS5gIDogX2Zvcm1hdE11aUVycm9yTWVzc2FnZSgxMSwgbmFtZSA/IGAgKCR7bmFtZX0pYCA6ICcnLCBtYWluU2hhZGUpKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGNvbG9yLm1haW4gIT09ICdzdHJpbmcnKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gYE1VSTogVGhlIGNvbG9yJHtuYW1lID8gYCAoJHtuYW1lfSlgIDogJyd9IHByb3ZpZGVkIHRvIGF1Z21lbnRDb2xvcihjb2xvcikgaXMgaW52YWxpZC5cblxcYGNvbG9yLm1haW5cXGAgc2hvdWxkIGJlIGEgc3RyaW5nLCBidXQgXFxgJHtKU09OLnN0cmluZ2lmeShjb2xvci5tYWluKX1cXGAgd2FzIHByb3ZpZGVkIGluc3RlYWQuXG5cbkRpZCB5b3UgaW50ZW5kIHRvIHVzZSBvbmUgb2YgdGhlIGZvbGxvd2luZyBhcHByb2FjaGVzP1xuXG5pbXBvcnQgeyBncmVlbiB9IGZyb20gXCJAbXVpL21hdGVyaWFsL2NvbG9yc1wiO1xuXG5jb25zdCB0aGVtZTEgPSBjcmVhdGVUaGVtZSh7IHBhbGV0dGU6IHtcbiAgcHJpbWFyeTogZ3JlZW4sXG59IH0pO1xuXG5jb25zdCB0aGVtZTIgPSBjcmVhdGVUaGVtZSh7IHBhbGV0dGU6IHtcbiAgcHJpbWFyeTogeyBtYWluOiBncmVlbls1MDBdIH0sXG59IH0pO2AgOiBfZm9ybWF0TXVpRXJyb3JNZXNzYWdlKDEyLCBuYW1lID8gYCAoJHtuYW1lfSlgIDogJycsIEpTT04uc3RyaW5naWZ5KGNvbG9yLm1haW4pKSk7XG4gICAgfVxuXG4gICAgYWRkTGlnaHRPckRhcmsoY29sb3IsICdsaWdodCcsIGxpZ2h0U2hhZGUsIHRvbmFsT2Zmc2V0KTtcbiAgICBhZGRMaWdodE9yRGFyayhjb2xvciwgJ2RhcmsnLCBkYXJrU2hhZGUsIHRvbmFsT2Zmc2V0KTtcblxuICAgIGlmICghY29sb3IuY29udHJhc3RUZXh0KSB7XG4gICAgICBjb2xvci5jb250cmFzdFRleHQgPSBnZXRDb250cmFzdFRleHQoY29sb3IubWFpbik7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNvbG9yO1xuICB9O1xuXG4gIGNvbnN0IG1vZGVzID0ge1xuICAgIGRhcmssXG4gICAgbGlnaHRcbiAgfTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGlmICghbW9kZXNbbW9kZV0pIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoYE1VSTogVGhlIHBhbGV0dGUgbW9kZSBcXGAke21vZGV9XFxgIGlzIG5vdCBzdXBwb3J0ZWQuYCk7XG4gICAgfVxuICB9XG5cbiAgY29uc3QgcGFsZXR0ZU91dHB1dCA9IGRlZXBtZXJnZShfZXh0ZW5kcyh7XG4gICAgLy8gQSBjb2xsZWN0aW9uIG9mIGNvbW1vbiBjb2xvcnMuXG4gICAgY29tbW9uOiBfZXh0ZW5kcyh7fSwgY29tbW9uKSxcbiAgICAvLyBwcmV2ZW50IG11dGFibGUgb2JqZWN0LlxuICAgIC8vIFRoZSBwYWxldHRlIG1vZGUsIGNhbiBiZSBsaWdodCBvciBkYXJrLlxuICAgIG1vZGUsXG4gICAgLy8gVGhlIGNvbG9ycyB1c2VkIHRvIHJlcHJlc2VudCBwcmltYXJ5IGludGVyZmFjZSBlbGVtZW50cyBmb3IgYSB1c2VyLlxuICAgIHByaW1hcnk6IGF1Z21lbnRDb2xvcih7XG4gICAgICBjb2xvcjogcHJpbWFyeSxcbiAgICAgIG5hbWU6ICdwcmltYXJ5J1xuICAgIH0pLFxuICAgIC8vIFRoZSBjb2xvcnMgdXNlZCB0byByZXByZXNlbnQgc2Vjb25kYXJ5IGludGVyZmFjZSBlbGVtZW50cyBmb3IgYSB1c2VyLlxuICAgIHNlY29uZGFyeTogYXVnbWVudENvbG9yKHtcbiAgICAgIGNvbG9yOiBzZWNvbmRhcnksXG4gICAgICBuYW1lOiAnc2Vjb25kYXJ5JyxcbiAgICAgIG1haW5TaGFkZTogJ0E0MDAnLFxuICAgICAgbGlnaHRTaGFkZTogJ0EyMDAnLFxuICAgICAgZGFya1NoYWRlOiAnQTcwMCdcbiAgICB9KSxcbiAgICAvLyBUaGUgY29sb3JzIHVzZWQgdG8gcmVwcmVzZW50IGludGVyZmFjZSBlbGVtZW50cyB0aGF0IHRoZSB1c2VyIHNob3VsZCBiZSBtYWRlIGF3YXJlIG9mLlxuICAgIGVycm9yOiBhdWdtZW50Q29sb3Ioe1xuICAgICAgY29sb3I6IGVycm9yLFxuICAgICAgbmFtZTogJ2Vycm9yJ1xuICAgIH0pLFxuICAgIC8vIFRoZSBjb2xvcnMgdXNlZCB0byByZXByZXNlbnQgcG90ZW50aWFsbHkgZGFuZ2Vyb3VzIGFjdGlvbnMgb3IgaW1wb3J0YW50IG1lc3NhZ2VzLlxuICAgIHdhcm5pbmc6IGF1Z21lbnRDb2xvcih7XG4gICAgICBjb2xvcjogd2FybmluZyxcbiAgICAgIG5hbWU6ICd3YXJuaW5nJ1xuICAgIH0pLFxuICAgIC8vIFRoZSBjb2xvcnMgdXNlZCB0byBwcmVzZW50IGluZm9ybWF0aW9uIHRvIHRoZSB1c2VyIHRoYXQgaXMgbmV1dHJhbCBhbmQgbm90IG5lY2Vzc2FyaWx5IGltcG9ydGFudC5cbiAgICBpbmZvOiBhdWdtZW50Q29sb3Ioe1xuICAgICAgY29sb3I6IGluZm8sXG4gICAgICBuYW1lOiAnaW5mbydcbiAgICB9KSxcbiAgICAvLyBUaGUgY29sb3JzIHVzZWQgdG8gaW5kaWNhdGUgdGhlIHN1Y2Nlc3NmdWwgY29tcGxldGlvbiBvZiBhbiBhY3Rpb24gdGhhdCB1c2VyIHRyaWdnZXJlZC5cbiAgICBzdWNjZXNzOiBhdWdtZW50Q29sb3Ioe1xuICAgICAgY29sb3I6IHN1Y2Nlc3MsXG4gICAgICBuYW1lOiAnc3VjY2VzcydcbiAgICB9KSxcbiAgICAvLyBUaGUgZ3JleSBjb2xvcnMuXG4gICAgZ3JleSxcbiAgICAvLyBVc2VkIGJ5IGBnZXRDb250cmFzdFRleHQoKWAgdG8gbWF4aW1pemUgdGhlIGNvbnRyYXN0IGJldHdlZW5cbiAgICAvLyB0aGUgYmFja2dyb3VuZCBhbmQgdGhlIHRleHQuXG4gICAgY29udHJhc3RUaHJlc2hvbGQsXG4gICAgLy8gVGFrZXMgYSBiYWNrZ3JvdW5kIGNvbG9yIGFuZCByZXR1cm5zIHRoZSB0ZXh0IGNvbG9yIHRoYXQgbWF4aW1pemVzIHRoZSBjb250cmFzdC5cbiAgICBnZXRDb250cmFzdFRleHQsXG4gICAgLy8gR2VuZXJhdGUgYSByaWNoIGNvbG9yIG9iamVjdC5cbiAgICBhdWdtZW50Q29sb3IsXG4gICAgLy8gVXNlZCBieSB0aGUgZnVuY3Rpb25zIGJlbG93IHRvIHNoaWZ0IGEgY29sb3IncyBsdW1pbmFuY2UgYnkgYXBwcm94aW1hdGVseVxuICAgIC8vIHR3byBpbmRleGVzIHdpdGhpbiBpdHMgdG9uYWwgcGFsZXR0ZS5cbiAgICAvLyBFLmcuLCBzaGlmdCBmcm9tIFJlZCA1MDAgdG8gUmVkIDMwMCBvciBSZWQgNzAwLlxuICAgIHRvbmFsT2Zmc2V0XG4gIH0sIG1vZGVzW21vZGVdKSwgb3RoZXIpO1xuICByZXR1cm4gcGFsZXR0ZU91dHB1dDtcbn0iLCJjb25zdCBzaGFkb3dLZXlVbWJyYU9wYWNpdHkgPSAwLjI7XG5jb25zdCBzaGFkb3dLZXlQZW51bWJyYU9wYWNpdHkgPSAwLjE0O1xuY29uc3Qgc2hhZG93QW1iaWVudFNoYWRvd09wYWNpdHkgPSAwLjEyO1xuXG5mdW5jdGlvbiBjcmVhdGVTaGFkb3coLi4ucHgpIHtcbiAgcmV0dXJuIFtgJHtweFswXX1weCAke3B4WzFdfXB4ICR7cHhbMl19cHggJHtweFszXX1weCByZ2JhKDAsMCwwLCR7c2hhZG93S2V5VW1icmFPcGFjaXR5fSlgLCBgJHtweFs0XX1weCAke3B4WzVdfXB4ICR7cHhbNl19cHggJHtweFs3XX1weCByZ2JhKDAsMCwwLCR7c2hhZG93S2V5UGVudW1icmFPcGFjaXR5fSlgLCBgJHtweFs4XX1weCAke3B4WzldfXB4ICR7cHhbMTBdfXB4ICR7cHhbMTFdfXB4IHJnYmEoMCwwLDAsJHtzaGFkb3dBbWJpZW50U2hhZG93T3BhY2l0eX0pYF0uam9pbignLCcpO1xufSAvLyBWYWx1ZXMgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vbWF0ZXJpYWwtY29tcG9uZW50cy9tYXRlcmlhbC1jb21wb25lbnRzLXdlYi9ibG9iL2JlODc0N2Y5NDU3NDY2OWNiNWU3YWRkMWE3YzU0ZmE0MWE4OWNlYzcvcGFja2FnZXMvbWRjLWVsZXZhdGlvbi9fdmFyaWFibGVzLnNjc3NcblxuXG5jb25zdCBzaGFkb3dzID0gWydub25lJywgY3JlYXRlU2hhZG93KDAsIDIsIDEsIC0xLCAwLCAxLCAxLCAwLCAwLCAxLCAzLCAwKSwgY3JlYXRlU2hhZG93KDAsIDMsIDEsIC0yLCAwLCAyLCAyLCAwLCAwLCAxLCA1LCAwKSwgY3JlYXRlU2hhZG93KDAsIDMsIDMsIC0yLCAwLCAzLCA0LCAwLCAwLCAxLCA4LCAwKSwgY3JlYXRlU2hhZG93KDAsIDIsIDQsIC0xLCAwLCA0LCA1LCAwLCAwLCAxLCAxMCwgMCksIGNyZWF0ZVNoYWRvdygwLCAzLCA1LCAtMSwgMCwgNSwgOCwgMCwgMCwgMSwgMTQsIDApLCBjcmVhdGVTaGFkb3coMCwgMywgNSwgLTEsIDAsIDYsIDEwLCAwLCAwLCAxLCAxOCwgMCksIGNyZWF0ZVNoYWRvdygwLCA0LCA1LCAtMiwgMCwgNywgMTAsIDEsIDAsIDIsIDE2LCAxKSwgY3JlYXRlU2hhZG93KDAsIDUsIDUsIC0zLCAwLCA4LCAxMCwgMSwgMCwgMywgMTQsIDIpLCBjcmVhdGVTaGFkb3coMCwgNSwgNiwgLTMsIDAsIDksIDEyLCAxLCAwLCAzLCAxNiwgMiksIGNyZWF0ZVNoYWRvdygwLCA2LCA2LCAtMywgMCwgMTAsIDE0LCAxLCAwLCA0LCAxOCwgMyksIGNyZWF0ZVNoYWRvdygwLCA2LCA3LCAtNCwgMCwgMTEsIDE1LCAxLCAwLCA0LCAyMCwgMyksIGNyZWF0ZVNoYWRvdygwLCA3LCA4LCAtNCwgMCwgMTIsIDE3LCAyLCAwLCA1LCAyMiwgNCksIGNyZWF0ZVNoYWRvdygwLCA3LCA4LCAtNCwgMCwgMTMsIDE5LCAyLCAwLCA1LCAyNCwgNCksIGNyZWF0ZVNoYWRvdygwLCA3LCA5LCAtNCwgMCwgMTQsIDIxLCAyLCAwLCA1LCAyNiwgNCksIGNyZWF0ZVNoYWRvdygwLCA4LCA5LCAtNSwgMCwgMTUsIDIyLCAyLCAwLCA2LCAyOCwgNSksIGNyZWF0ZVNoYWRvdygwLCA4LCAxMCwgLTUsIDAsIDE2LCAyNCwgMiwgMCwgNiwgMzAsIDUpLCBjcmVhdGVTaGFkb3coMCwgOCwgMTEsIC01LCAwLCAxNywgMjYsIDIsIDAsIDYsIDMyLCA1KSwgY3JlYXRlU2hhZG93KDAsIDksIDExLCAtNSwgMCwgMTgsIDI4LCAyLCAwLCA3LCAzNCwgNiksIGNyZWF0ZVNoYWRvdygwLCA5LCAxMiwgLTYsIDAsIDE5LCAyOSwgMiwgMCwgNywgMzYsIDYpLCBjcmVhdGVTaGFkb3coMCwgMTAsIDEzLCAtNiwgMCwgMjAsIDMxLCAzLCAwLCA4LCAzOCwgNyksIGNyZWF0ZVNoYWRvdygwLCAxMCwgMTMsIC02LCAwLCAyMSwgMzMsIDMsIDAsIDgsIDQwLCA3KSwgY3JlYXRlU2hhZG93KDAsIDEwLCAxNCwgLTYsIDAsIDIyLCAzNSwgMywgMCwgOCwgNDIsIDcpLCBjcmVhdGVTaGFkb3coMCwgMTEsIDE0LCAtNywgMCwgMjMsIDM2LCAzLCAwLCA5LCA0NCwgOCksIGNyZWF0ZVNoYWRvdygwLCAxMSwgMTUsIC03LCAwLCAyNCwgMzgsIDMsIDAsIDksIDQ2LCA4KV07XG5leHBvcnQgZGVmYXVsdCBzaGFkb3dzOyIsIi8vIFdlIG5lZWQgdG8gY2VudHJhbGl6ZSB0aGUgekluZGV4IGRlZmluaXRpb25zIGFzIHRoZXkgd29ya1xuLy8gbGlrZSBnbG9iYWwgdmFsdWVzIGluIHRoZSBicm93c2VyLlxuY29uc3QgekluZGV4ID0ge1xuICBtb2JpbGVTdGVwcGVyOiAxMDAwLFxuICBmYWI6IDEwNTAsXG4gIHNwZWVkRGlhbDogMTA1MCxcbiAgYXBwQmFyOiAxMTAwLFxuICBkcmF3ZXI6IDEyMDAsXG4gIG1vZGFsOiAxMzAwLFxuICBzbmFja2JhcjogMTQwMCxcbiAgdG9vbHRpcDogMTUwMFxufTtcbmV4cG9ydCBkZWZhdWx0IHpJbmRleDsiLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuY29uc3QgX2V4Y2x1ZGVkID0gW1wiYnJlYWtwb2ludHNcIiwgXCJtaXhpbnNcIiwgXCJzcGFjaW5nXCIsIFwicGFsZXR0ZVwiLCBcInRyYW5zaXRpb25zXCIsIFwidHlwb2dyYXBoeVwiLCBcInNoYXBlXCJdO1xuaW1wb3J0IHsgZGVlcG1lcmdlIH0gZnJvbSAnQG11aS91dGlscyc7XG5pbXBvcnQgeyBnZW5lcmF0ZVV0aWxpdHlDbGFzcyB9IGZyb20gJ0BtdWkvYmFzZSc7XG5pbXBvcnQgeyBjcmVhdGVUaGVtZSBhcyBzeXN0ZW1DcmVhdGVUaGVtZSB9IGZyb20gJ0BtdWkvc3lzdGVtJztcbmltcG9ydCBjcmVhdGVNaXhpbnMgZnJvbSAnLi9jcmVhdGVNaXhpbnMnO1xuaW1wb3J0IGNyZWF0ZVBhbGV0dGUgZnJvbSAnLi9jcmVhdGVQYWxldHRlJztcbmltcG9ydCBjcmVhdGVUeXBvZ3JhcGh5IGZyb20gJy4vY3JlYXRlVHlwb2dyYXBoeSc7XG5pbXBvcnQgc2hhZG93cyBmcm9tICcuL3NoYWRvd3MnO1xuaW1wb3J0IGNyZWF0ZVRyYW5zaXRpb25zIGZyb20gJy4vY3JlYXRlVHJhbnNpdGlvbnMnO1xuaW1wb3J0IHpJbmRleCBmcm9tICcuL3pJbmRleCc7XG5cbmZ1bmN0aW9uIGNyZWF0ZVRoZW1lKG9wdGlvbnMgPSB7fSwgLi4uYXJncykge1xuICBjb25zdCB7XG4gICAgbWl4aW5zOiBtaXhpbnNJbnB1dCA9IHt9LFxuICAgIHBhbGV0dGU6IHBhbGV0dGVJbnB1dCA9IHt9LFxuICAgIHRyYW5zaXRpb25zOiB0cmFuc2l0aW9uc0lucHV0ID0ge30sXG4gICAgdHlwb2dyYXBoeTogdHlwb2dyYXBoeUlucHV0ID0ge31cbiAgfSA9IG9wdGlvbnMsXG4gICAgICAgIG90aGVyID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uob3B0aW9ucywgX2V4Y2x1ZGVkKTtcblxuICBjb25zdCBwYWxldHRlID0gY3JlYXRlUGFsZXR0ZShwYWxldHRlSW5wdXQpO1xuICBjb25zdCBzeXN0ZW1UaGVtZSA9IHN5c3RlbUNyZWF0ZVRoZW1lKG9wdGlvbnMpO1xuICBsZXQgbXVpVGhlbWUgPSBkZWVwbWVyZ2Uoc3lzdGVtVGhlbWUsIHtcbiAgICBtaXhpbnM6IGNyZWF0ZU1peGlucyhzeXN0ZW1UaGVtZS5icmVha3BvaW50cywgc3lzdGVtVGhlbWUuc3BhY2luZywgbWl4aW5zSW5wdXQpLFxuICAgIHBhbGV0dGUsXG4gICAgLy8gRG9uJ3QgdXNlIFsuLi5zaGFkb3dzXSB1bnRpbCB5b3UndmUgdmVyaWZpZWQgaXRzIHRyYW5zcGlsZWQgY29kZSBpcyBub3QgaW52b2tpbmcgdGhlIGl0ZXJhdG9yIHByb3RvY29sLlxuICAgIHNoYWRvd3M6IHNoYWRvd3Muc2xpY2UoKSxcbiAgICB0eXBvZ3JhcGh5OiBjcmVhdGVUeXBvZ3JhcGh5KHBhbGV0dGUsIHR5cG9ncmFwaHlJbnB1dCksXG4gICAgdHJhbnNpdGlvbnM6IGNyZWF0ZVRyYW5zaXRpb25zKHRyYW5zaXRpb25zSW5wdXQpLFxuICAgIHpJbmRleDogX2V4dGVuZHMoe30sIHpJbmRleClcbiAgfSk7XG4gIG11aVRoZW1lID0gZGVlcG1lcmdlKG11aVRoZW1lLCBvdGhlcik7XG4gIG11aVRoZW1lID0gYXJncy5yZWR1Y2UoKGFjYywgYXJndW1lbnQpID0+IGRlZXBtZXJnZShhY2MsIGFyZ3VtZW50KSwgbXVpVGhlbWUpO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgY29uc3Qgc3RhdGVDbGFzc2VzID0gWydhY3RpdmUnLCAnY2hlY2tlZCcsICdjb21wbGV0ZWQnLCAnZGlzYWJsZWQnLCAnZXJyb3InLCAnZXhwYW5kZWQnLCAnZm9jdXNlZCcsICdmb2N1c1Zpc2libGUnLCAncmVxdWlyZWQnLCAnc2VsZWN0ZWQnXTtcblxuICAgIGNvbnN0IHRyYXZlcnNlID0gKG5vZGUsIGNvbXBvbmVudCkgPT4ge1xuICAgICAgbGV0IGtleTsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGd1YXJkLWZvci1pbiwgbm8tcmVzdHJpY3RlZC1zeW50YXhcblxuICAgICAgZm9yIChrZXkgaW4gbm9kZSkge1xuICAgICAgICBjb25zdCBjaGlsZCA9IG5vZGVba2V5XTtcblxuICAgICAgICBpZiAoc3RhdGVDbGFzc2VzLmluZGV4T2Yoa2V5KSAhPT0gLTEgJiYgT2JqZWN0LmtleXMoY2hpbGQpLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgICAgY29uc3Qgc3RhdGVDbGFzcyA9IGdlbmVyYXRlVXRpbGl0eUNsYXNzKCcnLCBrZXkpO1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihbYE1VSTogVGhlIFxcYCR7Y29tcG9uZW50fVxcYCBjb21wb25lbnQgaW5jcmVhc2VzIGAgKyBgdGhlIENTUyBzcGVjaWZpY2l0eSBvZiB0aGUgXFxgJHtrZXl9XFxgIGludGVybmFsIHN0YXRlLmAsICdZb3UgY2FuIG5vdCBvdmVycmlkZSBpdCBsaWtlIHRoaXM6ICcsIEpTT04uc3RyaW5naWZ5KG5vZGUsIG51bGwsIDIpLCAnJywgYEluc3RlYWQsIHlvdSBuZWVkIHRvIHVzZSB0aGUgJyYuJHtzdGF0ZUNsYXNzfScgc3ludGF4OmAsIEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgICAgcm9vdDoge1xuICAgICAgICAgICAgICAgIFtgJi4ke3N0YXRlQ2xhc3N9YF06IGNoaWxkXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sIG51bGwsIDIpLCAnJywgJ2h0dHBzOi8vbXVpLmNvbS9yL3N0YXRlLWNsYXNzZXMtZ3VpZGUnXS5qb2luKCdcXG4nKSk7XG4gICAgICAgICAgfSAvLyBSZW1vdmUgdGhlIHN0eWxlIHRvIHByZXZlbnQgZ2xvYmFsIGNvbmZsaWN0cy5cblxuXG4gICAgICAgICAgbm9kZVtrZXldID0ge307XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuXG4gICAgT2JqZWN0LmtleXMobXVpVGhlbWUuY29tcG9uZW50cykuZm9yRWFjaChjb21wb25lbnQgPT4ge1xuICAgICAgY29uc3Qgc3R5bGVPdmVycmlkZXMgPSBtdWlUaGVtZS5jb21wb25lbnRzW2NvbXBvbmVudF0uc3R5bGVPdmVycmlkZXM7XG5cbiAgICAgIGlmIChzdHlsZU92ZXJyaWRlcyAmJiBjb21wb25lbnQuaW5kZXhPZignTXVpJykgPT09IDApIHtcbiAgICAgICAgdHJhdmVyc2Uoc3R5bGVPdmVycmlkZXMsIGNvbXBvbmVudCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gbXVpVGhlbWU7XG59XG5cbmxldCB3YXJuZWRPbmNlID0gZmFsc2U7XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlTXVpVGhlbWUoLi4uYXJncykge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGlmICghd2FybmVkT25jZSkge1xuICAgICAgd2FybmVkT25jZSA9IHRydWU7XG4gICAgICBjb25zb2xlLmVycm9yKFsnTVVJOiB0aGUgY3JlYXRlTXVpVGhlbWUgZnVuY3Rpb24gd2FzIHJlbmFtZWQgdG8gY3JlYXRlVGhlbWUuJywgJycsIFwiWW91IHNob3VsZCB1c2UgYGltcG9ydCB7IGNyZWF0ZVRoZW1lIH0gZnJvbSAnQG11aS9tYXRlcmlhbC9zdHlsZXMnYFwiXS5qb2luKCdcXG4nKSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGNyZWF0ZVRoZW1lKC4uLmFyZ3MpO1xufVxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlVGhlbWU7IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVNaXhpbnMoYnJlYWtwb2ludHMsIHNwYWNpbmcsIG1peGlucykge1xuICByZXR1cm4gX2V4dGVuZHMoe1xuICAgIHRvb2xiYXI6IHtcbiAgICAgIG1pbkhlaWdodDogNTYsXG4gICAgICBbYCR7YnJlYWtwb2ludHMudXAoJ3hzJyl9IGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSlgXToge1xuICAgICAgICBtaW5IZWlnaHQ6IDQ4XG4gICAgICB9LFxuICAgICAgW2JyZWFrcG9pbnRzLnVwKCdzbScpXToge1xuICAgICAgICBtaW5IZWlnaHQ6IDY0XG4gICAgICB9XG4gICAgfVxuICB9LCBtaXhpbnMpO1xufSIsImltcG9ydCBjcmVhdGVUaGVtZSBmcm9tICcuL2NyZWF0ZVRoZW1lJztcbmNvbnN0IGRlZmF1bHRUaGVtZSA9IGNyZWF0ZVRoZW1lKCk7XG5leHBvcnQgZGVmYXVsdCBkZWZhdWx0VGhlbWU7IiwiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBjaGVja0RDRSgpIHtcbiAgLyogZ2xvYmFsIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyAqL1xuICBpZiAoXG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyA9PT0gJ3VuZGVmaW5lZCcgfHxcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFICE9PSAnZnVuY3Rpb24nXG4gICkge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vIFRoaXMgYnJhbmNoIGlzIHVucmVhY2hhYmxlIGJlY2F1c2UgdGhpcyBmdW5jdGlvbiBpcyBvbmx5IGNhbGxlZFxuICAgIC8vIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgY29uZGl0aW9uIGlzIHRydWUgb25seSBpbiBkZXZlbG9wbWVudC5cbiAgICAvLyBUaGVyZWZvcmUgaWYgdGhlIGJyYW5jaCBpcyBzdGlsbCBoZXJlLCBkZWFkIGNvZGUgZWxpbWluYXRpb24gd2Fzbid0XG4gICAgLy8gcHJvcGVybHkgYXBwbGllZC5cbiAgICAvLyBEb24ndCBjaGFuZ2UgdGhlIG1lc3NhZ2UuIFJlYWN0IERldlRvb2xzIHJlbGllcyBvbiBpdC4gQWxzbyBtYWtlIHN1cmVcbiAgICAvLyB0aGlzIG1lc3NhZ2UgZG9lc24ndCBvY2N1ciBlbHNld2hlcmUgaW4gdGhpcyBmdW5jdGlvbiwgb3IgaXQgd2lsbCBjYXVzZVxuICAgIC8vIGEgZmFsc2UgcG9zaXRpdmUuXG4gICAgdGhyb3cgbmV3IEVycm9yKCdeX14nKTtcbiAgfVxuICB0cnkge1xuICAgIC8vIFZlcmlmeSB0aGF0IHRoZSBjb2RlIGFib3ZlIGhhcyBiZWVuIGRlYWQgY29kZSBlbGltaW5hdGVkIChEQ0UnZCkuXG4gICAgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFKGNoZWNrRENFKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgLy8gRGV2VG9vbHMgc2hvdWxkbid0IGNyYXNoIFJlYWN0LCBubyBtYXR0ZXIgd2hhdC5cbiAgICAvLyBXZSBzaG91bGQgc3RpbGwgcmVwb3J0IGluIGNhc2Ugd2UgYnJlYWsgdGhpcyBjb2RlLlxuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgfVxufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAvLyBEQ0UgY2hlY2sgc2hvdWxkIGhhcHBlbiBiZWZvcmUgUmVhY3RET00gYnVuZGxlIGV4ZWN1dGVzIHNvIHRoYXRcbiAgLy8gRGV2VG9vbHMgY2FuIHJlcG9ydCBiYWQgbWluaWZpY2F0aW9uIGR1cmluZyBpbmplY3Rpb24uXG4gIGNoZWNrRENFKCk7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiZnVuY3Rpb24gbWVtb2l6ZShmbikge1xuICB2YXIgY2FjaGUgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICByZXR1cm4gZnVuY3Rpb24gKGFyZykge1xuICAgIGlmIChjYWNoZVthcmddID09PSB1bmRlZmluZWQpIGNhY2hlW2FyZ10gPSBmbihhcmcpO1xuICAgIHJldHVybiBjYWNoZVthcmddO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBtZW1vaXplO1xuIiwiLypcbm9iamVjdC1hc3NpZ25cbihjKSBTaW5kcmUgU29yaHVzXG5AbGljZW5zZSBNSVRcbiovXG5cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgcHJvcElzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbmZ1bmN0aW9uIHRvT2JqZWN0KHZhbCkge1xuXHRpZiAodmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWQnKTtcblx0fVxuXG5cdHJldHVybiBPYmplY3QodmFsKTtcbn1cblxuZnVuY3Rpb24gc2hvdWxkVXNlTmF0aXZlKCkge1xuXHR0cnkge1xuXHRcdGlmICghT2JqZWN0LmFzc2lnbikge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIERldGVjdCBidWdneSBwcm9wZXJ0eSBlbnVtZXJhdGlvbiBvcmRlciBpbiBvbGRlciBWOCB2ZXJzaW9ucy5cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTQxMThcblx0XHR2YXIgdGVzdDEgPSBuZXcgU3RyaW5nKCdhYmMnKTsgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3LXdyYXBwZXJzXG5cdFx0dGVzdDFbNV0gPSAnZGUnO1xuXHRcdGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MSlbMF0gPT09ICc1Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDIgPSB7fTtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHtcblx0XHRcdHRlc3QyWydfJyArIFN0cmluZy5mcm9tQ2hhckNvZGUoaSldID0gaTtcblx0XHR9XG5cdFx0dmFyIG9yZGVyMiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QyKS5tYXAoZnVuY3Rpb24gKG4pIHtcblx0XHRcdHJldHVybiB0ZXN0MltuXTtcblx0XHR9KTtcblx0XHRpZiAob3JkZXIyLmpvaW4oJycpICE9PSAnMDEyMzQ1Njc4OScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QzID0ge307XG5cdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAobGV0dGVyKSB7XG5cdFx0XHR0ZXN0M1tsZXR0ZXJdID0gbGV0dGVyO1xuXHRcdH0pO1xuXHRcdGlmIChPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCB0ZXN0MykpLmpvaW4oJycpICE9PVxuXHRcdFx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdC8vIFdlIGRvbid0IGV4cGVjdCBhbnkgb2YgdGhlIGFib3ZlIHRvIHRocm93LCBidXQgYmV0dGVyIHRvIGJlIHNhZmUuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hvdWxkVXNlTmF0aXZlKCkgPyBPYmplY3QuYXNzaWduIDogZnVuY3Rpb24gKHRhcmdldCwgc291cmNlKSB7XG5cdHZhciBmcm9tO1xuXHR2YXIgdG8gPSB0b09iamVjdCh0YXJnZXQpO1xuXHR2YXIgc3ltYm9scztcblxuXHRmb3IgKHZhciBzID0gMTsgcyA8IGFyZ3VtZW50cy5sZW5ndGg7IHMrKykge1xuXHRcdGZyb20gPSBPYmplY3QoYXJndW1lbnRzW3NdKTtcblxuXHRcdGZvciAodmFyIGtleSBpbiBmcm9tKSB7XG5cdFx0XHRpZiAoaGFzT3duUHJvcGVydHkuY2FsbChmcm9tLCBrZXkpKSB7XG5cdFx0XHRcdHRvW2tleV0gPSBmcm9tW2tleV07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuXHRcdFx0c3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9scyhmcm9tKTtcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3ltYm9scy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZiAocHJvcElzRW51bWVyYWJsZS5jYWxsKGZyb20sIHN5bWJvbHNbaV0pKSB7XG5cdFx0XHRcdFx0dG9bc3ltYm9sc1tpXV0gPSBmcm9tW3N5bWJvbHNbaV1dO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRvO1xufTtcbiIsImltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5jb25zdCBfZXhjbHVkZWQgPSBbXCJkdXJhdGlvblwiLCBcImVhc2luZ1wiLCBcImRlbGF5XCJdO1xuLy8gRm9sbG93IGh0dHBzOi8vbWF0ZXJpYWwuZ29vZ2xlLmNvbS9tb3Rpb24vZHVyYXRpb24tZWFzaW5nLmh0bWwjZHVyYXRpb24tZWFzaW5nLW5hdHVyYWwtZWFzaW5nLWN1cnZlc1xuLy8gdG8gbGVhcm4gdGhlIGNvbnRleHQgaW4gd2hpY2ggZWFjaCBlYXNpbmcgc2hvdWxkIGJlIHVzZWQuXG5leHBvcnQgY29uc3QgZWFzaW5nID0ge1xuICAvLyBUaGlzIGlzIHRoZSBtb3N0IGNvbW1vbiBlYXNpbmcgY3VydmUuXG4gIGVhc2VJbk91dDogJ2N1YmljLWJlemllcigwLjQsIDAsIDAuMiwgMSknLFxuICAvLyBPYmplY3RzIGVudGVyIHRoZSBzY3JlZW4gYXQgZnVsbCB2ZWxvY2l0eSBmcm9tIG9mZi1zY3JlZW4gYW5kXG4gIC8vIHNsb3dseSBkZWNlbGVyYXRlIHRvIGEgcmVzdGluZyBwb2ludC5cbiAgZWFzZU91dDogJ2N1YmljLWJlemllcigwLjAsIDAsIDAuMiwgMSknLFxuICAvLyBPYmplY3RzIGxlYXZlIHRoZSBzY3JlZW4gYXQgZnVsbCB2ZWxvY2l0eS4gVGhleSBkbyBub3QgZGVjZWxlcmF0ZSB3aGVuIG9mZi1zY3JlZW4uXG4gIGVhc2VJbjogJ2N1YmljLWJlemllcigwLjQsIDAsIDEsIDEpJyxcbiAgLy8gVGhlIHNoYXJwIGN1cnZlIGlzIHVzZWQgYnkgb2JqZWN0cyB0aGF0IG1heSByZXR1cm4gdG8gdGhlIHNjcmVlbiBhdCBhbnkgdGltZS5cbiAgc2hhcnA6ICdjdWJpYy1iZXppZXIoMC40LCAwLCAwLjYsIDEpJ1xufTsgLy8gRm9sbG93IGh0dHBzOi8vbWF0ZXJpYWwuaW8vZ3VpZGVsaW5lcy9tb3Rpb24vZHVyYXRpb24tZWFzaW5nLmh0bWwjZHVyYXRpb24tZWFzaW5nLWNvbW1vbi1kdXJhdGlvbnNcbi8vIHRvIGxlYXJuIHdoZW4gdXNlIHdoYXQgdGltaW5nXG5cbmV4cG9ydCBjb25zdCBkdXJhdGlvbiA9IHtcbiAgc2hvcnRlc3Q6IDE1MCxcbiAgc2hvcnRlcjogMjAwLFxuICBzaG9ydDogMjUwLFxuICAvLyBtb3N0IGJhc2ljIHJlY29tbWVuZGVkIHRpbWluZ1xuICBzdGFuZGFyZDogMzAwLFxuICAvLyB0aGlzIGlzIHRvIGJlIHVzZWQgaW4gY29tcGxleCBhbmltYXRpb25zXG4gIGNvbXBsZXg6IDM3NSxcbiAgLy8gcmVjb21tZW5kZWQgd2hlbiBzb21ldGhpbmcgaXMgZW50ZXJpbmcgc2NyZWVuXG4gIGVudGVyaW5nU2NyZWVuOiAyMjUsXG4gIC8vIHJlY29tbWVuZGVkIHdoZW4gc29tZXRoaW5nIGlzIGxlYXZpbmcgc2NyZWVuXG4gIGxlYXZpbmdTY3JlZW46IDE5NVxufTtcblxuZnVuY3Rpb24gZm9ybWF0TXMobWlsbGlzZWNvbmRzKSB7XG4gIHJldHVybiBgJHtNYXRoLnJvdW5kKG1pbGxpc2Vjb25kcyl9bXNgO1xufVxuXG5mdW5jdGlvbiBnZXRBdXRvSGVpZ2h0RHVyYXRpb24oaGVpZ2h0KSB7XG4gIGlmICghaGVpZ2h0KSB7XG4gICAgcmV0dXJuIDA7XG4gIH1cblxuICBjb25zdCBjb25zdGFudCA9IGhlaWdodCAvIDM2OyAvLyBodHRwczovL3d3dy53b2xmcmFtYWxwaGEuY29tL2lucHV0Lz9pPSg0KyUyQisxNSsqKyh4KyUyRiszNispKyoqKzAuMjUrJTJCKyh4KyUyRiszNikrJTJGKzUpKyorMTBcblxuICByZXR1cm4gTWF0aC5yb3VuZCgoNCArIDE1ICogY29uc3RhbnQgKiogMC4yNSArIGNvbnN0YW50IC8gNSkgKiAxMCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZVRyYW5zaXRpb25zKGlucHV0VHJhbnNpdGlvbnMpIHtcbiAgY29uc3QgbWVyZ2VkRWFzaW5nID0gX2V4dGVuZHMoe30sIGVhc2luZywgaW5wdXRUcmFuc2l0aW9ucy5lYXNpbmcpO1xuXG4gIGNvbnN0IG1lcmdlZER1cmF0aW9uID0gX2V4dGVuZHMoe30sIGR1cmF0aW9uLCBpbnB1dFRyYW5zaXRpb25zLmR1cmF0aW9uKTtcblxuICBjb25zdCBjcmVhdGUgPSAocHJvcHMgPSBbJ2FsbCddLCBvcHRpb25zID0ge30pID0+IHtcbiAgICBjb25zdCB7XG4gICAgICBkdXJhdGlvbjogZHVyYXRpb25PcHRpb24gPSBtZXJnZWREdXJhdGlvbi5zdGFuZGFyZCxcbiAgICAgIGVhc2luZzogZWFzaW5nT3B0aW9uID0gbWVyZ2VkRWFzaW5nLmVhc2VJbk91dCxcbiAgICAgIGRlbGF5ID0gMFxuICAgIH0gPSBvcHRpb25zLFxuICAgICAgICAgIG90aGVyID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uob3B0aW9ucywgX2V4Y2x1ZGVkKTtcblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICBjb25zdCBpc1N0cmluZyA9IHZhbHVlID0+IHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZyc7IC8vIElFMTEgc3VwcG9ydCwgcmVwbGFjZSB3aXRoIE51bWJlci5pc05hTlxuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXJlc3RyaWN0ZWQtZ2xvYmFsc1xuXG5cbiAgICAgIGNvbnN0IGlzTnVtYmVyID0gdmFsdWUgPT4gIWlzTmFOKHBhcnNlRmxvYXQodmFsdWUpKTtcblxuICAgICAgaWYgKCFpc1N0cmluZyhwcm9wcykgJiYgIUFycmF5LmlzQXJyYXkocHJvcHMpKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ01VSTogQXJndW1lbnQgXCJwcm9wc1wiIG11c3QgYmUgYSBzdHJpbmcgb3IgQXJyYXkuJyk7XG4gICAgICB9XG5cbiAgICAgIGlmICghaXNOdW1iZXIoZHVyYXRpb25PcHRpb24pICYmICFpc1N0cmluZyhkdXJhdGlvbk9wdGlvbikpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihgTVVJOiBBcmd1bWVudCBcImR1cmF0aW9uXCIgbXVzdCBiZSBhIG51bWJlciBvciBhIHN0cmluZyBidXQgZm91bmQgJHtkdXJhdGlvbk9wdGlvbn0uYCk7XG4gICAgICB9XG5cbiAgICAgIGlmICghaXNTdHJpbmcoZWFzaW5nT3B0aW9uKSkge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdNVUk6IEFyZ3VtZW50IFwiZWFzaW5nXCIgbXVzdCBiZSBhIHN0cmluZy4nKTtcbiAgICAgIH1cblxuICAgICAgaWYgKCFpc051bWJlcihkZWxheSkgJiYgIWlzU3RyaW5nKGRlbGF5KSkge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdNVUk6IEFyZ3VtZW50IFwiZGVsYXlcIiBtdXN0IGJlIGEgbnVtYmVyIG9yIGEgc3RyaW5nLicpO1xuICAgICAgfVxuXG4gICAgICBpZiAoT2JqZWN0LmtleXMob3RoZXIpLmxlbmd0aCAhPT0gMCkge1xuICAgICAgICBjb25zb2xlLmVycm9yKGBNVUk6IFVucmVjb2duaXplZCBhcmd1bWVudChzKSBbJHtPYmplY3Qua2V5cyhvdGhlcikuam9pbignLCcpfV0uYCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIChBcnJheS5pc0FycmF5KHByb3BzKSA/IHByb3BzIDogW3Byb3BzXSkubWFwKGFuaW1hdGVkUHJvcCA9PiBgJHthbmltYXRlZFByb3B9ICR7dHlwZW9mIGR1cmF0aW9uT3B0aW9uID09PSAnc3RyaW5nJyA/IGR1cmF0aW9uT3B0aW9uIDogZm9ybWF0TXMoZHVyYXRpb25PcHRpb24pfSAke2Vhc2luZ09wdGlvbn0gJHt0eXBlb2YgZGVsYXkgPT09ICdzdHJpbmcnID8gZGVsYXkgOiBmb3JtYXRNcyhkZWxheSl9YCkuam9pbignLCcpO1xuICB9O1xuXG4gIHJldHVybiBfZXh0ZW5kcyh7XG4gICAgZ2V0QXV0b0hlaWdodER1cmF0aW9uLFxuICAgIGNyZWF0ZVxuICB9LCBpbnB1dFRyYW5zaXRpb25zLCB7XG4gICAgZWFzaW5nOiBtZXJnZWRFYXNpbmcsXG4gICAgZHVyYXRpb246IG1lcmdlZER1cmF0aW9uXG4gIH0pO1xufSIsInZhciB3ZWFrTWVtb2l6ZSA9IGZ1bmN0aW9uIHdlYWtNZW1vaXplKGZ1bmMpIHtcbiAgLy8gJEZsb3dGaXhNZSBmbG93IGRvZXNuJ3QgaW5jbHVkZSBhbGwgbm9uLXByaW1pdGl2ZSB0eXBlcyBhcyBhbGxvd2VkIGZvciB3ZWFrbWFwc1xuICB2YXIgY2FjaGUgPSBuZXcgV2Vha01hcCgpO1xuICByZXR1cm4gZnVuY3Rpb24gKGFyZykge1xuICAgIGlmIChjYWNoZS5oYXMoYXJnKSkge1xuICAgICAgLy8gJEZsb3dGaXhNZVxuICAgICAgcmV0dXJuIGNhY2hlLmdldChhcmcpO1xuICAgIH1cblxuICAgIHZhciByZXQgPSBmdW5jKGFyZyk7XG4gICAgY2FjaGUuc2V0KGFyZywgcmV0KTtcbiAgICByZXR1cm4gcmV0O1xuICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgd2Vha01lbW9pemU7XG4iLCJpbXBvcnQgY3JlYXRlVGhlbWUgZnJvbSAnLi9jcmVhdGVUaGVtZSc7XG5pbXBvcnQgdXNlVGhlbWVXaXRob3V0RGVmYXVsdCBmcm9tICcuL3VzZVRoZW1lV2l0aG91dERlZmF1bHQnO1xuZXhwb3J0IGNvbnN0IHN5c3RlbURlZmF1bHRUaGVtZSA9IGNyZWF0ZVRoZW1lKCk7XG5cbmZ1bmN0aW9uIHVzZVRoZW1lKGRlZmF1bHRUaGVtZSA9IHN5c3RlbURlZmF1bHRUaGVtZSkge1xuICByZXR1cm4gdXNlVGhlbWVXaXRob3V0RGVmYXVsdChkZWZhdWx0VGhlbWUpO1xufVxuXG5leHBvcnQgZGVmYXVsdCB1c2VUaGVtZTsiLCJpbXBvcnQgbWVtb2l6ZSBmcm9tICdAZW1vdGlvbi9tZW1vaXplJztcblxudmFyIHJlYWN0UHJvcHNSZWdleCA9IC9eKChjaGlsZHJlbnxkYW5nZXJvdXNseVNldElubmVySFRNTHxrZXl8cmVmfGF1dG9Gb2N1c3xkZWZhdWx0VmFsdWV8ZGVmYXVsdENoZWNrZWR8aW5uZXJIVE1MfHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ3xzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmd8dmFsdWVMaW5rfGFiYnJ8YWNjZXB0fGFjY2VwdENoYXJzZXR8YWNjZXNzS2V5fGFjdGlvbnxhbGxvd3xhbGxvd1VzZXJNZWRpYXxhbGxvd1BheW1lbnRSZXF1ZXN0fGFsbG93RnVsbFNjcmVlbnxhbGxvd1RyYW5zcGFyZW5jeXxhbHR8YXN5bmN8YXV0b0NvbXBsZXRlfGF1dG9QbGF5fGNhcHR1cmV8Y2VsbFBhZGRpbmd8Y2VsbFNwYWNpbmd8Y2hhbGxlbmdlfGNoYXJTZXR8Y2hlY2tlZHxjaXRlfGNsYXNzSUR8Y2xhc3NOYW1lfGNvbHN8Y29sU3Bhbnxjb250ZW50fGNvbnRlbnRFZGl0YWJsZXxjb250ZXh0TWVudXxjb250cm9sc3xjb250cm9sc0xpc3R8Y29vcmRzfGNyb3NzT3JpZ2lufGRhdGF8ZGF0ZVRpbWV8ZGVjb2Rpbmd8ZGVmYXVsdHxkZWZlcnxkaXJ8ZGlzYWJsZWR8ZGlzYWJsZVBpY3R1cmVJblBpY3R1cmV8ZG93bmxvYWR8ZHJhZ2dhYmxlfGVuY1R5cGV8ZW50ZXJLZXlIaW50fGZvcm18Zm9ybUFjdGlvbnxmb3JtRW5jVHlwZXxmb3JtTWV0aG9kfGZvcm1Ob1ZhbGlkYXRlfGZvcm1UYXJnZXR8ZnJhbWVCb3JkZXJ8aGVhZGVyc3xoZWlnaHR8aGlkZGVufGhpZ2h8aHJlZnxocmVmTGFuZ3xodG1sRm9yfGh0dHBFcXVpdnxpZHxpbnB1dE1vZGV8aW50ZWdyaXR5fGlzfGtleVBhcmFtc3xrZXlUeXBlfGtpbmR8bGFiZWx8bGFuZ3xsaXN0fGxvYWRpbmd8bG9vcHxsb3d8bWFyZ2luSGVpZ2h0fG1hcmdpbldpZHRofG1heHxtYXhMZW5ndGh8bWVkaWF8bWVkaWFHcm91cHxtZXRob2R8bWlufG1pbkxlbmd0aHxtdWx0aXBsZXxtdXRlZHxuYW1lfG5vbmNlfG5vVmFsaWRhdGV8b3BlbnxvcHRpbXVtfHBhdHRlcm58cGxhY2Vob2xkZXJ8cGxheXNJbmxpbmV8cG9zdGVyfHByZWxvYWR8cHJvZmlsZXxyYWRpb0dyb3VwfHJlYWRPbmx5fHJlZmVycmVyUG9saWN5fHJlbHxyZXF1aXJlZHxyZXZlcnNlZHxyb2xlfHJvd3N8cm93U3BhbnxzYW5kYm94fHNjb3BlfHNjb3BlZHxzY3JvbGxpbmd8c2VhbWxlc3N8c2VsZWN0ZWR8c2hhcGV8c2l6ZXxzaXplc3xzbG90fHNwYW58c3BlbGxDaGVja3xzcmN8c3JjRG9jfHNyY0xhbmd8c3JjU2V0fHN0YXJ0fHN0ZXB8c3R5bGV8c3VtbWFyeXx0YWJJbmRleHx0YXJnZXR8dGl0bGV8dHJhbnNsYXRlfHR5cGV8dXNlTWFwfHZhbHVlfHdpZHRofHdtb2RlfHdyYXB8YWJvdXR8ZGF0YXR5cGV8aW5saXN0fHByZWZpeHxwcm9wZXJ0eXxyZXNvdXJjZXx0eXBlb2Z8dm9jYWJ8YXV0b0NhcGl0YWxpemV8YXV0b0NvcnJlY3R8YXV0b1NhdmV8Y29sb3J8aW5jcmVtZW50YWx8ZmFsbGJhY2t8aW5lcnR8aXRlbVByb3B8aXRlbVNjb3BlfGl0ZW1UeXBlfGl0ZW1JRHxpdGVtUmVmfG9ufG9wdGlvbnxyZXN1bHRzfHNlY3VyaXR5fHVuc2VsZWN0YWJsZXxhY2NlbnRIZWlnaHR8YWNjdW11bGF0ZXxhZGRpdGl2ZXxhbGlnbm1lbnRCYXNlbGluZXxhbGxvd1Jlb3JkZXJ8YWxwaGFiZXRpY3xhbXBsaXR1ZGV8YXJhYmljRm9ybXxhc2NlbnR8YXR0cmlidXRlTmFtZXxhdHRyaWJ1dGVUeXBlfGF1dG9SZXZlcnNlfGF6aW11dGh8YmFzZUZyZXF1ZW5jeXxiYXNlbGluZVNoaWZ0fGJhc2VQcm9maWxlfGJib3h8YmVnaW58Ymlhc3xieXxjYWxjTW9kZXxjYXBIZWlnaHR8Y2xpcHxjbGlwUGF0aFVuaXRzfGNsaXBQYXRofGNsaXBSdWxlfGNvbG9ySW50ZXJwb2xhdGlvbnxjb2xvckludGVycG9sYXRpb25GaWx0ZXJzfGNvbG9yUHJvZmlsZXxjb2xvclJlbmRlcmluZ3xjb250ZW50U2NyaXB0VHlwZXxjb250ZW50U3R5bGVUeXBlfGN1cnNvcnxjeHxjeXxkfGRlY2VsZXJhdGV8ZGVzY2VudHxkaWZmdXNlQ29uc3RhbnR8ZGlyZWN0aW9ufGRpc3BsYXl8ZGl2aXNvcnxkb21pbmFudEJhc2VsaW5lfGR1cnxkeHxkeXxlZGdlTW9kZXxlbGV2YXRpb258ZW5hYmxlQmFja2dyb3VuZHxlbmR8ZXhwb25lbnR8ZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZHxmaWxsfGZpbGxPcGFjaXR5fGZpbGxSdWxlfGZpbHRlcnxmaWx0ZXJSZXN8ZmlsdGVyVW5pdHN8Zmxvb2RDb2xvcnxmbG9vZE9wYWNpdHl8Zm9jdXNhYmxlfGZvbnRGYW1pbHl8Zm9udFNpemV8Zm9udFNpemVBZGp1c3R8Zm9udFN0cmV0Y2h8Zm9udFN0eWxlfGZvbnRWYXJpYW50fGZvbnRXZWlnaHR8Zm9ybWF0fGZyb218ZnJ8Znh8Znl8ZzF8ZzJ8Z2x5cGhOYW1lfGdseXBoT3JpZW50YXRpb25Ib3Jpem9udGFsfGdseXBoT3JpZW50YXRpb25WZXJ0aWNhbHxnbHlwaFJlZnxncmFkaWVudFRyYW5zZm9ybXxncmFkaWVudFVuaXRzfGhhbmdpbmd8aG9yaXpBZHZYfGhvcml6T3JpZ2luWHxpZGVvZ3JhcGhpY3xpbWFnZVJlbmRlcmluZ3xpbnxpbjJ8aW50ZXJjZXB0fGt8azF8azJ8azN8azR8a2VybmVsTWF0cml4fGtlcm5lbFVuaXRMZW5ndGh8a2VybmluZ3xrZXlQb2ludHN8a2V5U3BsaW5lc3xrZXlUaW1lc3xsZW5ndGhBZGp1c3R8bGV0dGVyU3BhY2luZ3xsaWdodGluZ0NvbG9yfGxpbWl0aW5nQ29uZUFuZ2xlfGxvY2FsfG1hcmtlckVuZHxtYXJrZXJNaWR8bWFya2VyU3RhcnR8bWFya2VySGVpZ2h0fG1hcmtlclVuaXRzfG1hcmtlcldpZHRofG1hc2t8bWFza0NvbnRlbnRVbml0c3xtYXNrVW5pdHN8bWF0aGVtYXRpY2FsfG1vZGV8bnVtT2N0YXZlc3xvZmZzZXR8b3BhY2l0eXxvcGVyYXRvcnxvcmRlcnxvcmllbnR8b3JpZW50YXRpb258b3JpZ2lufG92ZXJmbG93fG92ZXJsaW5lUG9zaXRpb258b3ZlcmxpbmVUaGlja25lc3N8cGFub3NlMXxwYWludE9yZGVyfHBhdGhMZW5ndGh8cGF0dGVybkNvbnRlbnRVbml0c3xwYXR0ZXJuVHJhbnNmb3JtfHBhdHRlcm5Vbml0c3xwb2ludGVyRXZlbnRzfHBvaW50c3xwb2ludHNBdFh8cG9pbnRzQXRZfHBvaW50c0F0WnxwcmVzZXJ2ZUFscGhhfHByZXNlcnZlQXNwZWN0UmF0aW98cHJpbWl0aXZlVW5pdHN8cnxyYWRpdXN8cmVmWHxyZWZZfHJlbmRlcmluZ0ludGVudHxyZXBlYXRDb3VudHxyZXBlYXREdXJ8cmVxdWlyZWRFeHRlbnNpb25zfHJlcXVpcmVkRmVhdHVyZXN8cmVzdGFydHxyZXN1bHR8cm90YXRlfHJ4fHJ5fHNjYWxlfHNlZWR8c2hhcGVSZW5kZXJpbmd8c2xvcGV8c3BhY2luZ3xzcGVjdWxhckNvbnN0YW50fHNwZWN1bGFyRXhwb25lbnR8c3BlZWR8c3ByZWFkTWV0aG9kfHN0YXJ0T2Zmc2V0fHN0ZERldmlhdGlvbnxzdGVtaHxzdGVtdnxzdGl0Y2hUaWxlc3xzdG9wQ29sb3J8c3RvcE9wYWNpdHl8c3RyaWtldGhyb3VnaFBvc2l0aW9ufHN0cmlrZXRocm91Z2hUaGlja25lc3N8c3RyaW5nfHN0cm9rZXxzdHJva2VEYXNoYXJyYXl8c3Ryb2tlRGFzaG9mZnNldHxzdHJva2VMaW5lY2FwfHN0cm9rZUxpbmVqb2lufHN0cm9rZU1pdGVybGltaXR8c3Ryb2tlT3BhY2l0eXxzdHJva2VXaWR0aHxzdXJmYWNlU2NhbGV8c3lzdGVtTGFuZ3VhZ2V8dGFibGVWYWx1ZXN8dGFyZ2V0WHx0YXJnZXRZfHRleHRBbmNob3J8dGV4dERlY29yYXRpb258dGV4dFJlbmRlcmluZ3x0ZXh0TGVuZ3RofHRvfHRyYW5zZm9ybXx1MXx1Mnx1bmRlcmxpbmVQb3NpdGlvbnx1bmRlcmxpbmVUaGlja25lc3N8dW5pY29kZXx1bmljb2RlQmlkaXx1bmljb2RlUmFuZ2V8dW5pdHNQZXJFbXx2QWxwaGFiZXRpY3x2SGFuZ2luZ3x2SWRlb2dyYXBoaWN8dk1hdGhlbWF0aWNhbHx2YWx1ZXN8dmVjdG9yRWZmZWN0fHZlcnNpb258dmVydEFkdll8dmVydE9yaWdpblh8dmVydE9yaWdpbll8dmlld0JveHx2aWV3VGFyZ2V0fHZpc2liaWxpdHl8d2lkdGhzfHdvcmRTcGFjaW5nfHdyaXRpbmdNb2RlfHh8eEhlaWdodHx4MXx4Mnx4Q2hhbm5lbFNlbGVjdG9yfHhsaW5rQWN0dWF0ZXx4bGlua0FyY3JvbGV8eGxpbmtIcmVmfHhsaW5rUm9sZXx4bGlua1Nob3d8eGxpbmtUaXRsZXx4bGlua1R5cGV8eG1sQmFzZXx4bWxuc3x4bWxuc1hsaW5rfHhtbExhbmd8eG1sU3BhY2V8eXx5MXx5Mnx5Q2hhbm5lbFNlbGVjdG9yfHp8em9vbUFuZFBhbnxmb3J8Y2xhc3N8YXV0b2ZvY3VzKXwoKFtEZF1bQWFdW1R0XVtBYV18W0FhXVtScl1bSWldW0FhXXx4KS0uKikpJC87IC8vIGh0dHBzOi8vZXNiZW5jaC5jb20vYmVuY2gvNWJmZWU2OGE0Y2Q3ZTYwMDllZjYxZDIzXG5cbnZhciBpc1Byb3BWYWxpZCA9IC8qICNfX1BVUkVfXyAqL21lbW9pemUoZnVuY3Rpb24gKHByb3ApIHtcbiAgcmV0dXJuIHJlYWN0UHJvcHNSZWdleC50ZXN0KHByb3ApIHx8IHByb3AuY2hhckNvZGVBdCgwKSA9PT0gMTExXG4gIC8qIG8gKi9cbiAgJiYgcHJvcC5jaGFyQ29kZUF0KDEpID09PSAxMTBcbiAgLyogbiAqL1xuICAmJiBwcm9wLmNoYXJDb2RlQXQoMikgPCA5MTtcbn1cbi8qIForMSAqL1xuKTtcblxuZXhwb3J0IGRlZmF1bHQgaXNQcm9wVmFsaWQ7XG4iLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VDb250ZXh0LCBjcmVhdGVFbGVtZW50LCBGcmFnbWVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBpc1Byb3BWYWxpZCBmcm9tICdAZW1vdGlvbi9pcy1wcm9wLXZhbGlkJztcbmltcG9ydCB7IHdpdGhFbW90aW9uQ2FjaGUsIFRoZW1lQ29udGV4dCB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB7IGdldFJlZ2lzdGVyZWRTdHlsZXMsIHJlZ2lzdGVyU3R5bGVzLCBpbnNlcnRTdHlsZXMgfSBmcm9tICdAZW1vdGlvbi91dGlscyc7XG5pbXBvcnQgeyBzZXJpYWxpemVTdHlsZXMgfSBmcm9tICdAZW1vdGlvbi9zZXJpYWxpemUnO1xuXG52YXIgdGVzdE9taXRQcm9wc09uU3RyaW5nVGFnID0gaXNQcm9wVmFsaWQ7XG5cbnZhciB0ZXN0T21pdFByb3BzT25Db21wb25lbnQgPSBmdW5jdGlvbiB0ZXN0T21pdFByb3BzT25Db21wb25lbnQoa2V5KSB7XG4gIHJldHVybiBrZXkgIT09ICd0aGVtZSc7XG59O1xuXG52YXIgZ2V0RGVmYXVsdFNob3VsZEZvcndhcmRQcm9wID0gZnVuY3Rpb24gZ2V0RGVmYXVsdFNob3VsZEZvcndhcmRQcm9wKHRhZykge1xuICByZXR1cm4gdHlwZW9mIHRhZyA9PT0gJ3N0cmluZycgJiYgLy8gOTYgaXMgb25lIGxlc3MgdGhhbiB0aGUgY2hhciBjb2RlXG4gIC8vIGZvciBcImFcIiBzbyB0aGlzIGlzIGNoZWNraW5nIHRoYXRcbiAgLy8gaXQncyBhIGxvd2VyY2FzZSBjaGFyYWN0ZXJcbiAgdGFnLmNoYXJDb2RlQXQoMCkgPiA5NiA/IHRlc3RPbWl0UHJvcHNPblN0cmluZ1RhZyA6IHRlc3RPbWl0UHJvcHNPbkNvbXBvbmVudDtcbn07XG52YXIgY29tcG9zZVNob3VsZEZvcndhcmRQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvc2VTaG91bGRGb3J3YXJkUHJvcHModGFnLCBvcHRpb25zLCBpc1JlYWwpIHtcbiAgdmFyIHNob3VsZEZvcndhcmRQcm9wO1xuXG4gIGlmIChvcHRpb25zKSB7XG4gICAgdmFyIG9wdGlvbnNTaG91bGRGb3J3YXJkUHJvcCA9IG9wdGlvbnMuc2hvdWxkRm9yd2FyZFByb3A7XG4gICAgc2hvdWxkRm9yd2FyZFByb3AgPSB0YWcuX19lbW90aW9uX2ZvcndhcmRQcm9wICYmIG9wdGlvbnNTaG91bGRGb3J3YXJkUHJvcCA/IGZ1bmN0aW9uIChwcm9wTmFtZSkge1xuICAgICAgcmV0dXJuIHRhZy5fX2Vtb3Rpb25fZm9yd2FyZFByb3AocHJvcE5hbWUpICYmIG9wdGlvbnNTaG91bGRGb3J3YXJkUHJvcChwcm9wTmFtZSk7XG4gICAgfSA6IG9wdGlvbnNTaG91bGRGb3J3YXJkUHJvcDtcbiAgfVxuXG4gIGlmICh0eXBlb2Ygc2hvdWxkRm9yd2FyZFByb3AgIT09ICdmdW5jdGlvbicgJiYgaXNSZWFsKSB7XG4gICAgc2hvdWxkRm9yd2FyZFByb3AgPSB0YWcuX19lbW90aW9uX2ZvcndhcmRQcm9wO1xuICB9XG5cbiAgcmV0dXJuIHNob3VsZEZvcndhcmRQcm9wO1xufTtcblxudmFyIHVzZUluc2VydGlvbkVmZmVjdCA9IFJlYWN0Wyd1c2VJbnNlcnRpb24nICsgJ0VmZmVjdCddID8gUmVhY3RbJ3VzZUluc2VydGlvbicgKyAnRWZmZWN0J10gOiBmdW5jdGlvbiB1c2VJbnNlcnRpb25FZmZlY3QoY3JlYXRlKSB7XG4gIGNyZWF0ZSgpO1xufTtcbmZ1bmN0aW9uIHVzZUluc2VydGlvbkVmZmVjdE1heWJlKGNyZWF0ZSkge1xuXG4gIHVzZUluc2VydGlvbkVmZmVjdChjcmVhdGUpO1xufVxuXG52YXIgSUxMRUdBTF9FU0NBUEVfU0VRVUVOQ0VfRVJST1IgPSBcIllvdSBoYXZlIGlsbGVnYWwgZXNjYXBlIHNlcXVlbmNlIGluIHlvdXIgdGVtcGxhdGUgbGl0ZXJhbCwgbW9zdCBsaWtlbHkgaW5zaWRlIGNvbnRlbnQncyBwcm9wZXJ0eSB2YWx1ZS5cXG5CZWNhdXNlIHlvdSB3cml0ZSB5b3VyIENTUyBpbnNpZGUgYSBKYXZhU2NyaXB0IHN0cmluZyB5b3UgYWN0dWFsbHkgaGF2ZSB0byBkbyBkb3VibGUgZXNjYXBpbmcsIHNvIGZvciBleGFtcGxlIFxcXCJjb250ZW50OiAnXFxcXDAwZDcnO1xcXCIgc2hvdWxkIGJlY29tZSBcXFwiY29udGVudDogJ1xcXFxcXFxcMDBkNyc7XFxcIi5cXG5Zb3UgY2FuIHJlYWQgbW9yZSBhYm91dCB0aGlzIGhlcmU6XFxuaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvVGVtcGxhdGVfbGl0ZXJhbHMjRVMyMDE4X3JldmlzaW9uX29mX2lsbGVnYWxfZXNjYXBlX3NlcXVlbmNlc1wiO1xuXG52YXIgSW5zZXJ0aW9uID0gZnVuY3Rpb24gSW5zZXJ0aW9uKF9yZWYpIHtcbiAgdmFyIGNhY2hlID0gX3JlZi5jYWNoZSxcbiAgICAgIHNlcmlhbGl6ZWQgPSBfcmVmLnNlcmlhbGl6ZWQsXG4gICAgICBpc1N0cmluZ1RhZyA9IF9yZWYuaXNTdHJpbmdUYWc7XG4gIHJlZ2lzdGVyU3R5bGVzKGNhY2hlLCBzZXJpYWxpemVkLCBpc1N0cmluZ1RhZyk7XG4gIHZhciBydWxlcyA9IHVzZUluc2VydGlvbkVmZmVjdE1heWJlKGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gaW5zZXJ0U3R5bGVzKGNhY2hlLCBzZXJpYWxpemVkLCBpc1N0cmluZ1RhZyk7XG4gIH0pO1xuXG4gIHJldHVybiBudWxsO1xufTtcblxudmFyIGNyZWF0ZVN0eWxlZCA9IGZ1bmN0aW9uIGNyZWF0ZVN0eWxlZCh0YWcsIG9wdGlvbnMpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICBpZiAodGFnID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignWW91IGFyZSB0cnlpbmcgdG8gY3JlYXRlIGEgc3R5bGVkIGVsZW1lbnQgd2l0aCBhbiB1bmRlZmluZWQgY29tcG9uZW50LlxcbllvdSBtYXkgaGF2ZSBmb3Jnb3R0ZW4gdG8gaW1wb3J0IGl0LicpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBpc1JlYWwgPSB0YWcuX19lbW90aW9uX3JlYWwgPT09IHRhZztcbiAgdmFyIGJhc2VUYWcgPSBpc1JlYWwgJiYgdGFnLl9fZW1vdGlvbl9iYXNlIHx8IHRhZztcbiAgdmFyIGlkZW50aWZpZXJOYW1lO1xuICB2YXIgdGFyZ2V0Q2xhc3NOYW1lO1xuXG4gIGlmIChvcHRpb25zICE9PSB1bmRlZmluZWQpIHtcbiAgICBpZGVudGlmaWVyTmFtZSA9IG9wdGlvbnMubGFiZWw7XG4gICAgdGFyZ2V0Q2xhc3NOYW1lID0gb3B0aW9ucy50YXJnZXQ7XG4gIH1cblxuICB2YXIgc2hvdWxkRm9yd2FyZFByb3AgPSBjb21wb3NlU2hvdWxkRm9yd2FyZFByb3BzKHRhZywgb3B0aW9ucywgaXNSZWFsKTtcbiAgdmFyIGRlZmF1bHRTaG91bGRGb3J3YXJkUHJvcCA9IHNob3VsZEZvcndhcmRQcm9wIHx8IGdldERlZmF1bHRTaG91bGRGb3J3YXJkUHJvcChiYXNlVGFnKTtcbiAgdmFyIHNob3VsZFVzZUFzID0gIWRlZmF1bHRTaG91bGRGb3J3YXJkUHJvcCgnYXMnKTtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgYXJncyA9IGFyZ3VtZW50cztcbiAgICB2YXIgc3R5bGVzID0gaXNSZWFsICYmIHRhZy5fX2Vtb3Rpb25fc3R5bGVzICE9PSB1bmRlZmluZWQgPyB0YWcuX19lbW90aW9uX3N0eWxlcy5zbGljZSgwKSA6IFtdO1xuXG4gICAgaWYgKGlkZW50aWZpZXJOYW1lICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHN0eWxlcy5wdXNoKFwibGFiZWw6XCIgKyBpZGVudGlmaWVyTmFtZSArIFwiO1wiKTtcbiAgICB9XG5cbiAgICBpZiAoYXJnc1swXSA9PSBudWxsIHx8IGFyZ3NbMF0ucmF3ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHN0eWxlcy5wdXNoLmFwcGx5KHN0eWxlcywgYXJncyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIGFyZ3NbMF1bMF0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICBjb25zb2xlLmVycm9yKElMTEVHQUxfRVNDQVBFX1NFUVVFTkNFX0VSUk9SKTtcbiAgICAgIH1cblxuICAgICAgc3R5bGVzLnB1c2goYXJnc1swXVswXSk7XG4gICAgICB2YXIgbGVuID0gYXJncy5sZW5ndGg7XG4gICAgICB2YXIgaSA9IDE7XG5cbiAgICAgIGZvciAoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgYXJnc1swXVtpXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihJTExFR0FMX0VTQ0FQRV9TRVFVRU5DRV9FUlJPUik7XG4gICAgICAgIH1cblxuICAgICAgICBzdHlsZXMucHVzaChhcmdzW2ldLCBhcmdzWzBdW2ldKTtcbiAgICAgIH1cbiAgICB9IC8vICRGbG93Rml4TWU6IHdlIG5lZWQgdG8gY2FzdCBTdGF0ZWxlc3NGdW5jdGlvbmFsQ29tcG9uZW50IHRvIG91ciBQcml2YXRlU3R5bGVkQ29tcG9uZW50IGNsYXNzXG5cblxuICAgIHZhciBTdHlsZWQgPSB3aXRoRW1vdGlvbkNhY2hlKGZ1bmN0aW9uIChwcm9wcywgY2FjaGUsIHJlZikge1xuICAgICAgdmFyIEZpbmFsVGFnID0gc2hvdWxkVXNlQXMgJiYgcHJvcHMuYXMgfHwgYmFzZVRhZztcbiAgICAgIHZhciBjbGFzc05hbWUgPSAnJztcbiAgICAgIHZhciBjbGFzc0ludGVycG9sYXRpb25zID0gW107XG4gICAgICB2YXIgbWVyZ2VkUHJvcHMgPSBwcm9wcztcblxuICAgICAgaWYgKHByb3BzLnRoZW1lID09IG51bGwpIHtcbiAgICAgICAgbWVyZ2VkUHJvcHMgPSB7fTtcblxuICAgICAgICBmb3IgKHZhciBrZXkgaW4gcHJvcHMpIHtcbiAgICAgICAgICBtZXJnZWRQcm9wc1trZXldID0gcHJvcHNba2V5XTtcbiAgICAgICAgfVxuXG4gICAgICAgIG1lcmdlZFByb3BzLnRoZW1lID0gdXNlQ29udGV4dChUaGVtZUNvbnRleHQpO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIHByb3BzLmNsYXNzTmFtZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgY2xhc3NOYW1lID0gZ2V0UmVnaXN0ZXJlZFN0eWxlcyhjYWNoZS5yZWdpc3RlcmVkLCBjbGFzc0ludGVycG9sYXRpb25zLCBwcm9wcy5jbGFzc05hbWUpO1xuICAgICAgfSBlbHNlIGlmIChwcm9wcy5jbGFzc05hbWUgIT0gbnVsbCkge1xuICAgICAgICBjbGFzc05hbWUgPSBwcm9wcy5jbGFzc05hbWUgKyBcIiBcIjtcbiAgICAgIH1cblxuICAgICAgdmFyIHNlcmlhbGl6ZWQgPSBzZXJpYWxpemVTdHlsZXMoc3R5bGVzLmNvbmNhdChjbGFzc0ludGVycG9sYXRpb25zKSwgY2FjaGUucmVnaXN0ZXJlZCwgbWVyZ2VkUHJvcHMpO1xuICAgICAgY2xhc3NOYW1lICs9IGNhY2hlLmtleSArIFwiLVwiICsgc2VyaWFsaXplZC5uYW1lO1xuXG4gICAgICBpZiAodGFyZ2V0Q2xhc3NOYW1lICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgY2xhc3NOYW1lICs9IFwiIFwiICsgdGFyZ2V0Q2xhc3NOYW1lO1xuICAgICAgfVxuXG4gICAgICB2YXIgZmluYWxTaG91bGRGb3J3YXJkUHJvcCA9IHNob3VsZFVzZUFzICYmIHNob3VsZEZvcndhcmRQcm9wID09PSB1bmRlZmluZWQgPyBnZXREZWZhdWx0U2hvdWxkRm9yd2FyZFByb3AoRmluYWxUYWcpIDogZGVmYXVsdFNob3VsZEZvcndhcmRQcm9wO1xuICAgICAgdmFyIG5ld1Byb3BzID0ge307XG5cbiAgICAgIGZvciAodmFyIF9rZXkgaW4gcHJvcHMpIHtcbiAgICAgICAgaWYgKHNob3VsZFVzZUFzICYmIF9rZXkgPT09ICdhcycpIGNvbnRpbnVlO1xuXG4gICAgICAgIGlmICggLy8gJEZsb3dGaXhNZVxuICAgICAgICBmaW5hbFNob3VsZEZvcndhcmRQcm9wKF9rZXkpKSB7XG4gICAgICAgICAgbmV3UHJvcHNbX2tleV0gPSBwcm9wc1tfa2V5XTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBuZXdQcm9wcy5jbGFzc05hbWUgPSBjbGFzc05hbWU7XG4gICAgICBuZXdQcm9wcy5yZWYgPSByZWY7XG4gICAgICByZXR1cm4gLyojX19QVVJFX18qL2NyZWF0ZUVsZW1lbnQoRnJhZ21lbnQsIG51bGwsIC8qI19fUFVSRV9fKi9jcmVhdGVFbGVtZW50KEluc2VydGlvbiwge1xuICAgICAgICBjYWNoZTogY2FjaGUsXG4gICAgICAgIHNlcmlhbGl6ZWQ6IHNlcmlhbGl6ZWQsXG4gICAgICAgIGlzU3RyaW5nVGFnOiB0eXBlb2YgRmluYWxUYWcgPT09ICdzdHJpbmcnXG4gICAgICB9KSwgLyojX19QVVJFX18qL2NyZWF0ZUVsZW1lbnQoRmluYWxUYWcsIG5ld1Byb3BzKSk7XG4gICAgfSk7XG4gICAgU3R5bGVkLmRpc3BsYXlOYW1lID0gaWRlbnRpZmllck5hbWUgIT09IHVuZGVmaW5lZCA/IGlkZW50aWZpZXJOYW1lIDogXCJTdHlsZWQoXCIgKyAodHlwZW9mIGJhc2VUYWcgPT09ICdzdHJpbmcnID8gYmFzZVRhZyA6IGJhc2VUYWcuZGlzcGxheU5hbWUgfHwgYmFzZVRhZy5uYW1lIHx8ICdDb21wb25lbnQnKSArIFwiKVwiO1xuICAgIFN0eWxlZC5kZWZhdWx0UHJvcHMgPSB0YWcuZGVmYXVsdFByb3BzO1xuICAgIFN0eWxlZC5fX2Vtb3Rpb25fcmVhbCA9IFN0eWxlZDtcbiAgICBTdHlsZWQuX19lbW90aW9uX2Jhc2UgPSBiYXNlVGFnO1xuICAgIFN0eWxlZC5fX2Vtb3Rpb25fc3R5bGVzID0gc3R5bGVzO1xuICAgIFN0eWxlZC5fX2Vtb3Rpb25fZm9yd2FyZFByb3AgPSBzaG91bGRGb3J3YXJkUHJvcDtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU3R5bGVkLCAndG9TdHJpbmcnLCB7XG4gICAgICB2YWx1ZTogZnVuY3Rpb24gdmFsdWUoKSB7XG4gICAgICAgIGlmICh0YXJnZXRDbGFzc05hbWUgPT09IHVuZGVmaW5lZCAmJiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgcmV0dXJuICdOT19DT01QT05FTlRfU0VMRUNUT1InO1xuICAgICAgICB9IC8vICRGbG93Rml4TWU6IGNvZXJjZSB1bmRlZmluZWQgdG8gc3RyaW5nXG5cblxuICAgICAgICByZXR1cm4gXCIuXCIgKyB0YXJnZXRDbGFzc05hbWU7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBTdHlsZWQud2l0aENvbXBvbmVudCA9IGZ1bmN0aW9uIChuZXh0VGFnLCBuZXh0T3B0aW9ucykge1xuICAgICAgcmV0dXJuIGNyZWF0ZVN0eWxlZChuZXh0VGFnLCBfZXh0ZW5kcyh7fSwgb3B0aW9ucywgbmV4dE9wdGlvbnMsIHtcbiAgICAgICAgc2hvdWxkRm9yd2FyZFByb3A6IGNvbXBvc2VTaG91bGRGb3J3YXJkUHJvcHMoU3R5bGVkLCBuZXh0T3B0aW9ucywgdHJ1ZSlcbiAgICAgIH0pKS5hcHBseSh2b2lkIDAsIHN0eWxlcyk7XG4gICAgfTtcblxuICAgIHJldHVybiBTdHlsZWQ7XG4gIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVTdHlsZWQ7XG4iLCJpbXBvcnQgJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXh0ZW5kcyc7XG5pbXBvcnQgJ3JlYWN0JztcbmltcG9ydCAnQGVtb3Rpb24vaXMtcHJvcC12YWxpZCc7XG5pbXBvcnQgY3JlYXRlU3R5bGVkIGZyb20gJy4uL2Jhc2UvZGlzdC9lbW90aW9uLXN0eWxlZC1iYXNlLmJyb3dzZXIuZXNtLmpzJztcbmltcG9ydCAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0ICdAZW1vdGlvbi91dGlscyc7XG5pbXBvcnQgJ0BlbW90aW9uL3NlcmlhbGl6ZSc7XG5cbnZhciB0YWdzID0gWydhJywgJ2FiYnInLCAnYWRkcmVzcycsICdhcmVhJywgJ2FydGljbGUnLCAnYXNpZGUnLCAnYXVkaW8nLCAnYicsICdiYXNlJywgJ2JkaScsICdiZG8nLCAnYmlnJywgJ2Jsb2NrcXVvdGUnLCAnYm9keScsICdicicsICdidXR0b24nLCAnY2FudmFzJywgJ2NhcHRpb24nLCAnY2l0ZScsICdjb2RlJywgJ2NvbCcsICdjb2xncm91cCcsICdkYXRhJywgJ2RhdGFsaXN0JywgJ2RkJywgJ2RlbCcsICdkZXRhaWxzJywgJ2RmbicsICdkaWFsb2cnLCAnZGl2JywgJ2RsJywgJ2R0JywgJ2VtJywgJ2VtYmVkJywgJ2ZpZWxkc2V0JywgJ2ZpZ2NhcHRpb24nLCAnZmlndXJlJywgJ2Zvb3RlcicsICdmb3JtJywgJ2gxJywgJ2gyJywgJ2gzJywgJ2g0JywgJ2g1JywgJ2g2JywgJ2hlYWQnLCAnaGVhZGVyJywgJ2hncm91cCcsICdocicsICdodG1sJywgJ2knLCAnaWZyYW1lJywgJ2ltZycsICdpbnB1dCcsICdpbnMnLCAna2JkJywgJ2tleWdlbicsICdsYWJlbCcsICdsZWdlbmQnLCAnbGknLCAnbGluaycsICdtYWluJywgJ21hcCcsICdtYXJrJywgJ21hcnF1ZWUnLCAnbWVudScsICdtZW51aXRlbScsICdtZXRhJywgJ21ldGVyJywgJ25hdicsICdub3NjcmlwdCcsICdvYmplY3QnLCAnb2wnLCAnb3B0Z3JvdXAnLCAnb3B0aW9uJywgJ291dHB1dCcsICdwJywgJ3BhcmFtJywgJ3BpY3R1cmUnLCAncHJlJywgJ3Byb2dyZXNzJywgJ3EnLCAncnAnLCAncnQnLCAncnVieScsICdzJywgJ3NhbXAnLCAnc2NyaXB0JywgJ3NlY3Rpb24nLCAnc2VsZWN0JywgJ3NtYWxsJywgJ3NvdXJjZScsICdzcGFuJywgJ3N0cm9uZycsICdzdHlsZScsICdzdWInLCAnc3VtbWFyeScsICdzdXAnLCAndGFibGUnLCAndGJvZHknLCAndGQnLCAndGV4dGFyZWEnLCAndGZvb3QnLCAndGgnLCAndGhlYWQnLCAndGltZScsICd0aXRsZScsICd0cicsICd0cmFjaycsICd1JywgJ3VsJywgJ3ZhcicsICd2aWRlbycsICd3YnInLCAvLyBTVkdcbidjaXJjbGUnLCAnY2xpcFBhdGgnLCAnZGVmcycsICdlbGxpcHNlJywgJ2ZvcmVpZ25PYmplY3QnLCAnZycsICdpbWFnZScsICdsaW5lJywgJ2xpbmVhckdyYWRpZW50JywgJ21hc2snLCAncGF0aCcsICdwYXR0ZXJuJywgJ3BvbHlnb24nLCAncG9seWxpbmUnLCAncmFkaWFsR3JhZGllbnQnLCAncmVjdCcsICdzdG9wJywgJ3N2ZycsICd0ZXh0JywgJ3RzcGFuJ107XG5cbnZhciBuZXdTdHlsZWQgPSBjcmVhdGVTdHlsZWQuYmluZCgpO1xudGFncy5mb3JFYWNoKGZ1bmN0aW9uICh0YWdOYW1lKSB7XG4gIC8vICRGbG93Rml4TWU6IHdlIGNhbiBpZ25vcmUgdGhpcyBiZWNhdXNlIGl0cyBleHBvc2VkIHR5cGUgaXMgZGVmaW5lZCBieSB0aGUgQ3JlYXRlU3R5bGVkIHR5cGVcbiAgbmV3U3R5bGVkW3RhZ05hbWVdID0gbmV3U3R5bGVkKHRhZ05hbWUpO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IG5ld1N0eWxlZDtcbiIsIi8qKiBAbGljZW5zZSBNVUkgdjUuNy4wXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbmltcG9ydCBlbVN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc3R5bGVkKHRhZywgb3B0aW9ucykge1xuICBjb25zdCBzdHlsZXNGYWN0b3J5ID0gZW1TdHlsZWQodGFnLCBvcHRpb25zKTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIHJldHVybiAoLi4uc3R5bGVzKSA9PiB7XG4gICAgICBjb25zdCBjb21wb25lbnQgPSB0eXBlb2YgdGFnID09PSAnc3RyaW5nJyA/IGBcIiR7dGFnfVwiYCA6ICdjb21wb25lbnQnO1xuXG4gICAgICBpZiAoc3R5bGVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBjb25zb2xlLmVycm9yKFtgTVVJOiBTZWVtcyBsaWtlIHlvdSBjYWxsZWQgXFxgc3R5bGVkKCR7Y29tcG9uZW50fSkoKVxcYCB3aXRob3V0IGEgXFxgc3R5bGVcXGAgYXJndW1lbnQuYCwgJ1lvdSBtdXN0IHByb3ZpZGUgYSBgc3R5bGVzYCBhcmd1bWVudDogYHN0eWxlZChcImRpdlwiKShzdHlsZVlvdUZvcmdvdFRvUGFzcylgLiddLmpvaW4oJ1xcbicpKTtcbiAgICAgIH0gZWxzZSBpZiAoc3R5bGVzLnNvbWUoc3R5bGUgPT4gc3R5bGUgPT09IHVuZGVmaW5lZCkpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihgTVVJOiB0aGUgc3R5bGVkKCR7Y29tcG9uZW50fSkoLi4uYXJncykgQVBJIHJlcXVpcmVzIGFsbCBpdHMgYXJncyB0byBiZSBkZWZpbmVkLmApO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gc3R5bGVzRmFjdG9yeSguLi5zdHlsZXMpO1xuICAgIH07XG4gIH1cblxuICByZXR1cm4gc3R5bGVzRmFjdG9yeTtcbn1cbmV4cG9ydCB7IFRoZW1lQ29udGV4dCwga2V5ZnJhbWVzLCBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIFN0eWxlZEVuZ2luZVByb3ZpZGVyIH0gZnJvbSAnLi9TdHlsZWRFbmdpbmVQcm92aWRlcic7XG5leHBvcnQgeyBkZWZhdWx0IGFzIEdsb2JhbFN0eWxlcyB9IGZyb20gJy4vR2xvYmFsU3R5bGVzJzsiLCIvKipcbiAqIFdBUk5JTkc6IERvbid0IGltcG9ydCB0aGlzIGRpcmVjdGx5LlxuICogVXNlIGBNdWlFcnJvcmAgZnJvbSBgQG11aS91dGlscy9tYWNyb3MvTXVpRXJyb3IubWFjcm9gIGluc3RlYWQuXG4gKiBAcGFyYW0ge251bWJlcn0gY29kZVxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBmb3JtYXRNdWlFcnJvck1lc3NhZ2UoY29kZSkge1xuICAvLyBBcHBseSBiYWJlbC1wbHVnaW4tdHJhbnNmb3JtLXRlbXBsYXRlLWxpdGVyYWxzIGluIGxvb3NlIG1vZGVcbiAgLy8gbG9vc2UgbW9kZSBpcyBzYWZlIGlmZiB3ZSdyZSBjb25jYXRlbmF0aW5nIHByaW1pdGl2ZXNcbiAgLy8gc2VlIGh0dHBzOi8vYmFiZWxqcy5pby9kb2NzL2VuL2JhYmVsLXBsdWdpbi10cmFuc2Zvcm0tdGVtcGxhdGUtbGl0ZXJhbHMjbG9vc2VcblxuICAvKiBlc2xpbnQtZGlzYWJsZSBwcmVmZXItdGVtcGxhdGUgKi9cbiAgbGV0IHVybCA9ICdodHRwczovL211aS5jb20vcHJvZHVjdGlvbi1lcnJvci8/Y29kZT0nICsgY29kZTtcblxuICBmb3IgKGxldCBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkgKz0gMSkge1xuICAgIC8vIHJlc3QgcGFyYW1zIG92ZXItdHJhbnNwaWxlIGZvciB0aGlzIGNhc2VcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLXJlc3QtcGFyYW1zXG4gICAgdXJsICs9ICcmYXJnc1tdPScgKyBlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2ldKTtcbiAgfVxuXG4gIHJldHVybiAnTWluaWZpZWQgTVVJIGVycm9yICMnICsgY29kZSArICc7IHZpc2l0ICcgKyB1cmwgKyAnIGZvciB0aGUgZnVsbCBtZXNzYWdlLic7XG4gIC8qIGVzbGludC1lbmFibGUgcHJlZmVyLXRlbXBsYXRlICovXG59IiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgcmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbi8qKlxuICogQ29weXJpZ2h0IDIwMTUsIFlhaG9vISBJbmMuXG4gKiBDb3B5cmlnaHRzIGxpY2Vuc2VkIHVuZGVyIHRoZSBOZXcgQlNEIExpY2Vuc2UuIFNlZSB0aGUgYWNjb21wYW55aW5nIExJQ0VOU0UgZmlsZSBmb3IgdGVybXMuXG4gKi9cbnZhciBSRUFDVF9TVEFUSUNTID0ge1xuICBjaGlsZENvbnRleHRUeXBlczogdHJ1ZSxcbiAgY29udGV4dFR5cGU6IHRydWUsXG4gIGNvbnRleHRUeXBlczogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgZ2V0RGVmYXVsdFByb3BzOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I6IHRydWUsXG4gIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczogdHJ1ZSxcbiAgbWl4aW5zOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWUsXG4gIHR5cGU6IHRydWVcbn07XG52YXIgS05PV05fU1RBVElDUyA9IHtcbiAgbmFtZTogdHJ1ZSxcbiAgbGVuZ3RoOiB0cnVlLFxuICBwcm90b3R5cGU6IHRydWUsXG4gIGNhbGxlcjogdHJ1ZSxcbiAgY2FsbGVlOiB0cnVlLFxuICBhcmd1bWVudHM6IHRydWUsXG4gIGFyaXR5OiB0cnVlXG59O1xudmFyIEZPUldBUkRfUkVGX1NUQVRJQ1MgPSB7XG4gICckJHR5cGVvZic6IHRydWUsXG4gIHJlbmRlcjogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlXG59O1xudmFyIE1FTU9fU1RBVElDUyA9IHtcbiAgJyQkdHlwZW9mJzogdHJ1ZSxcbiAgY29tcGFyZTogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xudmFyIFRZUEVfU1RBVElDUyA9IHt9O1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuRm9yd2FyZFJlZl0gPSBGT1JXQVJEX1JFRl9TVEFUSUNTO1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuTWVtb10gPSBNRU1PX1NUQVRJQ1M7XG5cbmZ1bmN0aW9uIGdldFN0YXRpY3MoY29tcG9uZW50KSB7XG4gIC8vIFJlYWN0IHYxNi4xMSBhbmQgYmVsb3dcbiAgaWYgKHJlYWN0SXMuaXNNZW1vKGNvbXBvbmVudCkpIHtcbiAgICByZXR1cm4gTUVNT19TVEFUSUNTO1xuICB9IC8vIFJlYWN0IHYxNi4xMiBhbmQgYWJvdmVcblxuXG4gIHJldHVybiBUWVBFX1NUQVRJQ1NbY29tcG9uZW50WyckJHR5cGVvZiddXSB8fCBSRUFDVF9TVEFUSUNTO1xufVxuXG52YXIgZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgZ2V0T3duUHJvcGVydHlOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBnZXRQcm90b3R5cGVPZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbnZhciBvYmplY3RQcm90b3R5cGUgPSBPYmplY3QucHJvdG90eXBlO1xuZnVuY3Rpb24gaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBzb3VyY2VDb21wb25lbnQsIGJsYWNrbGlzdCkge1xuICBpZiAodHlwZW9mIHNvdXJjZUNvbXBvbmVudCAhPT0gJ3N0cmluZycpIHtcbiAgICAvLyBkb24ndCBob2lzdCBvdmVyIHN0cmluZyAoaHRtbCkgY29tcG9uZW50c1xuICAgIGlmIChvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgIHZhciBpbmhlcml0ZWRDb21wb25lbnQgPSBnZXRQcm90b3R5cGVPZihzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgICBpZiAoaW5oZXJpdGVkQ29tcG9uZW50ICYmIGluaGVyaXRlZENvbXBvbmVudCAhPT0gb2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICAgIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgaW5oZXJpdGVkQ29tcG9uZW50LCBibGFja2xpc3QpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBrZXlzID0gZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgaWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgICAga2V5cyA9IGtleXMuY29uY2F0KGdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2VDb21wb25lbnQpKTtcbiAgICB9XG5cbiAgICB2YXIgdGFyZ2V0U3RhdGljcyA9IGdldFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50KTtcbiAgICB2YXIgc291cmNlU3RhdGljcyA9IGdldFN0YXRpY3Moc291cmNlQ29tcG9uZW50KTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7ICsraSkge1xuICAgICAgdmFyIGtleSA9IGtleXNbaV07XG5cbiAgICAgIGlmICghS05PV05fU1RBVElDU1trZXldICYmICEoYmxhY2tsaXN0ICYmIGJsYWNrbGlzdFtrZXldKSAmJiAhKHNvdXJjZVN0YXRpY3MgJiYgc291cmNlU3RhdGljc1trZXldKSAmJiAhKHRhcmdldFN0YXRpY3MgJiYgdGFyZ2V0U3RhdGljc1trZXldKSkge1xuICAgICAgICB2YXIgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2VDb21wb25lbnQsIGtleSk7XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBBdm9pZCBmYWlsdXJlcyBmcm9tIHJlYWQtb25seSBwcm9wZXJ0aWVzXG4gICAgICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0Q29tcG9uZW50LCBrZXksIGRlc2NyaXB0b3IpO1xuICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaG9pc3ROb25SZWFjdFN0YXRpY3M7XG4iLCIvKlxuXG5CYXNlZCBvZmYgZ2xhbW9yJ3MgU3R5bGVTaGVldCwgdGhhbmtzIFN1bmlsIOKdpO+4j1xuXG5oaWdoIHBlcmZvcm1hbmNlIFN0eWxlU2hlZXQgZm9yIGNzcy1pbi1qcyBzeXN0ZW1zXG5cbi0gdXNlcyBtdWx0aXBsZSBzdHlsZSB0YWdzIGJlaGluZCB0aGUgc2NlbmVzIGZvciBtaWxsaW9ucyBvZiBydWxlc1xuLSB1c2VzIGBpbnNlcnRSdWxlYCBmb3IgYXBwZW5kaW5nIGluIHByb2R1Y3Rpb24gZm9yICptdWNoKiBmYXN0ZXIgcGVyZm9ybWFuY2VcblxuLy8gdXNhZ2VcblxuaW1wb3J0IHsgU3R5bGVTaGVldCB9IGZyb20gJ0BlbW90aW9uL3NoZWV0J1xuXG5sZXQgc3R5bGVTaGVldCA9IG5ldyBTdHlsZVNoZWV0KHsga2V5OiAnJywgY29udGFpbmVyOiBkb2N1bWVudC5oZWFkIH0pXG5cbnN0eWxlU2hlZXQuaW5zZXJ0KCcjYm94IHsgYm9yZGVyOiAxcHggc29saWQgcmVkOyB9Jylcbi0gYXBwZW5kcyBhIGNzcyBydWxlIGludG8gdGhlIHN0eWxlc2hlZXRcblxuc3R5bGVTaGVldC5mbHVzaCgpXG4tIGVtcHRpZXMgdGhlIHN0eWxlc2hlZXQgb2YgYWxsIGl0cyBjb250ZW50c1xuXG4qL1xuLy8gJEZsb3dGaXhNZVxuZnVuY3Rpb24gc2hlZXRGb3JUYWcodGFnKSB7XG4gIGlmICh0YWcuc2hlZXQpIHtcbiAgICAvLyAkRmxvd0ZpeE1lXG4gICAgcmV0dXJuIHRhZy5zaGVldDtcbiAgfSAvLyB0aGlzIHdlaXJkbmVzcyBicm91Z2h0IHRvIHlvdSBieSBmaXJlZm94XG5cbiAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cblxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgZG9jdW1lbnQuc3R5bGVTaGVldHMubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoZG9jdW1lbnQuc3R5bGVTaGVldHNbaV0ub3duZXJOb2RlID09PSB0YWcpIHtcbiAgICAgIC8vICRGbG93Rml4TWVcbiAgICAgIHJldHVybiBkb2N1bWVudC5zdHlsZVNoZWV0c1tpXTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIHRhZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XG4gIHRhZy5zZXRBdHRyaWJ1dGUoJ2RhdGEtZW1vdGlvbicsIG9wdGlvbnMua2V5KTtcblxuICBpZiAob3B0aW9ucy5ub25jZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgdGFnLnNldEF0dHJpYnV0ZSgnbm9uY2UnLCBvcHRpb25zLm5vbmNlKTtcbiAgfVxuXG4gIHRhZy5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgnJykpO1xuICB0YWcuc2V0QXR0cmlidXRlKCdkYXRhLXMnLCAnJyk7XG4gIHJldHVybiB0YWc7XG59XG5cbnZhciBTdHlsZVNoZWV0ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gU3R5bGVTaGVldChvcHRpb25zKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIHRoaXMuX2luc2VydFRhZyA9IGZ1bmN0aW9uICh0YWcpIHtcbiAgICAgIHZhciBiZWZvcmU7XG5cbiAgICAgIGlmIChfdGhpcy50YWdzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBpZiAoX3RoaXMuaW5zZXJ0aW9uUG9pbnQpIHtcbiAgICAgICAgICBiZWZvcmUgPSBfdGhpcy5pbnNlcnRpb25Qb2ludC5uZXh0U2libGluZztcbiAgICAgICAgfSBlbHNlIGlmIChfdGhpcy5wcmVwZW5kKSB7XG4gICAgICAgICAgYmVmb3JlID0gX3RoaXMuY29udGFpbmVyLmZpcnN0Q2hpbGQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgYmVmb3JlID0gX3RoaXMuYmVmb3JlO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBiZWZvcmUgPSBfdGhpcy50YWdzW190aGlzLnRhZ3MubGVuZ3RoIC0gMV0ubmV4dFNpYmxpbmc7XG4gICAgICB9XG5cbiAgICAgIF90aGlzLmNvbnRhaW5lci5pbnNlcnRCZWZvcmUodGFnLCBiZWZvcmUpO1xuXG4gICAgICBfdGhpcy50YWdzLnB1c2godGFnKTtcbiAgICB9O1xuXG4gICAgdGhpcy5pc1NwZWVkeSA9IG9wdGlvbnMuc3BlZWR5ID09PSB1bmRlZmluZWQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nIDogb3B0aW9ucy5zcGVlZHk7XG4gICAgdGhpcy50YWdzID0gW107XG4gICAgdGhpcy5jdHIgPSAwO1xuICAgIHRoaXMubm9uY2UgPSBvcHRpb25zLm5vbmNlOyAvLyBrZXkgaXMgdGhlIHZhbHVlIG9mIHRoZSBkYXRhLWVtb3Rpb24gYXR0cmlidXRlLCBpdCdzIHVzZWQgdG8gaWRlbnRpZnkgZGlmZmVyZW50IHNoZWV0c1xuXG4gICAgdGhpcy5rZXkgPSBvcHRpb25zLmtleTtcbiAgICB0aGlzLmNvbnRhaW5lciA9IG9wdGlvbnMuY29udGFpbmVyO1xuICAgIHRoaXMucHJlcGVuZCA9IG9wdGlvbnMucHJlcGVuZDtcbiAgICB0aGlzLmluc2VydGlvblBvaW50ID0gb3B0aW9ucy5pbnNlcnRpb25Qb2ludDtcbiAgICB0aGlzLmJlZm9yZSA9IG51bGw7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gU3R5bGVTaGVldC5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmh5ZHJhdGUgPSBmdW5jdGlvbiBoeWRyYXRlKG5vZGVzKSB7XG4gICAgbm9kZXMuZm9yRWFjaCh0aGlzLl9pbnNlcnRUYWcpO1xuICB9O1xuXG4gIF9wcm90by5pbnNlcnQgPSBmdW5jdGlvbiBpbnNlcnQocnVsZSkge1xuICAgIC8vIHRoZSBtYXggbGVuZ3RoIGlzIGhvdyBtYW55IHJ1bGVzIHdlIGhhdmUgcGVyIHN0eWxlIHRhZywgaXQncyA2NTAwMCBpbiBzcGVlZHkgbW9kZVxuICAgIC8vIGl0J3MgMSBpbiBkZXYgYmVjYXVzZSB3ZSBpbnNlcnQgc291cmNlIG1hcHMgdGhhdCBtYXAgYSBzaW5nbGUgcnVsZSB0byBhIGxvY2F0aW9uXG4gICAgLy8gYW5kIHlvdSBjYW4gb25seSBoYXZlIG9uZSBzb3VyY2UgbWFwIHBlciBzdHlsZSB0YWdcbiAgICBpZiAodGhpcy5jdHIgJSAodGhpcy5pc1NwZWVkeSA/IDY1MDAwIDogMSkgPT09IDApIHtcbiAgICAgIHRoaXMuX2luc2VydFRhZyhjcmVhdGVTdHlsZUVsZW1lbnQodGhpcykpO1xuICAgIH1cblxuICAgIHZhciB0YWcgPSB0aGlzLnRhZ3NbdGhpcy50YWdzLmxlbmd0aCAtIDFdO1xuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIHZhciBpc0ltcG9ydFJ1bGUgPSBydWxlLmNoYXJDb2RlQXQoMCkgPT09IDY0ICYmIHJ1bGUuY2hhckNvZGVBdCgxKSA9PT0gMTA1O1xuXG4gICAgICBpZiAoaXNJbXBvcnRSdWxlICYmIHRoaXMuX2FscmVhZHlJbnNlcnRlZE9yZGVySW5zZW5zaXRpdmVSdWxlKSB7XG4gICAgICAgIC8vIHRoaXMgd291bGQgb25seSBjYXVzZSBwcm9ibGVtIGluIHNwZWVkeSBtb2RlXG4gICAgICAgIC8vIGJ1dCB3ZSBkb24ndCB3YW50IGVuYWJsaW5nIHNwZWVkeSB0byBhZmZlY3QgdGhlIG9ic2VydmFibGUgYmVoYXZpb3JcbiAgICAgICAgLy8gc28gd2UgcmVwb3J0IHRoaXMgZXJyb3IgYXQgYWxsIHRpbWVzXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJZb3UncmUgYXR0ZW1wdGluZyB0byBpbnNlcnQgdGhlIGZvbGxvd2luZyBydWxlOlxcblwiICsgcnVsZSArICdcXG5cXG5gQGltcG9ydGAgcnVsZXMgbXVzdCBiZSBiZWZvcmUgYWxsIG90aGVyIHR5cGVzIG9mIHJ1bGVzIGluIGEgc3R5bGVzaGVldCBidXQgb3RoZXIgcnVsZXMgaGF2ZSBhbHJlYWR5IGJlZW4gaW5zZXJ0ZWQuIFBsZWFzZSBlbnN1cmUgdGhhdCBgQGltcG9ydGAgcnVsZXMgYXJlIGJlZm9yZSBhbGwgb3RoZXIgcnVsZXMuJyk7XG4gICAgICB9XG4gICAgICB0aGlzLl9hbHJlYWR5SW5zZXJ0ZWRPcmRlckluc2Vuc2l0aXZlUnVsZSA9IHRoaXMuX2FscmVhZHlJbnNlcnRlZE9yZGVySW5zZW5zaXRpdmVSdWxlIHx8ICFpc0ltcG9ydFJ1bGU7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuaXNTcGVlZHkpIHtcbiAgICAgIHZhciBzaGVldCA9IHNoZWV0Rm9yVGFnKHRhZyk7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIHRoaXMgaXMgdGhlIHVsdHJhZmFzdCB2ZXJzaW9uLCB3b3JrcyBhY3Jvc3MgYnJvd3NlcnNcbiAgICAgICAgLy8gdGhlIGJpZyBkcmF3YmFjayBpcyB0aGF0IHRoZSBjc3Mgd29uJ3QgYmUgZWRpdGFibGUgaW4gZGV2dG9vbHNcbiAgICAgICAgc2hlZXQuaW5zZXJ0UnVsZShydWxlLCBzaGVldC5jc3NSdWxlcy5sZW5ndGgpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiAhLzooLW1vei1wbGFjZWhvbGRlcnwtbW96LWZvY3VzLWlubmVyfC1tb3otZm9jdXNyaW5nfC1tcy1pbnB1dC1wbGFjZWhvbGRlcnwtbW96LXJlYWQtd3JpdGV8LW1vei1yZWFkLW9ubHl8LW1zLWNsZWFyKXsvLnRlc3QocnVsZSkpIHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKFwiVGhlcmUgd2FzIGEgcHJvYmxlbSBpbnNlcnRpbmcgdGhlIGZvbGxvd2luZyBydWxlOiBcXFwiXCIgKyBydWxlICsgXCJcXFwiXCIsIGUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHRhZy5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShydWxlKSk7XG4gICAgfVxuXG4gICAgdGhpcy5jdHIrKztcbiAgfTtcblxuICBfcHJvdG8uZmx1c2ggPSBmdW5jdGlvbiBmbHVzaCgpIHtcbiAgICAvLyAkRmxvd0ZpeE1lXG4gICAgdGhpcy50YWdzLmZvckVhY2goZnVuY3Rpb24gKHRhZykge1xuICAgICAgcmV0dXJuIHRhZy5wYXJlbnROb2RlICYmIHRhZy5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRhZyk7XG4gICAgfSk7XG4gICAgdGhpcy50YWdzID0gW107XG4gICAgdGhpcy5jdHIgPSAwO1xuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIHRoaXMuX2FscmVhZHlJbnNlcnRlZE9yZGVySW5zZW5zaXRpdmVSdWxlID0gZmFsc2U7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBTdHlsZVNoZWV0O1xufSgpO1xuXG5leHBvcnQgeyBTdHlsZVNoZWV0IH07XG4iLCJ2YXIgZT1cIi1tcy1cIjt2YXIgcj1cIi1tb3otXCI7dmFyIGE9XCItd2Via2l0LVwiO3ZhciBjPVwiY29tbVwiO3ZhciBuPVwicnVsZVwiO3ZhciB0PVwiZGVjbFwiO3ZhciBzPVwiQHBhZ2VcIjt2YXIgdT1cIkBtZWRpYVwiO3ZhciBpPVwiQGltcG9ydFwiO3ZhciBmPVwiQGNoYXJzZXRcIjt2YXIgbz1cIkB2aWV3cG9ydFwiO3ZhciBsPVwiQHN1cHBvcnRzXCI7dmFyIHY9XCJAZG9jdW1lbnRcIjt2YXIgaD1cIkBuYW1lc3BhY2VcIjt2YXIgcD1cIkBrZXlmcmFtZXNcIjt2YXIgYj1cIkBmb250LWZhY2VcIjt2YXIgdz1cIkBjb3VudGVyLXN0eWxlXCI7dmFyICQ9XCJAZm9udC1mZWF0dXJlLXZhbHVlc1wiO3ZhciBrPU1hdGguYWJzO3ZhciBkPVN0cmluZy5mcm9tQ2hhckNvZGU7dmFyIGc9T2JqZWN0LmFzc2lnbjtmdW5jdGlvbiBtKGUscil7cmV0dXJuKCgocjw8Ml56KGUsMCkpPDwyXnooZSwxKSk8PDJeeihlLDIpKTw8Ml56KGUsMyl9ZnVuY3Rpb24geChlKXtyZXR1cm4gZS50cmltKCl9ZnVuY3Rpb24geShlLHIpe3JldHVybihlPXIuZXhlYyhlKSk/ZVswXTplfWZ1bmN0aW9uIGooZSxyLGEpe3JldHVybiBlLnJlcGxhY2UocixhKX1mdW5jdGlvbiBDKGUscil7cmV0dXJuIGUuaW5kZXhPZihyKX1mdW5jdGlvbiB6KGUscil7cmV0dXJuIGUuY2hhckNvZGVBdChyKXwwfWZ1bmN0aW9uIEEoZSxyLGEpe3JldHVybiBlLnNsaWNlKHIsYSl9ZnVuY3Rpb24gTyhlKXtyZXR1cm4gZS5sZW5ndGh9ZnVuY3Rpb24gTShlKXtyZXR1cm4gZS5sZW5ndGh9ZnVuY3Rpb24gUyhlLHIpe3JldHVybiByLnB1c2goZSksZX1mdW5jdGlvbiBxKGUscil7cmV0dXJuIGUubWFwKHIpLmpvaW4oXCJcIil9dmFyIEI9MTt2YXIgRD0xO3ZhciBFPTA7dmFyIEY9MDt2YXIgRz0wO3ZhciBIPVwiXCI7ZnVuY3Rpb24gSShlLHIsYSxjLG4sdCxzKXtyZXR1cm57dmFsdWU6ZSxyb290OnIscGFyZW50OmEsdHlwZTpjLHByb3BzOm4sY2hpbGRyZW46dCxsaW5lOkIsY29sdW1uOkQsbGVuZ3RoOnMscmV0dXJuOlwiXCJ9fWZ1bmN0aW9uIEooZSxyKXtyZXR1cm4gZyhJKFwiXCIsbnVsbCxudWxsLFwiXCIsbnVsbCxudWxsLDApLGUse2xlbmd0aDotZS5sZW5ndGh9LHIpfWZ1bmN0aW9uIEsoKXtyZXR1cm4gR31mdW5jdGlvbiBMKCl7Rz1GPjA/eihILC0tRik6MDtpZihELS0sRz09PTEwKUQ9MSxCLS07cmV0dXJuIEd9ZnVuY3Rpb24gTigpe0c9RjxFP3ooSCxGKyspOjA7aWYoRCsrLEc9PT0xMClEPTEsQisrO3JldHVybiBHfWZ1bmN0aW9uIFAoKXtyZXR1cm4geihILEYpfWZ1bmN0aW9uIFEoKXtyZXR1cm4gRn1mdW5jdGlvbiBSKGUscil7cmV0dXJuIEEoSCxlLHIpfWZ1bmN0aW9uIFQoZSl7c3dpdGNoKGUpe2Nhc2UgMDpjYXNlIDk6Y2FzZSAxMDpjYXNlIDEzOmNhc2UgMzI6cmV0dXJuIDU7Y2FzZSAzMzpjYXNlIDQzOmNhc2UgNDQ6Y2FzZSA0NzpjYXNlIDYyOmNhc2UgNjQ6Y2FzZSAxMjY6Y2FzZSA1OTpjYXNlIDEyMzpjYXNlIDEyNTpyZXR1cm4gNDtjYXNlIDU4OnJldHVybiAzO2Nhc2UgMzQ6Y2FzZSAzOTpjYXNlIDQwOmNhc2UgOTE6cmV0dXJuIDI7Y2FzZSA0MTpjYXNlIDkzOnJldHVybiAxfXJldHVybiAwfWZ1bmN0aW9uIFUoZSl7cmV0dXJuIEI9RD0xLEU9TyhIPWUpLEY9MCxbXX1mdW5jdGlvbiBWKGUpe3JldHVybiBIPVwiXCIsZX1mdW5jdGlvbiBXKGUpe3JldHVybiB4KFIoRi0xLGVlKGU9PT05MT9lKzI6ZT09PTQwP2UrMTplKSkpfWZ1bmN0aW9uIFgoZSl7cmV0dXJuIFYoWihVKGUpKSl9ZnVuY3Rpb24gWShlKXt3aGlsZShHPVAoKSlpZihHPDMzKU4oKTtlbHNlIGJyZWFrO3JldHVybiBUKGUpPjJ8fFQoRyk+Mz9cIlwiOlwiIFwifWZ1bmN0aW9uIFooZSl7d2hpbGUoTigpKXN3aXRjaChUKEcpKXtjYXNlIDA6UyhhZShGLTEpLGUpO2JyZWFrO2Nhc2UgMjpTKFcoRyksZSk7YnJlYWs7ZGVmYXVsdDpTKGQoRyksZSl9cmV0dXJuIGV9ZnVuY3Rpb24gXyhlLHIpe3doaWxlKC0tciYmTigpKWlmKEc8NDh8fEc+MTAyfHxHPjU3JiZHPDY1fHxHPjcwJiZHPDk3KWJyZWFrO3JldHVybiBSKGUsUSgpKyhyPDYmJlAoKT09MzImJk4oKT09MzIpKX1mdW5jdGlvbiBlZShlKXt3aGlsZShOKCkpc3dpdGNoKEcpe2Nhc2UgZTpyZXR1cm4gRjtjYXNlIDM0OmNhc2UgMzk6aWYoZSE9PTM0JiZlIT09MzkpZWUoRyk7YnJlYWs7Y2FzZSA0MDppZihlPT09NDEpZWUoZSk7YnJlYWs7Y2FzZSA5MjpOKCk7YnJlYWt9cmV0dXJuIEZ9ZnVuY3Rpb24gcmUoZSxyKXt3aGlsZShOKCkpaWYoZStHPT09NDcrMTApYnJlYWs7ZWxzZSBpZihlK0c9PT00Mis0MiYmUCgpPT09NDcpYnJlYWs7cmV0dXJuXCIvKlwiK1IocixGLTEpK1wiKlwiK2QoZT09PTQ3P2U6TigpKX1mdW5jdGlvbiBhZShlKXt3aGlsZSghVChQKCkpKU4oKTtyZXR1cm4gUihlLEYpfWZ1bmN0aW9uIGNlKGUpe3JldHVybiBWKG5lKFwiXCIsbnVsbCxudWxsLG51bGwsW1wiXCJdLGU9VShlKSwwLFswXSxlKSl9ZnVuY3Rpb24gbmUoZSxyLGEsYyxuLHQscyx1LGkpe3ZhciBmPTA7dmFyIG89MDt2YXIgbD1zO3ZhciB2PTA7dmFyIGg9MDt2YXIgcD0wO3ZhciBiPTE7dmFyIHc9MTt2YXIgJD0xO3ZhciBrPTA7dmFyIGc9XCJcIjt2YXIgbT1uO3ZhciB4PXQ7dmFyIHk9Yzt2YXIgej1nO3doaWxlKHcpc3dpdGNoKHA9ayxrPU4oKSl7Y2FzZSA0MDppZihwIT0xMDgmJnouY2hhckNvZGVBdChsLTEpPT01OCl7aWYoQyh6Kz1qKFcoayksXCImXCIsXCImXFxmXCIpLFwiJlxcZlwiKSE9LTEpJD0tMTticmVha31jYXNlIDM0OmNhc2UgMzk6Y2FzZSA5MTp6Kz1XKGspO2JyZWFrO2Nhc2UgOTpjYXNlIDEwOmNhc2UgMTM6Y2FzZSAzMjp6Kz1ZKHApO2JyZWFrO2Nhc2UgOTI6eis9XyhRKCktMSw3KTtjb250aW51ZTtjYXNlIDQ3OnN3aXRjaChQKCkpe2Nhc2UgNDI6Y2FzZSA0NzpTKHNlKHJlKE4oKSxRKCkpLHIsYSksaSk7YnJlYWs7ZGVmYXVsdDp6Kz1cIi9cIn1icmVhaztjYXNlIDEyMypiOnVbZisrXT1PKHopKiQ7Y2FzZSAxMjUqYjpjYXNlIDU5OmNhc2UgMDpzd2l0Y2goayl7Y2FzZSAwOmNhc2UgMTI1Onc9MDtjYXNlIDU5K286aWYoaD4wJiZPKHopLWwpUyhoPjMyP3VlKHorXCI7XCIsYyxhLGwtMSk6dWUoaih6LFwiIFwiLFwiXCIpK1wiO1wiLGMsYSxsLTIpLGkpO2JyZWFrO2Nhc2UgNTk6eis9XCI7XCI7ZGVmYXVsdDpTKHk9dGUoeixyLGEsZixvLG4sdSxnLG09W10seD1bXSxsKSx0KTtpZihrPT09MTIzKWlmKG89PT0wKW5lKHoscix5LHksbSx0LGwsdSx4KTtlbHNlIHN3aXRjaCh2KXtjYXNlIDEwMDpjYXNlIDEwOTpjYXNlIDExNTpuZShlLHkseSxjJiZTKHRlKGUseSx5LDAsMCxuLHUsZyxuLG09W10sbCkseCksbix4LGwsdSxjP206eCk7YnJlYWs7ZGVmYXVsdDpuZSh6LHkseSx5LFtcIlwiXSx4LDAsdSx4KX19Zj1vPWg9MCxiPSQ9MSxnPXo9XCJcIixsPXM7YnJlYWs7Y2FzZSA1ODpsPTErTyh6KSxoPXA7ZGVmYXVsdDppZihiPDEpaWYoaz09MTIzKS0tYjtlbHNlIGlmKGs9PTEyNSYmYisrPT0wJiZMKCk9PTEyNSljb250aW51ZTtzd2l0Y2goeis9ZChrKSxrKmIpe2Nhc2UgMzg6JD1vPjA/MTooeis9XCJcXGZcIiwtMSk7YnJlYWs7Y2FzZSA0NDp1W2YrK109KE8oeiktMSkqJCwkPTE7YnJlYWs7Y2FzZSA2NDppZihQKCk9PT00NSl6Kz1XKE4oKSk7dj1QKCksbz1sPU8oZz16Kz1hZShRKCkpKSxrKys7YnJlYWs7Y2FzZSA0NTppZihwPT09NDUmJk8oeik9PTIpYj0wfX1yZXR1cm4gdH1mdW5jdGlvbiB0ZShlLHIsYSxjLHQscyx1LGksZixvLGwpe3ZhciB2PXQtMTt2YXIgaD10PT09MD9zOltcIlwiXTt2YXIgcD1NKGgpO2Zvcih2YXIgYj0wLHc9MCwkPTA7YjxjOysrYilmb3IodmFyIGQ9MCxnPUEoZSx2KzEsdj1rKHc9dVtiXSkpLG09ZTtkPHA7KytkKWlmKG09eCh3PjA/aFtkXStcIiBcIitnOmooZywvJlxcZi9nLGhbZF0pKSlmWyQrK109bTtyZXR1cm4gSShlLHIsYSx0PT09MD9uOmksZixvLGwpfWZ1bmN0aW9uIHNlKGUscixhKXtyZXR1cm4gSShlLHIsYSxjLGQoSygpKSxBKGUsMiwtMiksMCl9ZnVuY3Rpb24gdWUoZSxyLGEsYyl7cmV0dXJuIEkoZSxyLGEsdCxBKGUsMCxjKSxBKGUsYysxLC0xKSxjKX1mdW5jdGlvbiBpZShjLG4pe3N3aXRjaChtKGMsbikpe2Nhc2UgNTEwMzpyZXR1cm4gYStcInByaW50LVwiK2MrYztjYXNlIDU3Mzc6Y2FzZSA0MjAxOmNhc2UgMzE3NzpjYXNlIDM0MzM6Y2FzZSAxNjQxOmNhc2UgNDQ1NzpjYXNlIDI5MjE6Y2FzZSA1NTcyOmNhc2UgNjM1NjpjYXNlIDU4NDQ6Y2FzZSAzMTkxOmNhc2UgNjY0NTpjYXNlIDMwMDU6Y2FzZSA2MzkxOmNhc2UgNTg3OTpjYXNlIDU2MjM6Y2FzZSA2MTM1OmNhc2UgNDU5OTpjYXNlIDQ4NTU6Y2FzZSA0MjE1OmNhc2UgNjM4OTpjYXNlIDUxMDk6Y2FzZSA1MzY1OmNhc2UgNTYyMTpjYXNlIDM4Mjk6cmV0dXJuIGErYytjO2Nhc2UgNTM0OTpjYXNlIDQyNDY6Y2FzZSA0ODEwOmNhc2UgNjk2ODpjYXNlIDI3NTY6cmV0dXJuIGErYytyK2MrZStjK2M7Y2FzZSA2ODI4OmNhc2UgNDI2ODpyZXR1cm4gYStjK2UrYytjO2Nhc2UgNjE2NTpyZXR1cm4gYStjK2UrXCJmbGV4LVwiK2MrYztjYXNlIDUxODc6cmV0dXJuIGErYytqKGMsLyhcXHcrKS4rKDpbXl0rKS8sYStcImJveC0kMSQyXCIrZStcImZsZXgtJDEkMlwiKStjO2Nhc2UgNTQ0MzpyZXR1cm4gYStjK2UrXCJmbGV4LWl0ZW0tXCIraihjLC9mbGV4LXwtc2VsZi8sXCJcIikrYztjYXNlIDQ2NzU6cmV0dXJuIGErYytlK1wiZmxleC1saW5lLXBhY2tcIitqKGMsL2FsaWduLWNvbnRlbnR8ZmxleC18LXNlbGYvLFwiXCIpK2M7Y2FzZSA1NTQ4OnJldHVybiBhK2MrZStqKGMsXCJzaHJpbmtcIixcIm5lZ2F0aXZlXCIpK2M7Y2FzZSA1MjkyOnJldHVybiBhK2MrZStqKGMsXCJiYXNpc1wiLFwicHJlZmVycmVkLXNpemVcIikrYztjYXNlIDYwNjA6cmV0dXJuIGErXCJib3gtXCIraihjLFwiLWdyb3dcIixcIlwiKSthK2MrZStqKGMsXCJncm93XCIsXCJwb3NpdGl2ZVwiKStjO2Nhc2UgNDU1NDpyZXR1cm4gYStqKGMsLyhbXi1dKSh0cmFuc2Zvcm0pL2csXCIkMVwiK2ErXCIkMlwiKStjO2Nhc2UgNjE4NzpyZXR1cm4gaihqKGooYywvKHpvb20tfGdyYWIpLyxhK1wiJDFcIiksLyhpbWFnZS1zZXQpLyxhK1wiJDFcIiksYyxcIlwiKStjO2Nhc2UgNTQ5NTpjYXNlIDM5NTk6cmV0dXJuIGooYywvKGltYWdlLXNldFxcKFteXSopLyxhK1wiJDFcIitcIiRgJDFcIik7Y2FzZSA0OTY4OnJldHVybiBqKGooYywvKC4rOikoZmxleC0pPyguKikvLGErXCJib3gtcGFjazokM1wiK2UrXCJmbGV4LXBhY2s6JDNcIiksL3MuKy1iW147XSsvLFwianVzdGlmeVwiKSthK2MrYztjYXNlIDQwOTU6Y2FzZSAzNTgzOmNhc2UgNDA2ODpjYXNlIDI1MzI6cmV0dXJuIGooYywvKC4rKS1pbmxpbmUoLispLyxhK1wiJDEkMlwiKStjO2Nhc2UgODExNjpjYXNlIDcwNTk6Y2FzZSA1NzUzOmNhc2UgNTUzNTpjYXNlIDU0NDU6Y2FzZSA1NzAxOmNhc2UgNDkzMzpjYXNlIDQ2Nzc6Y2FzZSA1NTMzOmNhc2UgNTc4OTpjYXNlIDUwMjE6Y2FzZSA0NzY1OmlmKE8oYyktMS1uPjYpc3dpdGNoKHooYyxuKzEpKXtjYXNlIDEwOTppZih6KGMsbis0KSE9PTQ1KWJyZWFrO2Nhc2UgMTAyOnJldHVybiBqKGMsLyguKzopKC4rKS0oW15dKykvLFwiJDFcIithK1wiJDItJDNcIitcIiQxXCIrcisoeihjLG4rMyk9PTEwOD9cIiQzXCI6XCIkMi0kM1wiKSkrYztjYXNlIDExNTpyZXR1cm5+QyhjLFwic3RyZXRjaFwiKT9pZShqKGMsXCJzdHJldGNoXCIsXCJmaWxsLWF2YWlsYWJsZVwiKSxuKStjOmN9YnJlYWs7Y2FzZSA0OTQ5OmlmKHooYyxuKzEpIT09MTE1KWJyZWFrO2Nhc2UgNjQ0NDpzd2l0Y2goeihjLE8oYyktMy0ofkMoYyxcIiFpbXBvcnRhbnRcIikmJjEwKSkpe2Nhc2UgMTA3OnJldHVybiBqKGMsXCI6XCIsXCI6XCIrYSkrYztjYXNlIDEwMTpyZXR1cm4gaihjLC8oLis6KShbXjshXSspKDt8IS4rKT8vLFwiJDFcIithKyh6KGMsMTQpPT09NDU/XCJpbmxpbmUtXCI6XCJcIikrXCJib3gkM1wiK1wiJDFcIithK1wiJDIkM1wiK1wiJDFcIitlK1wiJDJib3gkM1wiKStjfWJyZWFrO2Nhc2UgNTkzNjpzd2l0Y2goeihjLG4rMTEpKXtjYXNlIDExNDpyZXR1cm4gYStjK2UraihjLC9bc3ZoXVxcdystW3RibHJdezJ9LyxcInRiXCIpK2M7Y2FzZSAxMDg6cmV0dXJuIGErYytlK2ooYywvW3N2aF1cXHcrLVt0YmxyXXsyfS8sXCJ0Yi1ybFwiKStjO2Nhc2UgNDU6cmV0dXJuIGErYytlK2ooYywvW3N2aF1cXHcrLVt0YmxyXXsyfS8sXCJsclwiKStjfXJldHVybiBhK2MrZStjK2N9cmV0dXJuIGN9ZnVuY3Rpb24gZmUoZSxyKXt2YXIgYT1cIlwiO3ZhciBjPU0oZSk7Zm9yKHZhciBuPTA7bjxjO24rKylhKz1yKGVbbl0sbixlLHIpfHxcIlwiO3JldHVybiBhfWZ1bmN0aW9uIG9lKGUscixhLHMpe3N3aXRjaChlLnR5cGUpe2Nhc2UgaTpjYXNlIHQ6cmV0dXJuIGUucmV0dXJuPWUucmV0dXJufHxlLnZhbHVlO2Nhc2UgYzpyZXR1cm5cIlwiO2Nhc2UgcDpyZXR1cm4gZS5yZXR1cm49ZS52YWx1ZStcIntcIitmZShlLmNoaWxkcmVuLHMpK1wifVwiO2Nhc2UgbjplLnZhbHVlPWUucHJvcHMuam9pbihcIixcIil9cmV0dXJuIE8oYT1mZShlLmNoaWxkcmVuLHMpKT9lLnJldHVybj1lLnZhbHVlK1wie1wiK2ErXCJ9XCI6XCJcIn1mdW5jdGlvbiBsZShlKXt2YXIgcj1NKGUpO3JldHVybiBmdW5jdGlvbihhLGMsbix0KXt2YXIgcz1cIlwiO2Zvcih2YXIgdT0wO3U8cjt1Kyspcys9ZVt1XShhLGMsbix0KXx8XCJcIjtyZXR1cm4gc319ZnVuY3Rpb24gdmUoZSl7cmV0dXJuIGZ1bmN0aW9uKHIpe2lmKCFyLnJvb3QpaWYocj1yLnJldHVybillKHIpfX1mdW5jdGlvbiBoZShjLHMsdSxpKXtpZihjLmxlbmd0aD4tMSlpZighYy5yZXR1cm4pc3dpdGNoKGMudHlwZSl7Y2FzZSB0OmMucmV0dXJuPWllKGMudmFsdWUsYy5sZW5ndGgpO2JyZWFrO2Nhc2UgcDpyZXR1cm4gZmUoW0ooYyx7dmFsdWU6aihjLnZhbHVlLFwiQFwiLFwiQFwiK2EpfSldLGkpO2Nhc2UgbjppZihjLmxlbmd0aClyZXR1cm4gcShjLnByb3BzLChmdW5jdGlvbihuKXtzd2l0Y2goeShuLC8oOjpwbGFjXFx3K3w6cmVhZC1cXHcrKS8pKXtjYXNlXCI6cmVhZC1vbmx5XCI6Y2FzZVwiOnJlYWQtd3JpdGVcIjpyZXR1cm4gZmUoW0ooYyx7cHJvcHM6W2oobiwvOihyZWFkLVxcdyspLyxcIjpcIityK1wiJDFcIildfSldLGkpO2Nhc2VcIjo6cGxhY2Vob2xkZXJcIjpyZXR1cm4gZmUoW0ooYyx7cHJvcHM6W2oobiwvOihwbGFjXFx3KykvLFwiOlwiK2ErXCJpbnB1dC0kMVwiKV19KSxKKGMse3Byb3BzOltqKG4sLzoocGxhY1xcdyspLyxcIjpcIityK1wiJDFcIildfSksSihjLHtwcm9wczpbaihuLC86KHBsYWNcXHcrKS8sZStcImlucHV0LSQxXCIpXX0pXSxpKX1yZXR1cm5cIlwifSkpfX1mdW5jdGlvbiBwZShlKXtzd2l0Y2goZS50eXBlKXtjYXNlIG46ZS5wcm9wcz1lLnByb3BzLm1hcCgoZnVuY3Rpb24ocil7cmV0dXJuIHEoWChyKSwoZnVuY3Rpb24ocixhLGMpe3N3aXRjaCh6KHIsMCkpe2Nhc2UgMTI6cmV0dXJuIEEociwxLE8ocikpO2Nhc2UgMDpjYXNlIDQwOmNhc2UgNDM6Y2FzZSA2MjpjYXNlIDEyNjpyZXR1cm4gcjtjYXNlIDU4OmlmKGNbKythXT09PVwiZ2xvYmFsXCIpY1thXT1cIlwiLGNbKythXT1cIlxcZlwiK0EoY1thXSxhPTEsLTEpO2Nhc2UgMzI6cmV0dXJuIGE9PT0xP1wiXCI6cjtkZWZhdWx0OnN3aXRjaChhKXtjYXNlIDA6ZT1yO3JldHVybiBNKGMpPjE/XCJcIjpyO2Nhc2UgYT1NKGMpLTE6Y2FzZSAyOnJldHVybiBhPT09Mj9yK2UrZTpyK2U7ZGVmYXVsdDpyZXR1cm4gcn19fSkpfSkpfX1leHBvcnR7ZiBhcyBDSEFSU0VULGMgYXMgQ09NTUVOVCx3IGFzIENPVU5URVJfU1RZTEUsdCBhcyBERUNMQVJBVElPTix2IGFzIERPQ1VNRU5ULGIgYXMgRk9OVF9GQUNFLCQgYXMgRk9OVF9GRUFUVVJFX1ZBTFVFUyxpIGFzIElNUE9SVCxwIGFzIEtFWUZSQU1FUyx1IGFzIE1FRElBLHIgYXMgTU9aLGUgYXMgTVMsaCBhcyBOQU1FU1BBQ0UscyBhcyBQQUdFLG4gYXMgUlVMRVNFVCxsIGFzIFNVUFBPUlRTLG8gYXMgVklFV1BPUlQsYSBhcyBXRUJLSVQsayBhcyBhYnMsVSBhcyBhbGxvYyxTIGFzIGFwcGVuZCxnIGFzIGFzc2lnbixRIGFzIGNhcmV0LEsgYXMgY2hhcixHIGFzIGNoYXJhY3RlcixIIGFzIGNoYXJhY3RlcnMseiBhcyBjaGFyYXQsRCBhcyBjb2x1bW4scSBhcyBjb21iaW5lLHNlIGFzIGNvbW1lbnQscmUgYXMgY29tbWVudGVyLGNlIGFzIGNvbXBpbGUsSiBhcyBjb3B5LFYgYXMgZGVhbGxvYyx1ZSBhcyBkZWNsYXJhdGlvbixXIGFzIGRlbGltaXQsZWUgYXMgZGVsaW1pdGVyLF8gYXMgZXNjYXBpbmcsZCBhcyBmcm9tLG0gYXMgaGFzaCxhZSBhcyBpZGVudGlmaWVyLEMgYXMgaW5kZXhvZixFIGFzIGxlbmd0aCxCIGFzIGxpbmUseSBhcyBtYXRjaCxsZSBhcyBtaWRkbGV3YXJlLHBlIGFzIG5hbWVzcGFjZSxOIGFzIG5leHQsSSBhcyBub2RlLG5lIGFzIHBhcnNlLFAgYXMgcGVlayxGIGFzIHBvc2l0aW9uLGllIGFzIHByZWZpeCxoZSBhcyBwcmVmaXhlcixMIGFzIHByZXYsaiBhcyByZXBsYWNlLHRlIGFzIHJ1bGVzZXQsdmUgYXMgcnVsZXNoZWV0LGZlIGFzIHNlcmlhbGl6ZSxNIGFzIHNpemVvZixSIGFzIHNsaWNlLG9lIGFzIHN0cmluZ2lmeSxPIGFzIHN0cmxlbixBIGFzIHN1YnN0cixUIGFzIHRva2VuLFggYXMgdG9rZW5pemUsWiBhcyB0b2tlbml6ZXIseCBhcyB0cmltLFkgYXMgd2hpdGVzcGFjZX07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdHlsaXMubWpzLm1hcFxuIiwiaW1wb3J0IHsgU3R5bGVTaGVldCB9IGZyb20gJ0BlbW90aW9uL3NoZWV0JztcbmltcG9ydCB7IGRlYWxsb2MsIGFsbG9jLCBuZXh0LCB0b2tlbiwgZnJvbSwgcGVlaywgZGVsaW1pdCwgc2xpY2UsIHBvc2l0aW9uLCBzdHJpbmdpZnksIENPTU1FTlQsIHJ1bGVzaGVldCwgbWlkZGxld2FyZSwgcHJlZml4ZXIsIHNlcmlhbGl6ZSwgY29tcGlsZSB9IGZyb20gJ3N0eWxpcyc7XG5pbXBvcnQgJ0BlbW90aW9uL3dlYWstbWVtb2l6ZSc7XG5pbXBvcnQgJ0BlbW90aW9uL21lbW9pemUnO1xuXG52YXIgbGFzdCA9IGZ1bmN0aW9uIGxhc3QoYXJyKSB7XG4gIHJldHVybiBhcnIubGVuZ3RoID8gYXJyW2Fyci5sZW5ndGggLSAxXSA6IG51bGw7XG59OyAvLyBiYXNlZCBvbiBodHRwczovL2dpdGh1Yi5jb20vdGh5c3VsdGFuL3N0eWxpcy5qcy9ibG9iL2U2ODQzYzM3M2ViY2JiZmFkZTI1ZWJjYzIzZjU0MGVkODUwOGRhMGEvc3JjL1Rva2VuaXplci5qcyNMMjM5LUwyNDRcblxuXG52YXIgaWRlbnRpZmllcldpdGhQb2ludFRyYWNraW5nID0gZnVuY3Rpb24gaWRlbnRpZmllcldpdGhQb2ludFRyYWNraW5nKGJlZ2luLCBwb2ludHMsIGluZGV4KSB7XG4gIHZhciBwcmV2aW91cyA9IDA7XG4gIHZhciBjaGFyYWN0ZXIgPSAwO1xuXG4gIHdoaWxlICh0cnVlKSB7XG4gICAgcHJldmlvdXMgPSBjaGFyYWN0ZXI7XG4gICAgY2hhcmFjdGVyID0gcGVlaygpOyAvLyAmXFxmXG5cbiAgICBpZiAocHJldmlvdXMgPT09IDM4ICYmIGNoYXJhY3RlciA9PT0gMTIpIHtcbiAgICAgIHBvaW50c1tpbmRleF0gPSAxO1xuICAgIH1cblxuICAgIGlmICh0b2tlbihjaGFyYWN0ZXIpKSB7XG4gICAgICBicmVhaztcbiAgICB9XG5cbiAgICBuZXh0KCk7XG4gIH1cblxuICByZXR1cm4gc2xpY2UoYmVnaW4sIHBvc2l0aW9uKTtcbn07XG5cbnZhciB0b1J1bGVzID0gZnVuY3Rpb24gdG9SdWxlcyhwYXJzZWQsIHBvaW50cykge1xuICAvLyBwcmV0ZW5kIHdlJ3ZlIHN0YXJ0ZWQgd2l0aCBhIGNvbW1hXG4gIHZhciBpbmRleCA9IC0xO1xuICB2YXIgY2hhcmFjdGVyID0gNDQ7XG5cbiAgZG8ge1xuICAgIHN3aXRjaCAodG9rZW4oY2hhcmFjdGVyKSkge1xuICAgICAgY2FzZSAwOlxuICAgICAgICAvLyAmXFxmXG4gICAgICAgIGlmIChjaGFyYWN0ZXIgPT09IDM4ICYmIHBlZWsoKSA9PT0gMTIpIHtcbiAgICAgICAgICAvLyB0aGlzIGlzIG5vdCAxMDAlIGNvcnJlY3QsIHdlIGRvbid0IGFjY291bnQgZm9yIGxpdGVyYWwgc2VxdWVuY2VzIGhlcmUgLSBsaWtlIGZvciBleGFtcGxlIHF1b3RlZCBzdHJpbmdzXG4gICAgICAgICAgLy8gc3R5bGlzIGluc2VydHMgXFxmIGFmdGVyICYgdG8ga25vdyB3aGVuICYgd2hlcmUgaXQgc2hvdWxkIHJlcGxhY2UgdGhpcyBzZXF1ZW5jZSB3aXRoIHRoZSBjb250ZXh0IHNlbGVjdG9yXG4gICAgICAgICAgLy8gYW5kIHdoZW4gaXQgc2hvdWxkIGp1c3QgY29uY2F0ZW5hdGUgdGhlIG91dGVyIGFuZCBpbm5lciBzZWxlY3RvcnNcbiAgICAgICAgICAvLyBpdCdzIHZlcnkgdW5saWtlbHkgZm9yIHRoaXMgc2VxdWVuY2UgdG8gYWN0dWFsbHkgYXBwZWFyIGluIGEgZGlmZmVyZW50IGNvbnRleHQsIHNvIHdlIGp1c3QgbGV2ZXJhZ2UgdGhpcyBmYWN0IGhlcmVcbiAgICAgICAgICBwb2ludHNbaW5kZXhdID0gMTtcbiAgICAgICAgfVxuXG4gICAgICAgIHBhcnNlZFtpbmRleF0gKz0gaWRlbnRpZmllcldpdGhQb2ludFRyYWNraW5nKHBvc2l0aW9uIC0gMSwgcG9pbnRzLCBpbmRleCk7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIDI6XG4gICAgICAgIHBhcnNlZFtpbmRleF0gKz0gZGVsaW1pdChjaGFyYWN0ZXIpO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSA0OlxuICAgICAgICAvLyBjb21tYVxuICAgICAgICBpZiAoY2hhcmFjdGVyID09PSA0NCkge1xuICAgICAgICAgIC8vIGNvbG9uXG4gICAgICAgICAgcGFyc2VkWysraW5kZXhdID0gcGVlaygpID09PSA1OCA/ICcmXFxmJyA6ICcnO1xuICAgICAgICAgIHBvaW50c1tpbmRleF0gPSBwYXJzZWRbaW5kZXhdLmxlbmd0aDtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuXG4gICAgICAvLyBmYWxsdGhyb3VnaFxuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICBwYXJzZWRbaW5kZXhdICs9IGZyb20oY2hhcmFjdGVyKTtcbiAgICB9XG4gIH0gd2hpbGUgKGNoYXJhY3RlciA9IG5leHQoKSk7XG5cbiAgcmV0dXJuIHBhcnNlZDtcbn07XG5cbnZhciBnZXRSdWxlcyA9IGZ1bmN0aW9uIGdldFJ1bGVzKHZhbHVlLCBwb2ludHMpIHtcbiAgcmV0dXJuIGRlYWxsb2ModG9SdWxlcyhhbGxvYyh2YWx1ZSksIHBvaW50cykpO1xufTsgLy8gV2Vha1NldCB3b3VsZCBiZSBtb3JlIGFwcHJvcHJpYXRlLCBidXQgb25seSBXZWFrTWFwIGlzIHN1cHBvcnRlZCBpbiBJRTExXG5cblxudmFyIGZpeGVkRWxlbWVudHMgPSAvKiAjX19QVVJFX18gKi9uZXcgV2Vha01hcCgpO1xudmFyIGNvbXBhdCA9IGZ1bmN0aW9uIGNvbXBhdChlbGVtZW50KSB7XG4gIGlmIChlbGVtZW50LnR5cGUgIT09ICdydWxlJyB8fCAhZWxlbWVudC5wYXJlbnQgfHwgLy8gcG9zaXRpdmUgLmxlbmd0aCBpbmRpY2F0ZXMgdGhhdCB0aGlzIHJ1bGUgY29udGFpbnMgcHNldWRvXG4gIC8vIG5lZ2F0aXZlIC5sZW5ndGggaW5kaWNhdGVzIHRoYXQgdGhpcyBydWxlIGhhcyBiZWVuIGFscmVhZHkgcHJlZml4ZWRcbiAgZWxlbWVudC5sZW5ndGggPCAxKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIHZhbHVlID0gZWxlbWVudC52YWx1ZSxcbiAgICAgIHBhcmVudCA9IGVsZW1lbnQucGFyZW50O1xuICB2YXIgaXNJbXBsaWNpdFJ1bGUgPSBlbGVtZW50LmNvbHVtbiA9PT0gcGFyZW50LmNvbHVtbiAmJiBlbGVtZW50LmxpbmUgPT09IHBhcmVudC5saW5lO1xuXG4gIHdoaWxlIChwYXJlbnQudHlwZSAhPT0gJ3J1bGUnKSB7XG4gICAgcGFyZW50ID0gcGFyZW50LnBhcmVudDtcbiAgICBpZiAoIXBhcmVudCkgcmV0dXJuO1xuICB9IC8vIHNob3J0LWNpcmN1aXQgZm9yIHRoZSBzaW1wbGVzdCBjYXNlXG5cblxuICBpZiAoZWxlbWVudC5wcm9wcy5sZW5ndGggPT09IDEgJiYgdmFsdWUuY2hhckNvZGVBdCgwKSAhPT0gNThcbiAgLyogY29sb24gKi9cbiAgJiYgIWZpeGVkRWxlbWVudHMuZ2V0KHBhcmVudCkpIHtcbiAgICByZXR1cm47XG4gIH0gLy8gaWYgdGhpcyBpcyBhbiBpbXBsaWNpdGx5IGluc2VydGVkIHJ1bGUgKHRoZSBvbmUgZWFnZXJseSBpbnNlcnRlZCBhdCB0aGUgZWFjaCBuZXcgbmVzdGVkIGxldmVsKVxuICAvLyB0aGVuIHRoZSBwcm9wcyBoYXMgYWxyZWFkeSBiZWVuIG1hbmlwdWxhdGVkIGJlZm9yZWhhbmQgYXMgdGhleSB0aGF0IGFycmF5IGlzIHNoYXJlZCBiZXR3ZWVuIGl0IGFuZCBpdHMgXCJydWxlIHBhcmVudFwiXG5cblxuICBpZiAoaXNJbXBsaWNpdFJ1bGUpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBmaXhlZEVsZW1lbnRzLnNldChlbGVtZW50LCB0cnVlKTtcbiAgdmFyIHBvaW50cyA9IFtdO1xuICB2YXIgcnVsZXMgPSBnZXRSdWxlcyh2YWx1ZSwgcG9pbnRzKTtcbiAgdmFyIHBhcmVudFJ1bGVzID0gcGFyZW50LnByb3BzO1xuXG4gIGZvciAodmFyIGkgPSAwLCBrID0gMDsgaSA8IHJ1bGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgZm9yICh2YXIgaiA9IDA7IGogPCBwYXJlbnRSdWxlcy5sZW5ndGg7IGorKywgaysrKSB7XG4gICAgICBlbGVtZW50LnByb3BzW2tdID0gcG9pbnRzW2ldID8gcnVsZXNbaV0ucmVwbGFjZSgvJlxcZi9nLCBwYXJlbnRSdWxlc1tqXSkgOiBwYXJlbnRSdWxlc1tqXSArIFwiIFwiICsgcnVsZXNbaV07XG4gICAgfVxuICB9XG59O1xudmFyIHJlbW92ZUxhYmVsID0gZnVuY3Rpb24gcmVtb3ZlTGFiZWwoZWxlbWVudCkge1xuICBpZiAoZWxlbWVudC50eXBlID09PSAnZGVjbCcpIHtcbiAgICB2YXIgdmFsdWUgPSBlbGVtZW50LnZhbHVlO1xuXG4gICAgaWYgKCAvLyBjaGFyY29kZSBmb3IgbFxuICAgIHZhbHVlLmNoYXJDb2RlQXQoMCkgPT09IDEwOCAmJiAvLyBjaGFyY29kZSBmb3IgYlxuICAgIHZhbHVlLmNoYXJDb2RlQXQoMikgPT09IDk4KSB7XG4gICAgICAvLyB0aGlzIGlnbm9yZXMgbGFiZWxcbiAgICAgIGVsZW1lbnRbXCJyZXR1cm5cIl0gPSAnJztcbiAgICAgIGVsZW1lbnQudmFsdWUgPSAnJztcbiAgICB9XG4gIH1cbn07XG52YXIgaWdub3JlRmxhZyA9ICdlbW90aW9uLWRpc2FibGUtc2VydmVyLXJlbmRlcmluZy11bnNhZmUtc2VsZWN0b3Itd2FybmluZy1wbGVhc2UtZG8tbm90LXVzZS10aGlzLXRoZS13YXJuaW5nLWV4aXN0cy1mb3ItYS1yZWFzb24nO1xuXG52YXIgaXNJZ25vcmluZ0NvbW1lbnQgPSBmdW5jdGlvbiBpc0lnbm9yaW5nQ29tbWVudChlbGVtZW50KSB7XG4gIHJldHVybiAhIWVsZW1lbnQgJiYgZWxlbWVudC50eXBlID09PSAnY29tbScgJiYgZWxlbWVudC5jaGlsZHJlbi5pbmRleE9mKGlnbm9yZUZsYWcpID4gLTE7XG59O1xuXG52YXIgY3JlYXRlVW5zYWZlU2VsZWN0b3JzQWxhcm0gPSBmdW5jdGlvbiBjcmVhdGVVbnNhZmVTZWxlY3RvcnNBbGFybShjYWNoZSkge1xuICByZXR1cm4gZnVuY3Rpb24gKGVsZW1lbnQsIGluZGV4LCBjaGlsZHJlbikge1xuICAgIGlmIChlbGVtZW50LnR5cGUgIT09ICdydWxlJykgcmV0dXJuO1xuICAgIHZhciB1bnNhZmVQc2V1ZG9DbGFzc2VzID0gZWxlbWVudC52YWx1ZS5tYXRjaCgvKDpmaXJzdHw6bnRofDpudGgtbGFzdCktY2hpbGQvZyk7XG5cbiAgICBpZiAodW5zYWZlUHNldWRvQ2xhc3NlcyAmJiBjYWNoZS5jb21wYXQgIT09IHRydWUpIHtcbiAgICAgIHZhciBwcmV2RWxlbWVudCA9IGluZGV4ID4gMCA/IGNoaWxkcmVuW2luZGV4IC0gMV0gOiBudWxsO1xuXG4gICAgICBpZiAocHJldkVsZW1lbnQgJiYgaXNJZ25vcmluZ0NvbW1lbnQobGFzdChwcmV2RWxlbWVudC5jaGlsZHJlbikpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdW5zYWZlUHNldWRvQ2xhc3Nlcy5mb3JFYWNoKGZ1bmN0aW9uICh1bnNhZmVQc2V1ZG9DbGFzcykge1xuICAgICAgICBjb25zb2xlLmVycm9yKFwiVGhlIHBzZXVkbyBjbGFzcyBcXFwiXCIgKyB1bnNhZmVQc2V1ZG9DbGFzcyArIFwiXFxcIiBpcyBwb3RlbnRpYWxseSB1bnNhZmUgd2hlbiBkb2luZyBzZXJ2ZXItc2lkZSByZW5kZXJpbmcuIFRyeSBjaGFuZ2luZyBpdCB0byBcXFwiXCIgKyB1bnNhZmVQc2V1ZG9DbGFzcy5zcGxpdCgnLWNoaWxkJylbMF0gKyBcIi1vZi10eXBlXFxcIi5cIik7XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG59O1xuXG52YXIgaXNJbXBvcnRSdWxlID0gZnVuY3Rpb24gaXNJbXBvcnRSdWxlKGVsZW1lbnQpIHtcbiAgcmV0dXJuIGVsZW1lbnQudHlwZS5jaGFyQ29kZUF0KDEpID09PSAxMDUgJiYgZWxlbWVudC50eXBlLmNoYXJDb2RlQXQoMCkgPT09IDY0O1xufTtcblxudmFyIGlzUHJlcGVuZGVkV2l0aFJlZ3VsYXJSdWxlcyA9IGZ1bmN0aW9uIGlzUHJlcGVuZGVkV2l0aFJlZ3VsYXJSdWxlcyhpbmRleCwgY2hpbGRyZW4pIHtcbiAgZm9yICh2YXIgaSA9IGluZGV4IC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICBpZiAoIWlzSW1wb3J0UnVsZShjaGlsZHJlbltpXSkpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn07IC8vIHVzZSB0aGlzIHRvIHJlbW92ZSBpbmNvcnJlY3QgZWxlbWVudHMgZnJvbSBmdXJ0aGVyIHByb2Nlc3Npbmdcbi8vIHNvIHRoZXkgZG9uJ3QgZ2V0IGhhbmRlZCB0byB0aGUgYHNoZWV0YCAob3IgYW55dGhpbmcgZWxzZSlcbi8vIGFzIHRoYXQgY291bGQgcG90ZW50aWFsbHkgbGVhZCB0byBhZGRpdGlvbmFsIGxvZ3Mgd2hpY2ggaW4gdHVybiBjb3VsZCBiZSBvdmVyaGVsbWluZyB0byB0aGUgdXNlclxuXG5cbnZhciBudWxsaWZ5RWxlbWVudCA9IGZ1bmN0aW9uIG51bGxpZnlFbGVtZW50KGVsZW1lbnQpIHtcbiAgZWxlbWVudC50eXBlID0gJyc7XG4gIGVsZW1lbnQudmFsdWUgPSAnJztcbiAgZWxlbWVudFtcInJldHVyblwiXSA9ICcnO1xuICBlbGVtZW50LmNoaWxkcmVuID0gJyc7XG4gIGVsZW1lbnQucHJvcHMgPSAnJztcbn07XG5cbnZhciBpbmNvcnJlY3RJbXBvcnRBbGFybSA9IGZ1bmN0aW9uIGluY29ycmVjdEltcG9ydEFsYXJtKGVsZW1lbnQsIGluZGV4LCBjaGlsZHJlbikge1xuICBpZiAoIWlzSW1wb3J0UnVsZShlbGVtZW50KSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChlbGVtZW50LnBhcmVudCkge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJgQGltcG9ydGAgcnVsZXMgY2FuJ3QgYmUgbmVzdGVkIGluc2lkZSBvdGhlciBydWxlcy4gUGxlYXNlIG1vdmUgaXQgdG8gdGhlIHRvcCBsZXZlbCBhbmQgcHV0IGl0IGJlZm9yZSByZWd1bGFyIHJ1bGVzLiBLZWVwIGluIG1pbmQgdGhhdCB0aGV5IGNhbiBvbmx5IGJlIHVzZWQgd2l0aGluIGdsb2JhbCBzdHlsZXMuXCIpO1xuICAgIG51bGxpZnlFbGVtZW50KGVsZW1lbnQpO1xuICB9IGVsc2UgaWYgKGlzUHJlcGVuZGVkV2l0aFJlZ3VsYXJSdWxlcyhpbmRleCwgY2hpbGRyZW4pKSB7XG4gICAgY29uc29sZS5lcnJvcihcImBAaW1wb3J0YCBydWxlcyBjYW4ndCBiZSBhZnRlciBvdGhlciBydWxlcy4gUGxlYXNlIHB1dCB5b3VyIGBAaW1wb3J0YCBydWxlcyBiZWZvcmUgeW91ciBvdGhlciBydWxlcy5cIik7XG4gICAgbnVsbGlmeUVsZW1lbnQoZWxlbWVudCk7XG4gIH1cbn07XG5cbnZhciBkZWZhdWx0U3R5bGlzUGx1Z2lucyA9IFtwcmVmaXhlcl07XG5cbnZhciBjcmVhdGVDYWNoZSA9IGZ1bmN0aW9uIGNyZWF0ZUNhY2hlKG9wdGlvbnMpIHtcbiAgdmFyIGtleSA9IG9wdGlvbnMua2V5O1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmICFrZXkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJZb3UgaGF2ZSB0byBjb25maWd1cmUgYGtleWAgZm9yIHlvdXIgY2FjaGUuIFBsZWFzZSBtYWtlIHN1cmUgaXQncyB1bmlxdWUgKGFuZCBub3QgZXF1YWwgdG8gJ2NzcycpIGFzIGl0J3MgdXNlZCBmb3IgbGlua2luZyBzdHlsZXMgdG8geW91ciBjYWNoZS5cXG5cIiArIFwiSWYgbXVsdGlwbGUgY2FjaGVzIHNoYXJlIHRoZSBzYW1lIGtleSB0aGV5IG1pZ2h0IFxcXCJmaWdodFxcXCIgZm9yIGVhY2ggb3RoZXIncyBzdHlsZSBlbGVtZW50cy5cIik7XG4gIH1cblxuICBpZiAoIGtleSA9PT0gJ2NzcycpIHtcbiAgICB2YXIgc3NyU3R5bGVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcInN0eWxlW2RhdGEtZW1vdGlvbl06bm90KFtkYXRhLXNdKVwiKTsgLy8gZ2V0IFNTUmVkIHN0eWxlcyBvdXQgb2YgdGhlIHdheSBvZiBSZWFjdCdzIGh5ZHJhdGlvblxuICAgIC8vIGRvY3VtZW50LmhlYWQgaXMgYSBzYWZlIHBsYWNlIHRvIG1vdmUgdGhlbSB0byh0aG91Z2ggbm90ZSBkb2N1bWVudC5oZWFkIGlzIG5vdCBuZWNlc3NhcmlseSB0aGUgbGFzdCBwbGFjZSB0aGV5IHdpbGwgYmUpXG4gICAgLy8gbm90ZSB0aGlzIHZlcnkgdmVyeSBpbnRlbnRpb25hbGx5IHRhcmdldHMgYWxsIHN0eWxlIGVsZW1lbnRzIHJlZ2FyZGxlc3Mgb2YgdGhlIGtleSB0byBlbnN1cmVcbiAgICAvLyB0aGF0IGNyZWF0aW5nIGEgY2FjaGUgd29ya3MgaW5zaWRlIG9mIHJlbmRlciBvZiBhIFJlYWN0IGNvbXBvbmVudFxuXG4gICAgQXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbChzc3JTdHlsZXMsIGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAvLyB3ZSB3YW50IHRvIG9ubHkgbW92ZSBlbGVtZW50cyB3aGljaCBoYXZlIGEgc3BhY2UgaW4gdGhlIGRhdGEtZW1vdGlvbiBhdHRyaWJ1dGUgdmFsdWVcbiAgICAgIC8vIGJlY2F1c2UgdGhhdCBpbmRpY2F0ZXMgdGhhdCBpdCBpcyBhbiBFbW90aW9uIDExIHNlcnZlci1zaWRlIHJlbmRlcmVkIHN0eWxlIGVsZW1lbnRzXG4gICAgICAvLyB3aGlsZSB3ZSB3aWxsIGFscmVhZHkgaWdub3JlIEVtb3Rpb24gMTEgY2xpZW50LXNpZGUgaW5zZXJ0ZWQgc3R5bGVzIGJlY2F1c2Ugb2YgdGhlIDpub3QoW2RhdGEtc10pIHBhcnQgaW4gdGhlIHNlbGVjdG9yXG4gICAgICAvLyBFbW90aW9uIDEwIGNsaWVudC1zaWRlIGluc2VydGVkIHN0eWxlcyBkaWQgbm90IGhhdmUgZGF0YS1zIChidXQgaW1wb3J0YW50bHkgZGlkIG5vdCBoYXZlIGEgc3BhY2UgaW4gdGhlaXIgZGF0YS1lbW90aW9uIGF0dHJpYnV0ZXMpXG4gICAgICAvLyBzbyBjaGVja2luZyBmb3IgdGhlIHNwYWNlIGVuc3VyZXMgdGhhdCBsb2FkaW5nIEVtb3Rpb24gMTEgYWZ0ZXIgRW1vdGlvbiAxMCBoYXMgaW5zZXJ0ZWQgc29tZSBzdHlsZXNcbiAgICAgIC8vIHdpbGwgbm90IHJlc3VsdCBpbiB0aGUgRW1vdGlvbiAxMCBzdHlsZXMgYmVpbmcgZGVzdHJveWVkXG4gICAgICB2YXIgZGF0YUVtb3Rpb25BdHRyaWJ1dGUgPSBub2RlLmdldEF0dHJpYnV0ZSgnZGF0YS1lbW90aW9uJyk7XG5cbiAgICAgIGlmIChkYXRhRW1vdGlvbkF0dHJpYnV0ZS5pbmRleE9mKCcgJykgPT09IC0xKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQobm9kZSk7XG4gICAgICBub2RlLnNldEF0dHJpYnV0ZSgnZGF0YS1zJywgJycpO1xuICAgIH0pO1xuICB9XG5cbiAgdmFyIHN0eWxpc1BsdWdpbnMgPSBvcHRpb25zLnN0eWxpc1BsdWdpbnMgfHwgZGVmYXVsdFN0eWxpc1BsdWdpbnM7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyAkRmxvd0ZpeE1lXG4gICAgaWYgKC9bXmEtei1dLy50ZXN0KGtleSkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkVtb3Rpb24ga2V5IG11c3Qgb25seSBjb250YWluIGxvd2VyIGNhc2UgYWxwaGFiZXRpY2FsIGNoYXJhY3RlcnMgYW5kIC0gYnV0IFxcXCJcIiArIGtleSArIFwiXFxcIiB3YXMgcGFzc2VkXCIpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBpbnNlcnRlZCA9IHt9OyAvLyAkRmxvd0ZpeE1lXG5cbiAgdmFyIGNvbnRhaW5lcjtcbiAgdmFyIG5vZGVzVG9IeWRyYXRlID0gW107XG5cbiAge1xuICAgIGNvbnRhaW5lciA9IG9wdGlvbnMuY29udGFpbmVyIHx8IGRvY3VtZW50LmhlYWQ7XG4gICAgQXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbCggLy8gdGhpcyBtZWFucyB3ZSB3aWxsIGlnbm9yZSBlbGVtZW50cyB3aGljaCBkb24ndCBoYXZlIGEgc3BhY2UgaW4gdGhlbSB3aGljaFxuICAgIC8vIG1lYW5zIHRoYXQgdGhlIHN0eWxlIGVsZW1lbnRzIHdlJ3JlIGxvb2tpbmcgYXQgYXJlIG9ubHkgRW1vdGlvbiAxMSBzZXJ2ZXItcmVuZGVyZWQgc3R5bGUgZWxlbWVudHNcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwic3R5bGVbZGF0YS1lbW90aW9uXj1cXFwiXCIgKyBrZXkgKyBcIiBcXFwiXVwiKSwgZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgIHZhciBhdHRyaWIgPSBub2RlLmdldEF0dHJpYnV0ZShcImRhdGEtZW1vdGlvblwiKS5zcGxpdCgnICcpOyAvLyAkRmxvd0ZpeE1lXG5cbiAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXR0cmliLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGluc2VydGVkW2F0dHJpYltpXV0gPSB0cnVlO1xuICAgICAgfVxuXG4gICAgICBub2Rlc1RvSHlkcmF0ZS5wdXNoKG5vZGUpO1xuICAgIH0pO1xuICB9XG5cbiAgdmFyIF9pbnNlcnQ7XG5cbiAgdmFyIG9tbmlwcmVzZW50UGx1Z2lucyA9IFtjb21wYXQsIHJlbW92ZUxhYmVsXTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIG9tbmlwcmVzZW50UGx1Z2lucy5wdXNoKGNyZWF0ZVVuc2FmZVNlbGVjdG9yc0FsYXJtKHtcbiAgICAgIGdldCBjb21wYXQoKSB7XG4gICAgICAgIHJldHVybiBjYWNoZS5jb21wYXQ7XG4gICAgICB9XG5cbiAgICB9KSwgaW5jb3JyZWN0SW1wb3J0QWxhcm0pO1xuICB9XG5cbiAge1xuICAgIHZhciBjdXJyZW50U2hlZXQ7XG4gICAgdmFyIGZpbmFsaXppbmdQbHVnaW5zID0gW3N0cmluZ2lmeSwgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyA/IGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gICAgICBpZiAoIWVsZW1lbnQucm9vdCkge1xuICAgICAgICBpZiAoZWxlbWVudFtcInJldHVyblwiXSkge1xuICAgICAgICAgIGN1cnJlbnRTaGVldC5pbnNlcnQoZWxlbWVudFtcInJldHVyblwiXSk7XG4gICAgICAgIH0gZWxzZSBpZiAoZWxlbWVudC52YWx1ZSAmJiBlbGVtZW50LnR5cGUgIT09IENPTU1FTlQpIHtcbiAgICAgICAgICAvLyBpbnNlcnQgZW1wdHkgcnVsZSBpbiBub24tcHJvZHVjdGlvbiBlbnZpcm9ubWVudHNcbiAgICAgICAgICAvLyBzbyBAZW1vdGlvbi9qZXN0IGNhbiBncmFiIGBrZXlgIGZyb20gdGhlIChKUylET00gZm9yIGNhY2hlcyB3aXRob3V0IGFueSBydWxlcyBpbnNlcnRlZCB5ZXRcbiAgICAgICAgICBjdXJyZW50U2hlZXQuaW5zZXJ0KGVsZW1lbnQudmFsdWUgKyBcInt9XCIpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSA6IHJ1bGVzaGVldChmdW5jdGlvbiAocnVsZSkge1xuICAgICAgY3VycmVudFNoZWV0Lmluc2VydChydWxlKTtcbiAgICB9KV07XG4gICAgdmFyIHNlcmlhbGl6ZXIgPSBtaWRkbGV3YXJlKG9tbmlwcmVzZW50UGx1Z2lucy5jb25jYXQoc3R5bGlzUGx1Z2lucywgZmluYWxpemluZ1BsdWdpbnMpKTtcblxuICAgIHZhciBzdHlsaXMgPSBmdW5jdGlvbiBzdHlsaXMoc3R5bGVzKSB7XG4gICAgICByZXR1cm4gc2VyaWFsaXplKGNvbXBpbGUoc3R5bGVzKSwgc2VyaWFsaXplcik7XG4gICAgfTtcblxuICAgIF9pbnNlcnQgPSBmdW5jdGlvbiBpbnNlcnQoc2VsZWN0b3IsIHNlcmlhbGl6ZWQsIHNoZWV0LCBzaG91bGRDYWNoZSkge1xuICAgICAgY3VycmVudFNoZWV0ID0gc2hlZXQ7XG5cbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHNlcmlhbGl6ZWQubWFwICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgY3VycmVudFNoZWV0ID0ge1xuICAgICAgICAgIGluc2VydDogZnVuY3Rpb24gaW5zZXJ0KHJ1bGUpIHtcbiAgICAgICAgICAgIHNoZWV0Lmluc2VydChydWxlICsgc2VyaWFsaXplZC5tYXApO1xuICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgc3R5bGlzKHNlbGVjdG9yID8gc2VsZWN0b3IgKyBcIntcIiArIHNlcmlhbGl6ZWQuc3R5bGVzICsgXCJ9XCIgOiBzZXJpYWxpemVkLnN0eWxlcyk7XG5cbiAgICAgIGlmIChzaG91bGRDYWNoZSkge1xuICAgICAgICBjYWNoZS5pbnNlcnRlZFtzZXJpYWxpemVkLm5hbWVdID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9O1xuICB9XG5cbiAgdmFyIGNhY2hlID0ge1xuICAgIGtleToga2V5LFxuICAgIHNoZWV0OiBuZXcgU3R5bGVTaGVldCh7XG4gICAgICBrZXk6IGtleSxcbiAgICAgIGNvbnRhaW5lcjogY29udGFpbmVyLFxuICAgICAgbm9uY2U6IG9wdGlvbnMubm9uY2UsXG4gICAgICBzcGVlZHk6IG9wdGlvbnMuc3BlZWR5LFxuICAgICAgcHJlcGVuZDogb3B0aW9ucy5wcmVwZW5kLFxuICAgICAgaW5zZXJ0aW9uUG9pbnQ6IG9wdGlvbnMuaW5zZXJ0aW9uUG9pbnRcbiAgICB9KSxcbiAgICBub25jZTogb3B0aW9ucy5ub25jZSxcbiAgICBpbnNlcnRlZDogaW5zZXJ0ZWQsXG4gICAgcmVnaXN0ZXJlZDoge30sXG4gICAgaW5zZXJ0OiBfaW5zZXJ0XG4gIH07XG4gIGNhY2hlLnNoZWV0Lmh5ZHJhdGUobm9kZXNUb0h5ZHJhdGUpO1xuICByZXR1cm4gY2FjaGU7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVDYWNoZTtcbiIsImNvbnN0IGdyZXkgPSB7XG4gIDUwOiAnI2ZhZmFmYScsXG4gIDEwMDogJyNmNWY1ZjUnLFxuICAyMDA6ICcjZWVlZWVlJyxcbiAgMzAwOiAnI2UwZTBlMCcsXG4gIDQwMDogJyNiZGJkYmQnLFxuICA1MDA6ICcjOWU5ZTllJyxcbiAgNjAwOiAnIzc1NzU3NScsXG4gIDcwMDogJyM2MTYxNjEnLFxuICA4MDA6ICcjNDI0MjQyJyxcbiAgOTAwOiAnIzIxMjEyMScsXG4gIEExMDA6ICcjZjVmNWY1JyxcbiAgQTIwMDogJyNlZWVlZWUnLFxuICBBNDAwOiAnI2JkYmRiZCcsXG4gIEE3MDA6ICcjNjE2MTYxJ1xufTtcbmV4cG9ydCBkZWZhdWx0IGdyZXk7IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmNvbnN0IF9leGNsdWRlZCA9IFtcImZvbnRGYW1pbHlcIiwgXCJmb250U2l6ZVwiLCBcImZvbnRXZWlnaHRMaWdodFwiLCBcImZvbnRXZWlnaHRSZWd1bGFyXCIsIFwiZm9udFdlaWdodE1lZGl1bVwiLCBcImZvbnRXZWlnaHRCb2xkXCIsIFwiaHRtbEZvbnRTaXplXCIsIFwiYWxsVmFyaWFudHNcIiwgXCJweFRvUmVtXCJdO1xuaW1wb3J0IHsgZGVlcG1lcmdlIH0gZnJvbSAnQG11aS91dGlscyc7XG5cbmZ1bmN0aW9uIHJvdW5kKHZhbHVlKSB7XG4gIHJldHVybiBNYXRoLnJvdW5kKHZhbHVlICogMWU1KSAvIDFlNTtcbn1cblxuY29uc3QgY2FzZUFsbENhcHMgPSB7XG4gIHRleHRUcmFuc2Zvcm06ICd1cHBlcmNhc2UnXG59O1xuY29uc3QgZGVmYXVsdEZvbnRGYW1pbHkgPSAnXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2FcIiwgXCJBcmlhbFwiLCBzYW5zLXNlcmlmJztcbi8qKlxuICogQHNlZSBAbGlua3todHRwczovL21hdGVyaWFsLmlvL2Rlc2lnbi90eXBvZ3JhcGh5L3RoZS10eXBlLXN5c3RlbS5odG1sfVxuICogQHNlZSBAbGlua3todHRwczovL21hdGVyaWFsLmlvL2Rlc2lnbi90eXBvZ3JhcGh5L3VuZGVyc3RhbmRpbmctdHlwb2dyYXBoeS5odG1sfVxuICovXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZVR5cG9ncmFwaHkocGFsZXR0ZSwgdHlwb2dyYXBoeSkge1xuICBjb25zdCBfcmVmID0gdHlwZW9mIHR5cG9ncmFwaHkgPT09ICdmdW5jdGlvbicgPyB0eXBvZ3JhcGh5KHBhbGV0dGUpIDogdHlwb2dyYXBoeSxcbiAgICAgICAge1xuICAgIGZvbnRGYW1pbHkgPSBkZWZhdWx0Rm9udEZhbWlseSxcbiAgICAvLyBUaGUgZGVmYXVsdCBmb250IHNpemUgb2YgdGhlIE1hdGVyaWFsIFNwZWNpZmljYXRpb24uXG4gICAgZm9udFNpemUgPSAxNCxcbiAgICAvLyBweFxuICAgIGZvbnRXZWlnaHRMaWdodCA9IDMwMCxcbiAgICBmb250V2VpZ2h0UmVndWxhciA9IDQwMCxcbiAgICBmb250V2VpZ2h0TWVkaXVtID0gNTAwLFxuICAgIGZvbnRXZWlnaHRCb2xkID0gNzAwLFxuICAgIC8vIFRlbGwgTVVJIHdoYXQncyB0aGUgZm9udC1zaXplIG9uIHRoZSBodG1sIGVsZW1lbnQuXG4gICAgLy8gMTZweCBpcyB0aGUgZGVmYXVsdCBmb250LXNpemUgdXNlZCBieSBicm93c2Vycy5cbiAgICBodG1sRm9udFNpemUgPSAxNixcbiAgICAvLyBBcHBseSB0aGUgQ1NTIHByb3BlcnRpZXMgdG8gYWxsIHRoZSB2YXJpYW50cy5cbiAgICBhbGxWYXJpYW50cyxcbiAgICBweFRvUmVtOiBweFRvUmVtMlxuICB9ID0gX3JlZixcbiAgICAgICAgb3RoZXIgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmLCBfZXhjbHVkZWQpO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgaWYgKHR5cGVvZiBmb250U2l6ZSAhPT0gJ251bWJlcicpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ01VSTogYGZvbnRTaXplYCBpcyByZXF1aXJlZCB0byBiZSBhIG51bWJlci4nKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGh0bWxGb250U2l6ZSAhPT0gJ251bWJlcicpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ01VSTogYGh0bWxGb250U2l6ZWAgaXMgcmVxdWlyZWQgdG8gYmUgYSBudW1iZXIuJyk7XG4gICAgfVxuICB9XG5cbiAgY29uc3QgY29lZiA9IGZvbnRTaXplIC8gMTQ7XG5cbiAgY29uc3QgcHhUb1JlbSA9IHB4VG9SZW0yIHx8IChzaXplID0+IGAke3NpemUgLyBodG1sRm9udFNpemUgKiBjb2VmfXJlbWApO1xuXG4gIGNvbnN0IGJ1aWxkVmFyaWFudCA9IChmb250V2VpZ2h0LCBzaXplLCBsaW5lSGVpZ2h0LCBsZXR0ZXJTcGFjaW5nLCBjYXNpbmcpID0+IF9leHRlbmRzKHtcbiAgICBmb250RmFtaWx5LFxuICAgIGZvbnRXZWlnaHQsXG4gICAgZm9udFNpemU6IHB4VG9SZW0oc2l6ZSksXG4gICAgLy8gVW5pdGxlc3MgZm9sbG93aW5nIGh0dHBzOi8vbWV5ZXJ3ZWIuY29tL2VyaWMvdGhvdWdodHMvMjAwNi8wMi8wOC91bml0bGVzcy1saW5lLWhlaWdodHMvXG4gICAgbGluZUhlaWdodFxuICB9LCBmb250RmFtaWx5ID09PSBkZWZhdWx0Rm9udEZhbWlseSA/IHtcbiAgICBsZXR0ZXJTcGFjaW5nOiBgJHtyb3VuZChsZXR0ZXJTcGFjaW5nIC8gc2l6ZSl9ZW1gXG4gIH0gOiB7fSwgY2FzaW5nLCBhbGxWYXJpYW50cyk7XG5cbiAgY29uc3QgdmFyaWFudHMgPSB7XG4gICAgaDE6IGJ1aWxkVmFyaWFudChmb250V2VpZ2h0TGlnaHQsIDk2LCAxLjE2NywgLTEuNSksXG4gICAgaDI6IGJ1aWxkVmFyaWFudChmb250V2VpZ2h0TGlnaHQsIDYwLCAxLjIsIC0wLjUpLFxuICAgIGgzOiBidWlsZFZhcmlhbnQoZm9udFdlaWdodFJlZ3VsYXIsIDQ4LCAxLjE2NywgMCksXG4gICAgaDQ6IGJ1aWxkVmFyaWFudChmb250V2VpZ2h0UmVndWxhciwgMzQsIDEuMjM1LCAwLjI1KSxcbiAgICBoNTogYnVpbGRWYXJpYW50KGZvbnRXZWlnaHRSZWd1bGFyLCAyNCwgMS4zMzQsIDApLFxuICAgIGg2OiBidWlsZFZhcmlhbnQoZm9udFdlaWdodE1lZGl1bSwgMjAsIDEuNiwgMC4xNSksXG4gICAgc3VidGl0bGUxOiBidWlsZFZhcmlhbnQoZm9udFdlaWdodFJlZ3VsYXIsIDE2LCAxLjc1LCAwLjE1KSxcbiAgICBzdWJ0aXRsZTI6IGJ1aWxkVmFyaWFudChmb250V2VpZ2h0TWVkaXVtLCAxNCwgMS41NywgMC4xKSxcbiAgICBib2R5MTogYnVpbGRWYXJpYW50KGZvbnRXZWlnaHRSZWd1bGFyLCAxNiwgMS41LCAwLjE1KSxcbiAgICBib2R5MjogYnVpbGRWYXJpYW50KGZvbnRXZWlnaHRSZWd1bGFyLCAxNCwgMS40MywgMC4xNSksXG4gICAgYnV0dG9uOiBidWlsZFZhcmlhbnQoZm9udFdlaWdodE1lZGl1bSwgMTQsIDEuNzUsIDAuNCwgY2FzZUFsbENhcHMpLFxuICAgIGNhcHRpb246IGJ1aWxkVmFyaWFudChmb250V2VpZ2h0UmVndWxhciwgMTIsIDEuNjYsIDAuNCksXG4gICAgb3ZlcmxpbmU6IGJ1aWxkVmFyaWFudChmb250V2VpZ2h0UmVndWxhciwgMTIsIDIuNjYsIDEsIGNhc2VBbGxDYXBzKVxuICB9O1xuICByZXR1cm4gZGVlcG1lcmdlKF9leHRlbmRzKHtcbiAgICBodG1sRm9udFNpemUsXG4gICAgcHhUb1JlbSxcbiAgICBmb250RmFtaWx5LFxuICAgIGZvbnRTaXplLFxuICAgIGZvbnRXZWlnaHRMaWdodCxcbiAgICBmb250V2VpZ2h0UmVndWxhcixcbiAgICBmb250V2VpZ2h0TWVkaXVtLFxuICAgIGZvbnRXZWlnaHRCb2xkXG4gIH0sIHZhcmlhbnRzKSwgb3RoZXIsIHtcbiAgICBjbG9uZTogZmFsc2UgLy8gTm8gbmVlZCB0byBjbG9uZSBkZWVwXG5cbiAgfSk7XG59IiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuY29uc3QgVGhlbWVDb250ZXh0ID0gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUNvbnRleHQobnVsbCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIFRoZW1lQ29udGV4dC5kaXNwbGF5TmFtZSA9ICdUaGVtZUNvbnRleHQnO1xufVxuXG5leHBvcnQgZGVmYXVsdCBUaGVtZUNvbnRleHQ7IiwiaW1wb3J0IG1lcmdlIGZyb20gJy4vbWVyZ2UnO1xuXG5mdW5jdGlvbiBjb21wb3NlKC4uLnN0eWxlcykge1xuICBjb25zdCBoYW5kbGVycyA9IHN0eWxlcy5yZWR1Y2UoKGFjYywgc3R5bGUpID0+IHtcbiAgICBzdHlsZS5maWx0ZXJQcm9wcy5mb3JFYWNoKHByb3AgPT4ge1xuICAgICAgYWNjW3Byb3BdID0gc3R5bGU7XG4gICAgfSk7XG4gICAgcmV0dXJuIGFjYztcbiAgfSwge30pO1xuXG4gIGNvbnN0IGZuID0gcHJvcHMgPT4ge1xuICAgIHJldHVybiBPYmplY3Qua2V5cyhwcm9wcykucmVkdWNlKChhY2MsIHByb3ApID0+IHtcbiAgICAgIGlmIChoYW5kbGVyc1twcm9wXSkge1xuICAgICAgICByZXR1cm4gbWVyZ2UoYWNjLCBoYW5kbGVyc1twcm9wXShwcm9wcykpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gYWNjO1xuICAgIH0sIHt9KTtcbiAgfTtcblxuICBmbi5wcm9wVHlwZXMgPSBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nID8gc3R5bGVzLnJlZHVjZSgoYWNjLCBzdHlsZSkgPT4gT2JqZWN0LmFzc2lnbihhY2MsIHN0eWxlLnByb3BUeXBlcyksIHt9KSA6IHt9O1xuICBmbi5maWx0ZXJQcm9wcyA9IHN0eWxlcy5yZWR1Y2UoKGFjYywgc3R5bGUpID0+IGFjYy5jb25jYXQoc3R5bGUuZmlsdGVyUHJvcHMpLCBbXSk7XG4gIHJldHVybiBmbjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY29tcG9zZTsiLCJpbXBvcnQgcmVzcG9uc2l2ZVByb3BUeXBlIGZyb20gJy4vcmVzcG9uc2l2ZVByb3BUeXBlJztcbmltcG9ydCBzdHlsZSBmcm9tICcuL3N0eWxlJztcbmltcG9ydCBjb21wb3NlIGZyb20gJy4vY29tcG9zZSc7XG5pbXBvcnQgeyBjcmVhdGVVbmFyeVVuaXQsIGdldFZhbHVlIH0gZnJvbSAnLi9zcGFjaW5nJztcbmltcG9ydCB7IGhhbmRsZUJyZWFrcG9pbnRzIH0gZnJvbSAnLi9icmVha3BvaW50cyc7XG5cbmZ1bmN0aW9uIGdldEJvcmRlcih2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlICE9PSAnbnVtYmVyJykge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuXG4gIHJldHVybiBgJHt2YWx1ZX1weCBzb2xpZGA7XG59XG5cbmV4cG9ydCBjb25zdCBib3JkZXIgPSBzdHlsZSh7XG4gIHByb3A6ICdib3JkZXInLFxuICB0aGVtZUtleTogJ2JvcmRlcnMnLFxuICB0cmFuc2Zvcm06IGdldEJvcmRlclxufSk7XG5leHBvcnQgY29uc3QgYm9yZGVyVG9wID0gc3R5bGUoe1xuICBwcm9wOiAnYm9yZGVyVG9wJyxcbiAgdGhlbWVLZXk6ICdib3JkZXJzJyxcbiAgdHJhbnNmb3JtOiBnZXRCb3JkZXJcbn0pO1xuZXhwb3J0IGNvbnN0IGJvcmRlclJpZ2h0ID0gc3R5bGUoe1xuICBwcm9wOiAnYm9yZGVyUmlnaHQnLFxuICB0aGVtZUtleTogJ2JvcmRlcnMnLFxuICB0cmFuc2Zvcm06IGdldEJvcmRlclxufSk7XG5leHBvcnQgY29uc3QgYm9yZGVyQm90dG9tID0gc3R5bGUoe1xuICBwcm9wOiAnYm9yZGVyQm90dG9tJyxcbiAgdGhlbWVLZXk6ICdib3JkZXJzJyxcbiAgdHJhbnNmb3JtOiBnZXRCb3JkZXJcbn0pO1xuZXhwb3J0IGNvbnN0IGJvcmRlckxlZnQgPSBzdHlsZSh7XG4gIHByb3A6ICdib3JkZXJMZWZ0JyxcbiAgdGhlbWVLZXk6ICdib3JkZXJzJyxcbiAgdHJhbnNmb3JtOiBnZXRCb3JkZXJcbn0pO1xuZXhwb3J0IGNvbnN0IGJvcmRlckNvbG9yID0gc3R5bGUoe1xuICBwcm9wOiAnYm9yZGVyQ29sb3InLFxuICB0aGVtZUtleTogJ3BhbGV0dGUnXG59KTtcbmV4cG9ydCBjb25zdCBib3JkZXJUb3BDb2xvciA9IHN0eWxlKHtcbiAgcHJvcDogJ2JvcmRlclRvcENvbG9yJyxcbiAgdGhlbWVLZXk6ICdwYWxldHRlJ1xufSk7XG5leHBvcnQgY29uc3QgYm9yZGVyUmlnaHRDb2xvciA9IHN0eWxlKHtcbiAgcHJvcDogJ2JvcmRlclJpZ2h0Q29sb3InLFxuICB0aGVtZUtleTogJ3BhbGV0dGUnXG59KTtcbmV4cG9ydCBjb25zdCBib3JkZXJCb3R0b21Db2xvciA9IHN0eWxlKHtcbiAgcHJvcDogJ2JvcmRlckJvdHRvbUNvbG9yJyxcbiAgdGhlbWVLZXk6ICdwYWxldHRlJ1xufSk7XG5leHBvcnQgY29uc3QgYm9yZGVyTGVmdENvbG9yID0gc3R5bGUoe1xuICBwcm9wOiAnYm9yZGVyTGVmdENvbG9yJyxcbiAgdGhlbWVLZXk6ICdwYWxldHRlJ1xufSk7XG5leHBvcnQgY29uc3QgYm9yZGVyUmFkaXVzID0gcHJvcHMgPT4ge1xuICBpZiAocHJvcHMuYm9yZGVyUmFkaXVzICE9PSB1bmRlZmluZWQgJiYgcHJvcHMuYm9yZGVyUmFkaXVzICE9PSBudWxsKSB7XG4gICAgY29uc3QgdHJhbnNmb3JtZXIgPSBjcmVhdGVVbmFyeVVuaXQocHJvcHMudGhlbWUsICdzaGFwZS5ib3JkZXJSYWRpdXMnLCA0LCAnYm9yZGVyUmFkaXVzJyk7XG5cbiAgICBjb25zdCBzdHlsZUZyb21Qcm9wVmFsdWUgPSBwcm9wVmFsdWUgPT4gKHtcbiAgICAgIGJvcmRlclJhZGl1czogZ2V0VmFsdWUodHJhbnNmb3JtZXIsIHByb3BWYWx1ZSlcbiAgICB9KTtcblxuICAgIHJldHVybiBoYW5kbGVCcmVha3BvaW50cyhwcm9wcywgcHJvcHMuYm9yZGVyUmFkaXVzLCBzdHlsZUZyb21Qcm9wVmFsdWUpO1xuICB9XG5cbiAgcmV0dXJuIG51bGw7XG59O1xuYm9yZGVyUmFkaXVzLnByb3BUeXBlcyA9IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgPyB7XG4gIGJvcmRlclJhZGl1czogcmVzcG9uc2l2ZVByb3BUeXBlXG59IDoge307XG5ib3JkZXJSYWRpdXMuZmlsdGVyUHJvcHMgPSBbJ2JvcmRlclJhZGl1cyddO1xuY29uc3QgYm9yZGVycyA9IGNvbXBvc2UoYm9yZGVyLCBib3JkZXJUb3AsIGJvcmRlclJpZ2h0LCBib3JkZXJCb3R0b20sIGJvcmRlckxlZnQsIGJvcmRlckNvbG9yLCBib3JkZXJUb3BDb2xvciwgYm9yZGVyUmlnaHRDb2xvciwgYm9yZGVyQm90dG9tQ29sb3IsIGJvcmRlckxlZnRDb2xvciwgYm9yZGVyUmFkaXVzKTtcbmV4cG9ydCBkZWZhdWx0IGJvcmRlcnM7IiwiaW1wb3J0IHN0eWxlIGZyb20gJy4vc3R5bGUnO1xuaW1wb3J0IGNvbXBvc2UgZnJvbSAnLi9jb21wb3NlJztcbmV4cG9ydCBjb25zdCBkaXNwbGF5UHJpbnQgPSBzdHlsZSh7XG4gIHByb3A6ICdkaXNwbGF5UHJpbnQnLFxuICBjc3NQcm9wZXJ0eTogZmFsc2UsXG4gIHRyYW5zZm9ybTogdmFsdWUgPT4gKHtcbiAgICAnQG1lZGlhIHByaW50Jzoge1xuICAgICAgZGlzcGxheTogdmFsdWVcbiAgICB9XG4gIH0pXG59KTtcbmV4cG9ydCBjb25zdCBkaXNwbGF5UmF3ID0gc3R5bGUoe1xuICBwcm9wOiAnZGlzcGxheSdcbn0pO1xuZXhwb3J0IGNvbnN0IG92ZXJmbG93ID0gc3R5bGUoe1xuICBwcm9wOiAnb3ZlcmZsb3cnXG59KTtcbmV4cG9ydCBjb25zdCB0ZXh0T3ZlcmZsb3cgPSBzdHlsZSh7XG4gIHByb3A6ICd0ZXh0T3ZlcmZsb3cnXG59KTtcbmV4cG9ydCBjb25zdCB2aXNpYmlsaXR5ID0gc3R5bGUoe1xuICBwcm9wOiAndmlzaWJpbGl0eSdcbn0pO1xuZXhwb3J0IGNvbnN0IHdoaXRlU3BhY2UgPSBzdHlsZSh7XG4gIHByb3A6ICd3aGl0ZVNwYWNlJ1xufSk7XG5leHBvcnQgZGVmYXVsdCBjb21wb3NlKGRpc3BsYXlQcmludCwgZGlzcGxheVJhdywgb3ZlcmZsb3csIHRleHRPdmVyZmxvdywgdmlzaWJpbGl0eSwgd2hpdGVTcGFjZSk7IiwiaW1wb3J0IHN0eWxlIGZyb20gJy4vc3R5bGUnO1xuaW1wb3J0IGNvbXBvc2UgZnJvbSAnLi9jb21wb3NlJztcbmV4cG9ydCBjb25zdCBmbGV4QmFzaXMgPSBzdHlsZSh7XG4gIHByb3A6ICdmbGV4QmFzaXMnXG59KTtcbmV4cG9ydCBjb25zdCBmbGV4RGlyZWN0aW9uID0gc3R5bGUoe1xuICBwcm9wOiAnZmxleERpcmVjdGlvbidcbn0pO1xuZXhwb3J0IGNvbnN0IGZsZXhXcmFwID0gc3R5bGUoe1xuICBwcm9wOiAnZmxleFdyYXAnXG59KTtcbmV4cG9ydCBjb25zdCBqdXN0aWZ5Q29udGVudCA9IHN0eWxlKHtcbiAgcHJvcDogJ2p1c3RpZnlDb250ZW50J1xufSk7XG5leHBvcnQgY29uc3QgYWxpZ25JdGVtcyA9IHN0eWxlKHtcbiAgcHJvcDogJ2FsaWduSXRlbXMnXG59KTtcbmV4cG9ydCBjb25zdCBhbGlnbkNvbnRlbnQgPSBzdHlsZSh7XG4gIHByb3A6ICdhbGlnbkNvbnRlbnQnXG59KTtcbmV4cG9ydCBjb25zdCBvcmRlciA9IHN0eWxlKHtcbiAgcHJvcDogJ29yZGVyJ1xufSk7XG5leHBvcnQgY29uc3QgZmxleCA9IHN0eWxlKHtcbiAgcHJvcDogJ2ZsZXgnXG59KTtcbmV4cG9ydCBjb25zdCBmbGV4R3JvdyA9IHN0eWxlKHtcbiAgcHJvcDogJ2ZsZXhHcm93J1xufSk7XG5leHBvcnQgY29uc3QgZmxleFNocmluayA9IHN0eWxlKHtcbiAgcHJvcDogJ2ZsZXhTaHJpbmsnXG59KTtcbmV4cG9ydCBjb25zdCBhbGlnblNlbGYgPSBzdHlsZSh7XG4gIHByb3A6ICdhbGlnblNlbGYnXG59KTtcbmV4cG9ydCBjb25zdCBqdXN0aWZ5SXRlbXMgPSBzdHlsZSh7XG4gIHByb3A6ICdqdXN0aWZ5SXRlbXMnXG59KTtcbmV4cG9ydCBjb25zdCBqdXN0aWZ5U2VsZiA9IHN0eWxlKHtcbiAgcHJvcDogJ2p1c3RpZnlTZWxmJ1xufSk7XG5jb25zdCBmbGV4Ym94ID0gY29tcG9zZShmbGV4QmFzaXMsIGZsZXhEaXJlY3Rpb24sIGZsZXhXcmFwLCBqdXN0aWZ5Q29udGVudCwgYWxpZ25JdGVtcywgYWxpZ25Db250ZW50LCBvcmRlciwgZmxleCwgZmxleEdyb3csIGZsZXhTaHJpbmssIGFsaWduU2VsZiwganVzdGlmeUl0ZW1zLCBqdXN0aWZ5U2VsZik7XG5leHBvcnQgZGVmYXVsdCBmbGV4Ym94OyIsImltcG9ydCBzdHlsZSBmcm9tICcuL3N0eWxlJztcbmltcG9ydCBjb21wb3NlIGZyb20gJy4vY29tcG9zZSc7XG5pbXBvcnQgeyBjcmVhdGVVbmFyeVVuaXQsIGdldFZhbHVlIH0gZnJvbSAnLi9zcGFjaW5nJztcbmltcG9ydCB7IGhhbmRsZUJyZWFrcG9pbnRzIH0gZnJvbSAnLi9icmVha3BvaW50cyc7XG5pbXBvcnQgcmVzcG9uc2l2ZVByb3BUeXBlIGZyb20gJy4vcmVzcG9uc2l2ZVByb3BUeXBlJztcbmV4cG9ydCBjb25zdCBnYXAgPSBwcm9wcyA9PiB7XG4gIGlmIChwcm9wcy5nYXAgIT09IHVuZGVmaW5lZCAmJiBwcm9wcy5nYXAgIT09IG51bGwpIHtcbiAgICBjb25zdCB0cmFuc2Zvcm1lciA9IGNyZWF0ZVVuYXJ5VW5pdChwcm9wcy50aGVtZSwgJ3NwYWNpbmcnLCA4LCAnZ2FwJyk7XG5cbiAgICBjb25zdCBzdHlsZUZyb21Qcm9wVmFsdWUgPSBwcm9wVmFsdWUgPT4gKHtcbiAgICAgIGdhcDogZ2V0VmFsdWUodHJhbnNmb3JtZXIsIHByb3BWYWx1ZSlcbiAgICB9KTtcblxuICAgIHJldHVybiBoYW5kbGVCcmVha3BvaW50cyhwcm9wcywgcHJvcHMuZ2FwLCBzdHlsZUZyb21Qcm9wVmFsdWUpO1xuICB9XG5cbiAgcmV0dXJuIG51bGw7XG59O1xuZ2FwLnByb3BUeXBlcyA9IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgPyB7XG4gIGdhcDogcmVzcG9uc2l2ZVByb3BUeXBlXG59IDoge307XG5nYXAuZmlsdGVyUHJvcHMgPSBbJ2dhcCddO1xuZXhwb3J0IGNvbnN0IGNvbHVtbkdhcCA9IHByb3BzID0+IHtcbiAgaWYgKHByb3BzLmNvbHVtbkdhcCAhPT0gdW5kZWZpbmVkICYmIHByb3BzLmNvbHVtbkdhcCAhPT0gbnVsbCkge1xuICAgIGNvbnN0IHRyYW5zZm9ybWVyID0gY3JlYXRlVW5hcnlVbml0KHByb3BzLnRoZW1lLCAnc3BhY2luZycsIDgsICdjb2x1bW5HYXAnKTtcblxuICAgIGNvbnN0IHN0eWxlRnJvbVByb3BWYWx1ZSA9IHByb3BWYWx1ZSA9PiAoe1xuICAgICAgY29sdW1uR2FwOiBnZXRWYWx1ZSh0cmFuc2Zvcm1lciwgcHJvcFZhbHVlKVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIGhhbmRsZUJyZWFrcG9pbnRzKHByb3BzLCBwcm9wcy5jb2x1bW5HYXAsIHN0eWxlRnJvbVByb3BWYWx1ZSk7XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn07XG5jb2x1bW5HYXAucHJvcFR5cGVzID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyA/IHtcbiAgY29sdW1uR2FwOiByZXNwb25zaXZlUHJvcFR5cGVcbn0gOiB7fTtcbmNvbHVtbkdhcC5maWx0ZXJQcm9wcyA9IFsnY29sdW1uR2FwJ107XG5leHBvcnQgY29uc3Qgcm93R2FwID0gcHJvcHMgPT4ge1xuICBpZiAocHJvcHMucm93R2FwICE9PSB1bmRlZmluZWQgJiYgcHJvcHMucm93R2FwICE9PSBudWxsKSB7XG4gICAgY29uc3QgdHJhbnNmb3JtZXIgPSBjcmVhdGVVbmFyeVVuaXQocHJvcHMudGhlbWUsICdzcGFjaW5nJywgOCwgJ3Jvd0dhcCcpO1xuXG4gICAgY29uc3Qgc3R5bGVGcm9tUHJvcFZhbHVlID0gcHJvcFZhbHVlID0+ICh7XG4gICAgICByb3dHYXA6IGdldFZhbHVlKHRyYW5zZm9ybWVyLCBwcm9wVmFsdWUpXG4gICAgfSk7XG5cbiAgICByZXR1cm4gaGFuZGxlQnJlYWtwb2ludHMocHJvcHMsIHByb3BzLnJvd0dhcCwgc3R5bGVGcm9tUHJvcFZhbHVlKTtcbiAgfVxuXG4gIHJldHVybiBudWxsO1xufTtcbnJvd0dhcC5wcm9wVHlwZXMgPSBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nID8ge1xuICByb3dHYXA6IHJlc3BvbnNpdmVQcm9wVHlwZVxufSA6IHt9O1xucm93R2FwLmZpbHRlclByb3BzID0gWydyb3dHYXAnXTtcbmV4cG9ydCBjb25zdCBncmlkQ29sdW1uID0gc3R5bGUoe1xuICBwcm9wOiAnZ3JpZENvbHVtbidcbn0pO1xuZXhwb3J0IGNvbnN0IGdyaWRSb3cgPSBzdHlsZSh7XG4gIHByb3A6ICdncmlkUm93J1xufSk7XG5leHBvcnQgY29uc3QgZ3JpZEF1dG9GbG93ID0gc3R5bGUoe1xuICBwcm9wOiAnZ3JpZEF1dG9GbG93J1xufSk7XG5leHBvcnQgY29uc3QgZ3JpZEF1dG9Db2x1bW5zID0gc3R5bGUoe1xuICBwcm9wOiAnZ3JpZEF1dG9Db2x1bW5zJ1xufSk7XG5leHBvcnQgY29uc3QgZ3JpZEF1dG9Sb3dzID0gc3R5bGUoe1xuICBwcm9wOiAnZ3JpZEF1dG9Sb3dzJ1xufSk7XG5leHBvcnQgY29uc3QgZ3JpZFRlbXBsYXRlQ29sdW1ucyA9IHN0eWxlKHtcbiAgcHJvcDogJ2dyaWRUZW1wbGF0ZUNvbHVtbnMnXG59KTtcbmV4cG9ydCBjb25zdCBncmlkVGVtcGxhdGVSb3dzID0gc3R5bGUoe1xuICBwcm9wOiAnZ3JpZFRlbXBsYXRlUm93cydcbn0pO1xuZXhwb3J0IGNvbnN0IGdyaWRUZW1wbGF0ZUFyZWFzID0gc3R5bGUoe1xuICBwcm9wOiAnZ3JpZFRlbXBsYXRlQXJlYXMnXG59KTtcbmV4cG9ydCBjb25zdCBncmlkQXJlYSA9IHN0eWxlKHtcbiAgcHJvcDogJ2dyaWRBcmVhJ1xufSk7XG5jb25zdCBncmlkID0gY29tcG9zZShnYXAsIGNvbHVtbkdhcCwgcm93R2FwLCBncmlkQ29sdW1uLCBncmlkUm93LCBncmlkQXV0b0Zsb3csIGdyaWRBdXRvQ29sdW1ucywgZ3JpZEF1dG9Sb3dzLCBncmlkVGVtcGxhdGVDb2x1bW5zLCBncmlkVGVtcGxhdGVSb3dzLCBncmlkVGVtcGxhdGVBcmVhcywgZ3JpZEFyZWEpO1xuZXhwb3J0IGRlZmF1bHQgZ3JpZDsiLCJpbXBvcnQgc3R5bGUgZnJvbSAnLi9zdHlsZSc7XG5pbXBvcnQgY29tcG9zZSBmcm9tICcuL2NvbXBvc2UnO1xuZXhwb3J0IGNvbnN0IHBvc2l0aW9uID0gc3R5bGUoe1xuICBwcm9wOiAncG9zaXRpb24nXG59KTtcbmV4cG9ydCBjb25zdCB6SW5kZXggPSBzdHlsZSh7XG4gIHByb3A6ICd6SW5kZXgnLFxuICB0aGVtZUtleTogJ3pJbmRleCdcbn0pO1xuZXhwb3J0IGNvbnN0IHRvcCA9IHN0eWxlKHtcbiAgcHJvcDogJ3RvcCdcbn0pO1xuZXhwb3J0IGNvbnN0IHJpZ2h0ID0gc3R5bGUoe1xuICBwcm9wOiAncmlnaHQnXG59KTtcbmV4cG9ydCBjb25zdCBib3R0b20gPSBzdHlsZSh7XG4gIHByb3A6ICdib3R0b20nXG59KTtcbmV4cG9ydCBjb25zdCBsZWZ0ID0gc3R5bGUoe1xuICBwcm9wOiAnbGVmdCdcbn0pO1xuZXhwb3J0IGRlZmF1bHQgY29tcG9zZShwb3NpdGlvbiwgekluZGV4LCB0b3AsIHJpZ2h0LCBib3R0b20sIGxlZnQpOyIsImltcG9ydCBzdHlsZSBmcm9tICcuL3N0eWxlJztcbmltcG9ydCBjb21wb3NlIGZyb20gJy4vY29tcG9zZSc7XG5leHBvcnQgY29uc3QgY29sb3IgPSBzdHlsZSh7XG4gIHByb3A6ICdjb2xvcicsXG4gIHRoZW1lS2V5OiAncGFsZXR0ZSdcbn0pO1xuZXhwb3J0IGNvbnN0IGJnY29sb3IgPSBzdHlsZSh7XG4gIHByb3A6ICdiZ2NvbG9yJyxcbiAgY3NzUHJvcGVydHk6ICdiYWNrZ3JvdW5kQ29sb3InLFxuICB0aGVtZUtleTogJ3BhbGV0dGUnXG59KTtcbmV4cG9ydCBjb25zdCBiYWNrZ3JvdW5kQ29sb3IgPSBzdHlsZSh7XG4gIHByb3A6ICdiYWNrZ3JvdW5kQ29sb3InLFxuICB0aGVtZUtleTogJ3BhbGV0dGUnXG59KTtcbmNvbnN0IHBhbGV0dGUgPSBjb21wb3NlKGNvbG9yLCBiZ2NvbG9yLCBiYWNrZ3JvdW5kQ29sb3IpO1xuZXhwb3J0IGRlZmF1bHQgcGFsZXR0ZTsiLCJpbXBvcnQgc3R5bGUgZnJvbSAnLi9zdHlsZSc7XG5jb25zdCBib3hTaGFkb3cgPSBzdHlsZSh7XG4gIHByb3A6ICdib3hTaGFkb3cnLFxuICB0aGVtZUtleTogJ3NoYWRvd3MnXG59KTtcbmV4cG9ydCBkZWZhdWx0IGJveFNoYWRvdzsiLCJpbXBvcnQgc3R5bGUgZnJvbSAnLi9zdHlsZSc7XG5pbXBvcnQgY29tcG9zZSBmcm9tICcuL2NvbXBvc2UnO1xuaW1wb3J0IHsgaGFuZGxlQnJlYWtwb2ludHMsIHZhbHVlcyBhcyBicmVha3BvaW50c1ZhbHVlcyB9IGZyb20gJy4vYnJlYWtwb2ludHMnO1xuXG5mdW5jdGlvbiB0cmFuc2Zvcm0odmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlIDw9IDEgJiYgdmFsdWUgIT09IDAgPyBgJHt2YWx1ZSAqIDEwMH0lYCA6IHZhbHVlO1xufVxuXG5leHBvcnQgY29uc3Qgd2lkdGggPSBzdHlsZSh7XG4gIHByb3A6ICd3aWR0aCcsXG4gIHRyYW5zZm9ybVxufSk7XG5leHBvcnQgY29uc3QgbWF4V2lkdGggPSBwcm9wcyA9PiB7XG4gIGlmIChwcm9wcy5tYXhXaWR0aCAhPT0gdW5kZWZpbmVkICYmIHByb3BzLm1heFdpZHRoICE9PSBudWxsKSB7XG4gICAgY29uc3Qgc3R5bGVGcm9tUHJvcFZhbHVlID0gcHJvcFZhbHVlID0+IHtcbiAgICAgIHZhciBfcHJvcHMkdGhlbWUsIF9wcm9wcyR0aGVtZSRicmVha3BvaSwgX3Byb3BzJHRoZW1lJGJyZWFrcG9pMjtcblxuICAgICAgY29uc3QgYnJlYWtwb2ludCA9ICgoX3Byb3BzJHRoZW1lID0gcHJvcHMudGhlbWUpID09IG51bGwgPyB2b2lkIDAgOiAoX3Byb3BzJHRoZW1lJGJyZWFrcG9pID0gX3Byb3BzJHRoZW1lLmJyZWFrcG9pbnRzKSA9PSBudWxsID8gdm9pZCAwIDogKF9wcm9wcyR0aGVtZSRicmVha3BvaTIgPSBfcHJvcHMkdGhlbWUkYnJlYWtwb2kudmFsdWVzKSA9PSBudWxsID8gdm9pZCAwIDogX3Byb3BzJHRoZW1lJGJyZWFrcG9pMltwcm9wVmFsdWVdKSB8fCBicmVha3BvaW50c1ZhbHVlc1twcm9wVmFsdWVdO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbWF4V2lkdGg6IGJyZWFrcG9pbnQgfHwgdHJhbnNmb3JtKHByb3BWYWx1ZSlcbiAgICAgIH07XG4gICAgfTtcblxuICAgIHJldHVybiBoYW5kbGVCcmVha3BvaW50cyhwcm9wcywgcHJvcHMubWF4V2lkdGgsIHN0eWxlRnJvbVByb3BWYWx1ZSk7XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn07XG5tYXhXaWR0aC5maWx0ZXJQcm9wcyA9IFsnbWF4V2lkdGgnXTtcbmV4cG9ydCBjb25zdCBtaW5XaWR0aCA9IHN0eWxlKHtcbiAgcHJvcDogJ21pbldpZHRoJyxcbiAgdHJhbnNmb3JtXG59KTtcbmV4cG9ydCBjb25zdCBoZWlnaHQgPSBzdHlsZSh7XG4gIHByb3A6ICdoZWlnaHQnLFxuICB0cmFuc2Zvcm1cbn0pO1xuZXhwb3J0IGNvbnN0IG1heEhlaWdodCA9IHN0eWxlKHtcbiAgcHJvcDogJ21heEhlaWdodCcsXG4gIHRyYW5zZm9ybVxufSk7XG5leHBvcnQgY29uc3QgbWluSGVpZ2h0ID0gc3R5bGUoe1xuICBwcm9wOiAnbWluSGVpZ2h0JyxcbiAgdHJhbnNmb3JtXG59KTtcbmV4cG9ydCBjb25zdCBzaXplV2lkdGggPSBzdHlsZSh7XG4gIHByb3A6ICdzaXplJyxcbiAgY3NzUHJvcGVydHk6ICd3aWR0aCcsXG4gIHRyYW5zZm9ybVxufSk7XG5leHBvcnQgY29uc3Qgc2l6ZUhlaWdodCA9IHN0eWxlKHtcbiAgcHJvcDogJ3NpemUnLFxuICBjc3NQcm9wZXJ0eTogJ2hlaWdodCcsXG4gIHRyYW5zZm9ybVxufSk7XG5leHBvcnQgY29uc3QgYm94U2l6aW5nID0gc3R5bGUoe1xuICBwcm9wOiAnYm94U2l6aW5nJ1xufSk7XG5jb25zdCBzaXppbmcgPSBjb21wb3NlKHdpZHRoLCBtYXhXaWR0aCwgbWluV2lkdGgsIGhlaWdodCwgbWF4SGVpZ2h0LCBtaW5IZWlnaHQsIGJveFNpemluZyk7XG5leHBvcnQgZGVmYXVsdCBzaXppbmc7IiwiaW1wb3J0IHN0eWxlIGZyb20gJy4vc3R5bGUnO1xuaW1wb3J0IGNvbXBvc2UgZnJvbSAnLi9jb21wb3NlJztcbmV4cG9ydCBjb25zdCBmb250RmFtaWx5ID0gc3R5bGUoe1xuICBwcm9wOiAnZm9udEZhbWlseScsXG4gIHRoZW1lS2V5OiAndHlwb2dyYXBoeSdcbn0pO1xuZXhwb3J0IGNvbnN0IGZvbnRTaXplID0gc3R5bGUoe1xuICBwcm9wOiAnZm9udFNpemUnLFxuICB0aGVtZUtleTogJ3R5cG9ncmFwaHknXG59KTtcbmV4cG9ydCBjb25zdCBmb250U3R5bGUgPSBzdHlsZSh7XG4gIHByb3A6ICdmb250U3R5bGUnLFxuICB0aGVtZUtleTogJ3R5cG9ncmFwaHknXG59KTtcbmV4cG9ydCBjb25zdCBmb250V2VpZ2h0ID0gc3R5bGUoe1xuICBwcm9wOiAnZm9udFdlaWdodCcsXG4gIHRoZW1lS2V5OiAndHlwb2dyYXBoeSdcbn0pO1xuZXhwb3J0IGNvbnN0IGxldHRlclNwYWNpbmcgPSBzdHlsZSh7XG4gIHByb3A6ICdsZXR0ZXJTcGFjaW5nJ1xufSk7XG5leHBvcnQgY29uc3QgdGV4dFRyYW5zZm9ybSA9IHN0eWxlKHtcbiAgcHJvcDogJ3RleHRUcmFuc2Zvcm0nXG59KTtcbmV4cG9ydCBjb25zdCBsaW5lSGVpZ2h0ID0gc3R5bGUoe1xuICBwcm9wOiAnbGluZUhlaWdodCdcbn0pO1xuZXhwb3J0IGNvbnN0IHRleHRBbGlnbiA9IHN0eWxlKHtcbiAgcHJvcDogJ3RleHRBbGlnbidcbn0pO1xuZXhwb3J0IGNvbnN0IHR5cG9ncmFwaHlWYXJpYW50ID0gc3R5bGUoe1xuICBwcm9wOiAndHlwb2dyYXBoeScsXG4gIGNzc1Byb3BlcnR5OiBmYWxzZSxcbiAgdGhlbWVLZXk6ICd0eXBvZ3JhcGh5J1xufSk7XG5jb25zdCB0eXBvZ3JhcGh5ID0gY29tcG9zZSh0eXBvZ3JhcGh5VmFyaWFudCwgZm9udEZhbWlseSwgZm9udFNpemUsIGZvbnRTdHlsZSwgZm9udFdlaWdodCwgbGV0dGVyU3BhY2luZywgbGluZUhlaWdodCwgdGV4dEFsaWduLCB0ZXh0VHJhbnNmb3JtKTtcbmV4cG9ydCBkZWZhdWx0IHR5cG9ncmFwaHk7IiwiaW1wb3J0IGJvcmRlcnMgZnJvbSAnLi9ib3JkZXJzJztcbmltcG9ydCBkaXNwbGF5IGZyb20gJy4vZGlzcGxheSc7XG5pbXBvcnQgZmxleGJveCBmcm9tICcuL2ZsZXhib3gnO1xuaW1wb3J0IGdyaWQgZnJvbSAnLi9ncmlkJztcbmltcG9ydCBwb3NpdGlvbnMgZnJvbSAnLi9wb3NpdGlvbnMnO1xuaW1wb3J0IHBhbGV0dGUgZnJvbSAnLi9wYWxldHRlJztcbmltcG9ydCBzaGFkb3dzIGZyb20gJy4vc2hhZG93cyc7XG5pbXBvcnQgc2l6aW5nIGZyb20gJy4vc2l6aW5nJztcbmltcG9ydCBzcGFjaW5nIGZyb20gJy4vc3BhY2luZyc7XG5pbXBvcnQgdHlwb2dyYXBoeSBmcm9tICcuL3R5cG9ncmFwaHknO1xuY29uc3QgZmlsdGVyUHJvcHNNYXBwaW5nID0ge1xuICBib3JkZXJzOiBib3JkZXJzLmZpbHRlclByb3BzLFxuICBkaXNwbGF5OiBkaXNwbGF5LmZpbHRlclByb3BzLFxuICBmbGV4Ym94OiBmbGV4Ym94LmZpbHRlclByb3BzLFxuICBncmlkOiBncmlkLmZpbHRlclByb3BzLFxuICBwb3NpdGlvbnM6IHBvc2l0aW9ucy5maWx0ZXJQcm9wcyxcbiAgcGFsZXR0ZTogcGFsZXR0ZS5maWx0ZXJQcm9wcyxcbiAgc2hhZG93czogc2hhZG93cy5maWx0ZXJQcm9wcyxcbiAgc2l6aW5nOiBzaXppbmcuZmlsdGVyUHJvcHMsXG4gIHNwYWNpbmc6IHNwYWNpbmcuZmlsdGVyUHJvcHMsXG4gIHR5cG9ncmFwaHk6IHR5cG9ncmFwaHkuZmlsdGVyUHJvcHNcbn07XG5leHBvcnQgY29uc3Qgc3R5bGVGdW5jdGlvbk1hcHBpbmcgPSB7XG4gIGJvcmRlcnMsXG4gIGRpc3BsYXksXG4gIGZsZXhib3gsXG4gIGdyaWQsXG4gIHBvc2l0aW9ucyxcbiAgcGFsZXR0ZSxcbiAgc2hhZG93cyxcbiAgc2l6aW5nLFxuICBzcGFjaW5nLFxuICB0eXBvZ3JhcGh5XG59O1xuZXhwb3J0IGNvbnN0IHByb3BUb1N0eWxlRnVuY3Rpb24gPSBPYmplY3Qua2V5cyhmaWx0ZXJQcm9wc01hcHBpbmcpLnJlZHVjZSgoYWNjLCBzdHlsZUZuTmFtZSkgPT4ge1xuICBmaWx0ZXJQcm9wc01hcHBpbmdbc3R5bGVGbk5hbWVdLmZvckVhY2gocHJvcE5hbWUgPT4ge1xuICAgIGFjY1twcm9wTmFtZV0gPSBzdHlsZUZ1bmN0aW9uTWFwcGluZ1tzdHlsZUZuTmFtZV07XG4gIH0pO1xuICByZXR1cm4gYWNjO1xufSwge30pO1xuXG5mdW5jdGlvbiBnZXRUaGVtZVZhbHVlKHByb3AsIHZhbHVlLCB0aGVtZSkge1xuICBjb25zdCBpbnB1dFByb3BzID0ge1xuICAgIFtwcm9wXTogdmFsdWUsXG4gICAgdGhlbWVcbiAgfTtcbiAgY29uc3Qgc3R5bGVGdW5jdGlvbiA9IHByb3BUb1N0eWxlRnVuY3Rpb25bcHJvcF07XG4gIHJldHVybiBzdHlsZUZ1bmN0aW9uID8gc3R5bGVGdW5jdGlvbihpbnB1dFByb3BzKSA6IHtcbiAgICBbcHJvcF06IHZhbHVlXG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGdldFRoZW1lVmFsdWU7IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5leHBvcnQgZnVuY3Rpb24gaXNQbGFpbk9iamVjdChpdGVtKSB7XG4gIHJldHVybiBpdGVtICE9PSBudWxsICYmIHR5cGVvZiBpdGVtID09PSAnb2JqZWN0JyAmJiBpdGVtLmNvbnN0cnVjdG9yID09PSBPYmplY3Q7XG59XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBkZWVwbWVyZ2UodGFyZ2V0LCBzb3VyY2UsIG9wdGlvbnMgPSB7XG4gIGNsb25lOiB0cnVlXG59KSB7XG4gIGNvbnN0IG91dHB1dCA9IG9wdGlvbnMuY2xvbmUgPyBfZXh0ZW5kcyh7fSwgdGFyZ2V0KSA6IHRhcmdldDtcblxuICBpZiAoaXNQbGFpbk9iamVjdCh0YXJnZXQpICYmIGlzUGxhaW5PYmplY3Qoc291cmNlKSkge1xuICAgIE9iamVjdC5rZXlzKHNvdXJjZSkuZm9yRWFjaChrZXkgPT4ge1xuICAgICAgLy8gQXZvaWQgcHJvdG90eXBlIHBvbGx1dGlvblxuICAgICAgaWYgKGtleSA9PT0gJ19fcHJvdG9fXycpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXNQbGFpbk9iamVjdChzb3VyY2Vba2V5XSkgJiYga2V5IGluIHRhcmdldCAmJiBpc1BsYWluT2JqZWN0KHRhcmdldFtrZXldKSkge1xuICAgICAgICAvLyBTaW5jZSBgb3V0cHV0YCBpcyBhIGNsb25lIG9mIGB0YXJnZXRgIGFuZCB3ZSBoYXZlIG5hcnJvd2VkIGB0YXJnZXRgIGluIHRoaXMgYmxvY2sgd2UgY2FuIGNhc3QgdG8gdGhlIHNhbWUgdHlwZS5cbiAgICAgICAgb3V0cHV0W2tleV0gPSBkZWVwbWVyZ2UodGFyZ2V0W2tleV0sIHNvdXJjZVtrZXldLCBvcHRpb25zKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG91dHB1dFtrZXldID0gc291cmNlW2tleV07XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gb3V0cHV0O1xufSIsImV4cG9ydCBjb25zdCBnZXRTdG9yYWdlID0gKGtleTogc3RyaW5nLCBjYWxsYmFjaz86IGFueSkgPT4ge1xuICBjb25zdCBzdG9yYWdlID0ga2V5ID09PSBcInNldHRpbmdzXCIgPyBjaHJvbWUuc3RvcmFnZS5zeW5jIDogY2hyb21lLnN0b3JhZ2UubG9jYWw7XG4gIGxldCBwcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICBzdG9yYWdlLmdldChrZXksIChkYXRhKSA9PiByZXNvbHZlKGRhdGEpKTtcbiAgfSk7XG4gIHJldHVybiBjYWxsYmFjayA/IHByb21pc2UudGhlbihjYWxsYmFjaykgOiBwcm9taXNlO1xufTtcblxuZXhwb3J0IGNvbnN0IHNldFN0b3JhZ2UgPSAoa2V5OiBzdHJpbmcsIG9iamVjdDogYW55LCBjYWxsYmFjaz86IGFueSkgPT4ge1xuICBjb25zdCBzdG9yYWdlID0ga2V5ID09PSBcInNldHRpbmdzXCIgPyBjaHJvbWUuc3RvcmFnZS5zeW5jIDogY2hyb21lLnN0b3JhZ2UubG9jYWw7XG4gIGxldCBwcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICBzdG9yYWdlLnNldChvYmplY3QsICgpID0+IHtcbiAgICAgIHN0b3JhZ2UuZ2V0KGtleSwgKGRhdGEpID0+IHtcbiAgICAgICAgcmV0dXJuIHJlc29sdmUoZGF0YSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSk7XG4gIHJldHVybiBjYWxsYmFjayA/IHByb21pc2UudGhlbihjYWxsYmFjaykgOiBwcm9taXNlO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldFN0b3JhZ2VBbGwgPSAoa2V5czogYW55LCBjYWxsYmFjaz86IGFueSkgPT4ge1xuICBjb25zdCBzdG9yYWdlc0tleXMgPSBrZXlzLm1hcCgoa2V5OiBzdHJpbmcpID0+IHtcbiAgICByZXR1cm4geyBrZXksIHN0b3JhZ2U6IGNocm9tZS5zdG9yYWdlW2tleSA9PT0gXCJzZXR0aW5nc1wiID8gXCJzeW5jXCIgOiBcImxvY2FsXCJdIH07XG4gIH0pO1xuICBsZXQgcHJvbWlzZSA9IFByb21pc2UuYWxsKFxuICAgIHN0b3JhZ2VzS2V5cy5tYXAoKHN0b3JhZ2VLZXk6IGFueSkgPT4ge1xuICAgICAgY29uc3QgeyBzdG9yYWdlLCBrZXkgfSA9IHN0b3JhZ2VLZXk7XG4gICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgICAgc3RvcmFnZS5nZXQoa2V5LCAoZGF0YTogYW55KSA9PiByZXNvbHZlKGRhdGEpKTtcbiAgICAgIH0pO1xuICAgIH0pXG4gICkudGhlbigocmVzKSA9PiB7XG4gICAgY29uc3QgZGF0YSA9IHt9IGFzIGFueTtcbiAgICByZXMuZm9yRWFjaCgoaXRlbSwgaWR4KSA9PiAoZGF0YVtrZXlzW2lkeF1dID0gaXRlbVtrZXlzW2lkeF1dKSk7XG4gICAgcmV0dXJuIGRhdGE7XG4gIH0pO1xuICByZXR1cm4gY2FsbGJhY2sgPyBwcm9taXNlLnRoZW4oY2FsbGJhY2spIDogcHJvbWlzZTtcbn07XG4iLCJpbXBvcnQgaG9pc3ROb25SZWFjdFN0YXRpY3MkMSBmcm9tICdob2lzdC1ub24tcmVhY3Qtc3RhdGljcyc7XG5cbi8vIHRoaXMgZmlsZSBpc29sYXRlcyB0aGlzIHBhY2thZ2UgdGhhdCBpcyBub3QgdHJlZS1zaGFrZWFibGVcbi8vIGFuZCBpZiB0aGlzIG1vZHVsZSBkb2Vzbid0IGFjdHVhbGx5IGNvbnRhaW4gYW55IGxvZ2ljIG9mIGl0cyBvd25cbi8vIHRoZW4gUm9sbHVwIGp1c3QgdXNlICdob2lzdC1ub24tcmVhY3Qtc3RhdGljcycgZGlyZWN0bHkgaW4gb3RoZXIgY2h1bmtzXG5cbnZhciBob2lzdE5vblJlYWN0U3RhdGljcyA9IChmdW5jdGlvbiAodGFyZ2V0Q29tcG9uZW50LCBzb3VyY2VDb21wb25lbnQpIHtcbiAgcmV0dXJuIGhvaXN0Tm9uUmVhY3RTdGF0aWNzJDEodGFyZ2V0Q29tcG9uZW50LCBzb3VyY2VDb21wb25lbnQpO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0Tm9uUmVhY3RTdGF0aWNzO1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNy4wLjJcbiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbid1c2Ugc3RyaWN0Jzt2YXIgbD1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxuPTYwMTAzLHA9NjAxMDY7ZXhwb3J0cy5GcmFnbWVudD02MDEwNztleHBvcnRzLlN0cmljdE1vZGU9NjAxMDg7ZXhwb3J0cy5Qcm9maWxlcj02MDExNDt2YXIgcT02MDEwOSxyPTYwMTEwLHQ9NjAxMTI7ZXhwb3J0cy5TdXNwZW5zZT02MDExMzt2YXIgdT02MDExNSx2PTYwMTE2O1xuaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcil7dmFyIHc9U3ltYm9sLmZvcjtuPXcoXCJyZWFjdC5lbGVtZW50XCIpO3A9dyhcInJlYWN0LnBvcnRhbFwiKTtleHBvcnRzLkZyYWdtZW50PXcoXCJyZWFjdC5mcmFnbWVudFwiKTtleHBvcnRzLlN0cmljdE1vZGU9dyhcInJlYWN0LnN0cmljdF9tb2RlXCIpO2V4cG9ydHMuUHJvZmlsZXI9dyhcInJlYWN0LnByb2ZpbGVyXCIpO3E9dyhcInJlYWN0LnByb3ZpZGVyXCIpO3I9dyhcInJlYWN0LmNvbnRleHRcIik7dD13KFwicmVhY3QuZm9yd2FyZF9yZWZcIik7ZXhwb3J0cy5TdXNwZW5zZT13KFwicmVhY3Quc3VzcGVuc2VcIik7dT13KFwicmVhY3QubWVtb1wiKTt2PXcoXCJyZWFjdC5sYXp5XCIpfXZhciB4PVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtcbmZ1bmN0aW9uIHkoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPXgmJmFbeF18fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH1mdW5jdGlvbiB6KGEpe2Zvcih2YXIgYj1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0xO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspYis9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbY10pO3JldHVyblwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IFwiK2IrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwifVxudmFyIEE9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319LEI9e307ZnVuY3Rpb24gQyhhLGIsYyl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1CO3RoaXMudXBkYXRlcj1jfHxBfUMucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ9e307Qy5wcm90b3R5cGUuc2V0U3RhdGU9ZnVuY3Rpb24oYSxiKXtpZihcIm9iamVjdFwiIT09dHlwZW9mIGEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZudWxsIT1hKXRocm93IEVycm9yKHooODUpKTt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0MucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O1xuZnVuY3Rpb24gRCgpe31ELnByb3RvdHlwZT1DLnByb3RvdHlwZTtmdW5jdGlvbiBFKGEsYixjKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUI7dGhpcy51cGRhdGVyPWN8fEF9dmFyIEY9RS5wcm90b3R5cGU9bmV3IEQ7Ri5jb25zdHJ1Y3Rvcj1FO2woRixDLnByb3RvdHlwZSk7Ri5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgRz17Y3VycmVudDpudWxsfSxIPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksST17a2V5OiEwLHJlZjohMCxfX3NlbGY6ITAsX19zb3VyY2U6ITB9O1xuZnVuY3Rpb24gSihhLGIsYyl7dmFyIGUsZD17fSxrPW51bGwsaD1udWxsO2lmKG51bGwhPWIpZm9yKGUgaW4gdm9pZCAwIT09Yi5yZWYmJihoPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGs9XCJcIitiLmtleSksYilILmNhbGwoYixlKSYmIUkuaGFzT3duUHJvcGVydHkoZSkmJihkW2VdPWJbZV0pO3ZhciBnPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZylkLmNoaWxkcmVuPWM7ZWxzZSBpZigxPGcpe2Zvcih2YXIgZj1BcnJheShnKSxtPTA7bTxnO20rKylmW21dPWFyZ3VtZW50c1ttKzJdO2QuY2hpbGRyZW49Zn1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoZSBpbiBnPWEuZGVmYXVsdFByb3BzLGcpdm9pZCAwPT09ZFtlXSYmKGRbZV09Z1tlXSk7cmV0dXJueyQkdHlwZW9mOm4sdHlwZTphLGtleTprLHJlZjpoLHByb3BzOmQsX293bmVyOkcuY3VycmVudH19XG5mdW5jdGlvbiBLKGEsYil7cmV0dXJueyQkdHlwZW9mOm4sdHlwZTphLnR5cGUsa2V5OmIscmVmOmEucmVmLHByb3BzOmEucHJvcHMsX293bmVyOmEuX293bmVyfX1mdW5jdGlvbiBMKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1ufWZ1bmN0aW9uIGVzY2FwZShhKXt2YXIgYj17XCI9XCI6XCI9MFwiLFwiOlwiOlwiPTJcIn07cmV0dXJuXCIkXCIrYS5yZXBsYWNlKC9bPTpdL2csZnVuY3Rpb24oYSl7cmV0dXJuIGJbYV19KX12YXIgTT0vXFwvKy9nO2Z1bmN0aW9uIE4oYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoXCJcIithLmtleSk6Yi50b1N0cmluZygzNil9XG5mdW5jdGlvbiBPKGEsYixjLGUsZCl7dmFyIGs9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWt8fFwiYm9vbGVhblwiPT09aylhPW51bGw7dmFyIGg9ITE7aWYobnVsbD09PWEpaD0hMDtlbHNlIHN3aXRjaChrKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmg9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIG46Y2FzZSBwOmg9ITB9fWlmKGgpcmV0dXJuIGg9YSxkPWQoaCksYT1cIlwiPT09ZT9cIi5cIitOKGgsMCk6ZSxBcnJheS5pc0FycmF5KGQpPyhjPVwiXCIsbnVsbCE9YSYmKGM9YS5yZXBsYWNlKE0sXCIkJi9cIikrXCIvXCIpLE8oZCxiLGMsXCJcIixmdW5jdGlvbihhKXtyZXR1cm4gYX0pKTpudWxsIT1kJiYoTChkKSYmKGQ9SyhkLGMrKCFkLmtleXx8aCYmaC5rZXk9PT1kLmtleT9cIlwiOihcIlwiK2Qua2V5KS5yZXBsYWNlKE0sXCIkJi9cIikrXCIvXCIpK2EpKSxiLnB1c2goZCkpLDE7aD0wO2U9XCJcIj09PWU/XCIuXCI6ZStcIjpcIjtpZihBcnJheS5pc0FycmF5KGEpKWZvcih2YXIgZz1cbjA7ZzxhLmxlbmd0aDtnKyspe2s9YVtnXTt2YXIgZj1lK04oayxnKTtoKz1PKGssYixjLGYsZCl9ZWxzZSBpZihmPXkoYSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9Zi5jYWxsKGEpLGc9MDshKGs9YS5uZXh0KCkpLmRvbmU7KWs9ay52YWx1ZSxmPWUrTihrLGcrKyksaCs9TyhrLGIsYyxmLGQpO2Vsc2UgaWYoXCJvYmplY3RcIj09PWspdGhyb3cgYj1cIlwiK2EsRXJyb3IoeigzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09Yj9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGEpLmpvaW4oXCIsIFwiKStcIn1cIjpiKSk7cmV0dXJuIGh9ZnVuY3Rpb24gUChhLGIsYyl7aWYobnVsbD09YSlyZXR1cm4gYTt2YXIgZT1bXSxkPTA7TyhhLGUsXCJcIixcIlwiLGZ1bmN0aW9uKGEpe3JldHVybiBiLmNhbGwoYyxhLGQrKyl9KTtyZXR1cm4gZX1cbmZ1bmN0aW9uIFEoYSl7aWYoLTE9PT1hLl9zdGF0dXMpe3ZhciBiPWEuX3Jlc3VsdDtiPWIoKTthLl9zdGF0dXM9MDthLl9yZXN1bHQ9YjtiLnRoZW4oZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGI9Yi5kZWZhdWx0LGEuX3N0YXR1cz0xLGEuX3Jlc3VsdD1iKX0sZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGEuX3N0YXR1cz0yLGEuX3Jlc3VsdD1iKX0pfWlmKDE9PT1hLl9zdGF0dXMpcmV0dXJuIGEuX3Jlc3VsdDt0aHJvdyBhLl9yZXN1bHQ7fXZhciBSPXtjdXJyZW50Om51bGx9O2Z1bmN0aW9uIFMoKXt2YXIgYT1SLmN1cnJlbnQ7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IoeigzMjEpKTtyZXR1cm4gYX12YXIgVD17UmVhY3RDdXJyZW50RGlzcGF0Y2hlcjpSLFJlYWN0Q3VycmVudEJhdGNoQ29uZmlnOnt0cmFuc2l0aW9uOjB9LFJlYWN0Q3VycmVudE93bmVyOkcsSXNTb21lUmVuZGVyZXJBY3Rpbmc6e2N1cnJlbnQ6ITF9LGFzc2lnbjpsfTtcbmV4cG9ydHMuQ2hpbGRyZW49e21hcDpQLGZvckVhY2g6ZnVuY3Rpb24oYSxiLGMpe1AoYSxmdW5jdGlvbigpe2IuYXBwbHkodGhpcyxhcmd1bWVudHMpfSxjKX0sY291bnQ6ZnVuY3Rpb24oYSl7dmFyIGI9MDtQKGEsZnVuY3Rpb24oKXtiKyt9KTtyZXR1cm4gYn0sdG9BcnJheTpmdW5jdGlvbihhKXtyZXR1cm4gUChhLGZ1bmN0aW9uKGEpe3JldHVybiBhfSl8fFtdfSxvbmx5OmZ1bmN0aW9uKGEpe2lmKCFMKGEpKXRocm93IEVycm9yKHooMTQzKSk7cmV0dXJuIGF9fTtleHBvcnRzLkNvbXBvbmVudD1DO2V4cG9ydHMuUHVyZUNvbXBvbmVudD1FO2V4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9VDtcbmV4cG9ydHMuY2xvbmVFbGVtZW50PWZ1bmN0aW9uKGEsYixjKXtpZihudWxsPT09YXx8dm9pZCAwPT09YSl0aHJvdyBFcnJvcih6KDI2NyxhKSk7dmFyIGU9bCh7fSxhLnByb3BzKSxkPWEua2V5LGs9YS5yZWYsaD1hLl9vd25lcjtpZihudWxsIT1iKXt2b2lkIDAhPT1iLnJlZiYmKGs9Yi5yZWYsaD1HLmN1cnJlbnQpO3ZvaWQgMCE9PWIua2V5JiYoZD1cIlwiK2Iua2V5KTtpZihhLnR5cGUmJmEudHlwZS5kZWZhdWx0UHJvcHMpdmFyIGc9YS50eXBlLmRlZmF1bHRQcm9wcztmb3IoZiBpbiBiKUguY2FsbChiLGYpJiYhSS5oYXNPd25Qcm9wZXJ0eShmKSYmKGVbZl09dm9pZCAwPT09YltmXSYmdm9pZCAwIT09Zz9nW2ZdOmJbZl0pfXZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZillLmNoaWxkcmVuPWM7ZWxzZSBpZigxPGYpe2c9QXJyYXkoZik7Zm9yKHZhciBtPTA7bTxmO20rKylnW21dPWFyZ3VtZW50c1ttKzJdO2UuY2hpbGRyZW49Z31yZXR1cm57JCR0eXBlb2Y6bix0eXBlOmEudHlwZSxcbmtleTpkLHJlZjprLHByb3BzOmUsX293bmVyOmh9fTtleHBvcnRzLmNyZWF0ZUNvbnRleHQ9ZnVuY3Rpb24oYSxiKXt2b2lkIDA9PT1iJiYoYj1udWxsKTthPXskJHR5cGVvZjpyLF9jYWxjdWxhdGVDaGFuZ2VkQml0czpiLF9jdXJyZW50VmFsdWU6YSxfY3VycmVudFZhbHVlMjphLF90aHJlYWRDb3VudDowLFByb3ZpZGVyOm51bGwsQ29uc3VtZXI6bnVsbH07YS5Qcm92aWRlcj17JCR0eXBlb2Y6cSxfY29udGV4dDphfTtyZXR1cm4gYS5Db25zdW1lcj1hfTtleHBvcnRzLmNyZWF0ZUVsZW1lbnQ9SjtleHBvcnRzLmNyZWF0ZUZhY3Rvcnk9ZnVuY3Rpb24oYSl7dmFyIGI9Si5iaW5kKG51bGwsYSk7Yi50eXBlPWE7cmV0dXJuIGJ9O2V4cG9ydHMuY3JlYXRlUmVmPWZ1bmN0aW9uKCl7cmV0dXJue2N1cnJlbnQ6bnVsbH19O2V4cG9ydHMuZm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6dCxyZW5kZXI6YX19O2V4cG9ydHMuaXNWYWxpZEVsZW1lbnQ9TDtcbmV4cG9ydHMubGF6eT1mdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6dixfcGF5bG9hZDp7X3N0YXR1czotMSxfcmVzdWx0OmF9LF9pbml0OlF9fTtleHBvcnRzLm1lbW89ZnVuY3Rpb24oYSxiKXtyZXR1cm57JCR0eXBlb2Y6dSx0eXBlOmEsY29tcGFyZTp2b2lkIDA9PT1iP251bGw6Yn19O2V4cG9ydHMudXNlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUygpLnVzZUNhbGxiYWNrKGEsYil9O2V4cG9ydHMudXNlQ29udGV4dD1mdW5jdGlvbihhLGIpe3JldHVybiBTKCkudXNlQ29udGV4dChhLGIpfTtleHBvcnRzLnVzZURlYnVnVmFsdWU9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudXNlRWZmZWN0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VFZmZlY3QoYSxiKX07ZXhwb3J0cy51c2VJbXBlcmF0aXZlSGFuZGxlPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gUygpLnVzZUltcGVyYXRpdmVIYW5kbGUoYSxiLGMpfTtcbmV4cG9ydHMudXNlTGF5b3V0RWZmZWN0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VMYXlvdXRFZmZlY3QoYSxiKX07ZXhwb3J0cy51c2VNZW1vPWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VNZW1vKGEsYil9O2V4cG9ydHMudXNlUmVkdWNlcj1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIFMoKS51c2VSZWR1Y2VyKGEsYixjKX07ZXhwb3J0cy51c2VSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIFMoKS51c2VSZWYoYSl9O2V4cG9ydHMudXNlU3RhdGU9ZnVuY3Rpb24oYSl7cmV0dXJuIFMoKS51c2VTdGF0ZShhKX07ZXhwb3J0cy52ZXJzaW9uPVwiMTcuMC4yXCI7XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE3LjAuMlxuICogcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIiksbT1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxyPXJlcXVpcmUoXCJzY2hlZHVsZXJcIik7ZnVuY3Rpb24geShhKXtmb3IodmFyIGI9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWIrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2NdKTtyZXR1cm5cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBcIitiK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIn1pZighYWEpdGhyb3cgRXJyb3IoeSgyMjcpKTt2YXIgYmE9bmV3IFNldCxjYT17fTtmdW5jdGlvbiBkYShhLGIpe2VhKGEsYik7ZWEoYStcIkNhcHR1cmVcIixiKX1cbmZ1bmN0aW9uIGVhKGEsYil7Y2FbYV09Yjtmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKWJhLmFkZChiW2FdKX1cbnZhciBmYT0hKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudHx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCksaGE9L15bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRdWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXFwtLjAtOVxcdTAwQjdcXHUwMzAwLVxcdTAzNkZcXHUyMDNGLVxcdTIwNDBdKiQvLGlhPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksXG5qYT17fSxrYT17fTtmdW5jdGlvbiBsYShhKXtpZihpYS5jYWxsKGthLGEpKXJldHVybiEwO2lmKGlhLmNhbGwoamEsYSkpcmV0dXJuITE7aWYoaGEudGVzdChhKSlyZXR1cm4ga2FbYV09ITA7amFbYV09ITA7cmV0dXJuITF9ZnVuY3Rpb24gbWEoYSxiLGMsZCl7aWYobnVsbCE9PWMmJjA9PT1jLnR5cGUpcmV0dXJuITE7c3dpdGNoKHR5cGVvZiBiKXtjYXNlIFwiZnVuY3Rpb25cIjpjYXNlIFwic3ltYm9sXCI6cmV0dXJuITA7Y2FzZSBcImJvb2xlYW5cIjppZihkKXJldHVybiExO2lmKG51bGwhPT1jKXJldHVybiFjLmFjY2VwdHNCb29sZWFuczthPWEudG9Mb3dlckNhc2UoKS5zbGljZSgwLDUpO3JldHVyblwiZGF0YS1cIiE9PWEmJlwiYXJpYS1cIiE9PWE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBuYShhLGIsYyxkKXtpZihudWxsPT09Ynx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBifHxtYShhLGIsYyxkKSlyZXR1cm4hMDtpZihkKXJldHVybiExO2lmKG51bGwhPT1jKXN3aXRjaChjLnR5cGUpe2Nhc2UgMzpyZXR1cm4hYjtjYXNlIDQ6cmV0dXJuITE9PT1iO2Nhc2UgNTpyZXR1cm4gaXNOYU4oYik7Y2FzZSA2OnJldHVybiBpc05hTihiKXx8MT5ifXJldHVybiExfWZ1bmN0aW9uIEIoYSxiLGMsZCxlLGYsZyl7dGhpcy5hY2NlcHRzQm9vbGVhbnM9Mj09PWJ8fDM9PT1ifHw0PT09Yjt0aGlzLmF0dHJpYnV0ZU5hbWU9ZDt0aGlzLmF0dHJpYnV0ZU5hbWVzcGFjZT1lO3RoaXMubXVzdFVzZVByb3BlcnR5PWM7dGhpcy5wcm9wZXJ0eU5hbWU9YTt0aGlzLnR5cGU9Yjt0aGlzLnNhbml0aXplVVJMPWY7dGhpcy5yZW1vdmVFbXB0eVN0cmluZz1nfXZhciBEPXt9O1xuXCJjaGlsZHJlbiBkYW5nZXJvdXNseVNldElubmVySFRNTCBkZWZhdWx0VmFsdWUgZGVmYXVsdENoZWNrZWQgaW5uZXJIVE1MIHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZyBzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcgc3R5bGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMCwhMSxhLG51bGwsITEsITEpfSk7W1tcImFjY2VwdENoYXJzZXRcIixcImFjY2VwdC1jaGFyc2V0XCJdLFtcImNsYXNzTmFtZVwiLFwiY2xhc3NcIl0sW1wiaHRtbEZvclwiLFwiZm9yXCJdLFtcImh0dHBFcXVpdlwiLFwiaHR0cC1lcXVpdlwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hWzBdO0RbYl09bmV3IEIoYiwxLCExLGFbMV0sbnVsbCwhMSwhMSl9KTtbXCJjb250ZW50RWRpdGFibGVcIixcImRyYWdnYWJsZVwiLFwic3BlbGxDaGVja1wiLFwidmFsdWVcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMiwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTtcbltcImF1dG9SZXZlcnNlXCIsXCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkXCIsXCJmb2N1c2FibGVcIixcInByZXNlcnZlQWxwaGFcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMiwhMSxhLG51bGwsITEsITEpfSk7XCJhbGxvd0Z1bGxTY3JlZW4gYXN5bmMgYXV0b0ZvY3VzIGF1dG9QbGF5IGNvbnRyb2xzIGRlZmF1bHQgZGVmZXIgZGlzYWJsZWQgZGlzYWJsZVBpY3R1cmVJblBpY3R1cmUgZGlzYWJsZVJlbW90ZVBsYXliYWNrIGZvcm1Ob1ZhbGlkYXRlIGhpZGRlbiBsb29wIG5vTW9kdWxlIG5vVmFsaWRhdGUgb3BlbiBwbGF5c0lubGluZSByZWFkT25seSByZXF1aXJlZCByZXZlcnNlZCBzY29wZWQgc2VhbWxlc3MgaXRlbVNjb3BlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDMsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEsITEpfSk7XG5bXCJjaGVja2VkXCIsXCJtdWx0aXBsZVwiLFwibXV0ZWRcIixcInNlbGVjdGVkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDMsITAsYSxudWxsLCExLCExKX0pO1tcImNhcHR1cmVcIixcImRvd25sb2FkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDQsITEsYSxudWxsLCExLCExKX0pO1tcImNvbHNcIixcInJvd3NcIixcInNpemVcIixcInNwYW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsNiwhMSxhLG51bGwsITEsITEpfSk7W1wicm93U3BhblwiLFwic3RhcnRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsNSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTt2YXIgb2E9L1tcXC06XShbYS16XSkvZztmdW5jdGlvbiBwYShhKXtyZXR1cm4gYVsxXS50b1VwcGVyQ2FzZSgpfVxuXCJhY2NlbnQtaGVpZ2h0IGFsaWdubWVudC1iYXNlbGluZSBhcmFiaWMtZm9ybSBiYXNlbGluZS1zaGlmdCBjYXAtaGVpZ2h0IGNsaXAtcGF0aCBjbGlwLXJ1bGUgY29sb3ItaW50ZXJwb2xhdGlvbiBjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnMgY29sb3ItcHJvZmlsZSBjb2xvci1yZW5kZXJpbmcgZG9taW5hbnQtYmFzZWxpbmUgZW5hYmxlLWJhY2tncm91bmQgZmlsbC1vcGFjaXR5IGZpbGwtcnVsZSBmbG9vZC1jb2xvciBmbG9vZC1vcGFjaXR5IGZvbnQtZmFtaWx5IGZvbnQtc2l6ZSBmb250LXNpemUtYWRqdXN0IGZvbnQtc3RyZXRjaCBmb250LXN0eWxlIGZvbnQtdmFyaWFudCBmb250LXdlaWdodCBnbHlwaC1uYW1lIGdseXBoLW9yaWVudGF0aW9uLWhvcml6b250YWwgZ2x5cGgtb3JpZW50YXRpb24tdmVydGljYWwgaG9yaXotYWR2LXggaG9yaXotb3JpZ2luLXggaW1hZ2UtcmVuZGVyaW5nIGxldHRlci1zcGFjaW5nIGxpZ2h0aW5nLWNvbG9yIG1hcmtlci1lbmQgbWFya2VyLW1pZCBtYXJrZXItc3RhcnQgb3ZlcmxpbmUtcG9zaXRpb24gb3ZlcmxpbmUtdGhpY2tuZXNzIHBhaW50LW9yZGVyIHBhbm9zZS0xIHBvaW50ZXItZXZlbnRzIHJlbmRlcmluZy1pbnRlbnQgc2hhcGUtcmVuZGVyaW5nIHN0b3AtY29sb3Igc3RvcC1vcGFjaXR5IHN0cmlrZXRocm91Z2gtcG9zaXRpb24gc3RyaWtldGhyb3VnaC10aGlja25lc3Mgc3Ryb2tlLWRhc2hhcnJheSBzdHJva2UtZGFzaG9mZnNldCBzdHJva2UtbGluZWNhcCBzdHJva2UtbGluZWpvaW4gc3Ryb2tlLW1pdGVybGltaXQgc3Ryb2tlLW9wYWNpdHkgc3Ryb2tlLXdpZHRoIHRleHQtYW5jaG9yIHRleHQtZGVjb3JhdGlvbiB0ZXh0LXJlbmRlcmluZyB1bmRlcmxpbmUtcG9zaXRpb24gdW5kZXJsaW5lLXRoaWNrbmVzcyB1bmljb2RlLWJpZGkgdW5pY29kZS1yYW5nZSB1bml0cy1wZXItZW0gdi1hbHBoYWJldGljIHYtaGFuZ2luZyB2LWlkZW9ncmFwaGljIHYtbWF0aGVtYXRpY2FsIHZlY3Rvci1lZmZlY3QgdmVydC1hZHYteSB2ZXJ0LW9yaWdpbi14IHZlcnQtb3JpZ2luLXkgd29yZC1zcGFjaW5nIHdyaXRpbmctbW9kZSB4bWxuczp4bGluayB4LWhlaWdodFwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShvYSxcbnBhKTtEW2JdPW5ldyBCKGIsMSwhMSxhLG51bGwsITEsITEpfSk7XCJ4bGluazphY3R1YXRlIHhsaW5rOmFyY3JvbGUgeGxpbms6cm9sZSB4bGluazpzaG93IHhsaW5rOnRpdGxlIHhsaW5rOnR5cGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2Uob2EscGEpO0RbYl09bmV3IEIoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsITEsITEpfSk7W1wieG1sOmJhc2VcIixcInhtbDpsYW5nXCIsXCJ4bWw6c3BhY2VcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2Uob2EscGEpO0RbYl09bmV3IEIoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIiwhMSwhMSl9KTtbXCJ0YWJJbmRleFwiLFwiY3Jvc3NPcmlnaW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTtcbkQueGxpbmtIcmVmPW5ldyBCKFwieGxpbmtIcmVmXCIsMSwhMSxcInhsaW5rOmhyZWZcIixcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMCwhMSk7W1wic3JjXCIsXCJocmVmXCIsXCJhY3Rpb25cIixcImZvcm1BY3Rpb25cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMCwhMCl9KTtcbmZ1bmN0aW9uIHFhKGEsYixjLGQpe3ZhciBlPUQuaGFzT3duUHJvcGVydHkoYik/RFtiXTpudWxsO3ZhciBmPW51bGwhPT1lPzA9PT1lLnR5cGU6ZD8hMTohKDI8Yi5sZW5ndGgpfHxcIm9cIiE9PWJbMF0mJlwiT1wiIT09YlswXXx8XCJuXCIhPT1iWzFdJiZcIk5cIiE9PWJbMV0/ITE6ITA7Znx8KG5hKGIsYyxlLGQpJiYoYz1udWxsKSxkfHxudWxsPT09ZT9sYShiKSYmKG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOmEuc2V0QXR0cmlidXRlKGIsXCJcIitjKSk6ZS5tdXN0VXNlUHJvcGVydHk/YVtlLnByb3BlcnR5TmFtZV09bnVsbD09PWM/Mz09PWUudHlwZT8hMTpcIlwiOmM6KGI9ZS5hdHRyaWJ1dGVOYW1lLGQ9ZS5hdHRyaWJ1dGVOYW1lc3BhY2UsbnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6KGU9ZS50eXBlLGM9Mz09PWV8fDQ9PT1lJiYhMD09PWM/XCJcIjpcIlwiK2MsZD9hLnNldEF0dHJpYnV0ZU5TKGQsYixjKTphLnNldEF0dHJpYnV0ZShiLGMpKSkpfVxudmFyIHJhPWFhLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVELHNhPTYwMTAzLHRhPTYwMTA2LHVhPTYwMTA3LHdhPTYwMTA4LHhhPTYwMTE0LHlhPTYwMTA5LHphPTYwMTEwLEFhPTYwMTEyLEJhPTYwMTEzLENhPTYwMTIwLERhPTYwMTE1LEVhPTYwMTE2LEZhPTYwMTIxLEdhPTYwMTI4LEhhPTYwMTI5LElhPTYwMTMwLEphPTYwMTMxO1xuaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcil7dmFyIEU9U3ltYm9sLmZvcjtzYT1FKFwicmVhY3QuZWxlbWVudFwiKTt0YT1FKFwicmVhY3QucG9ydGFsXCIpO3VhPUUoXCJyZWFjdC5mcmFnbWVudFwiKTt3YT1FKFwicmVhY3Quc3RyaWN0X21vZGVcIik7eGE9RShcInJlYWN0LnByb2ZpbGVyXCIpO3lhPUUoXCJyZWFjdC5wcm92aWRlclwiKTt6YT1FKFwicmVhY3QuY29udGV4dFwiKTtBYT1FKFwicmVhY3QuZm9yd2FyZF9yZWZcIik7QmE9RShcInJlYWN0LnN1c3BlbnNlXCIpO0NhPUUoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpO0RhPUUoXCJyZWFjdC5tZW1vXCIpO0VhPUUoXCJyZWFjdC5sYXp5XCIpO0ZhPUUoXCJyZWFjdC5ibG9ja1wiKTtFKFwicmVhY3Quc2NvcGVcIik7R2E9RShcInJlYWN0Lm9wYXF1ZS5pZFwiKTtIYT1FKFwicmVhY3QuZGVidWdfdHJhY2VfbW9kZVwiKTtJYT1FKFwicmVhY3Qub2Zmc2NyZWVuXCIpO0phPUUoXCJyZWFjdC5sZWdhY3lfaGlkZGVuXCIpfVxudmFyIEthPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBMYShhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9S2EmJmFbS2FdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9dmFyIE1hO2Z1bmN0aW9uIE5hKGEpe2lmKHZvaWQgMD09PU1hKXRyeXt0aHJvdyBFcnJvcigpO31jYXRjaChjKXt2YXIgYj1jLnN0YWNrLnRyaW0oKS5tYXRjaCgvXFxuKCAqKGF0ICk/KS8pO01hPWImJmJbMV18fFwiXCJ9cmV0dXJuXCJcXG5cIitNYSthfXZhciBPYT0hMTtcbmZ1bmN0aW9uIFBhKGEsYil7aWYoIWF8fE9hKXJldHVyblwiXCI7T2E9ITA7dmFyIGM9RXJyb3IucHJlcGFyZVN0YWNrVHJhY2U7RXJyb3IucHJlcGFyZVN0YWNrVHJhY2U9dm9pZCAwO3RyeXtpZihiKWlmKGI9ZnVuY3Rpb24oKXt0aHJvdyBFcnJvcigpO30sT2JqZWN0LmRlZmluZVByb3BlcnR5KGIucHJvdG90eXBlLFwicHJvcHNcIix7c2V0OmZ1bmN0aW9uKCl7dGhyb3cgRXJyb3IoKTt9fSksXCJvYmplY3RcIj09PXR5cGVvZiBSZWZsZWN0JiZSZWZsZWN0LmNvbnN0cnVjdCl7dHJ5e1JlZmxlY3QuY29uc3RydWN0KGIsW10pfWNhdGNoKGspe3ZhciBkPWt9UmVmbGVjdC5jb25zdHJ1Y3QoYSxbXSxiKX1lbHNle3RyeXtiLmNhbGwoKX1jYXRjaChrKXtkPWt9YS5jYWxsKGIucHJvdG90eXBlKX1lbHNle3RyeXt0aHJvdyBFcnJvcigpO31jYXRjaChrKXtkPWt9YSgpfX1jYXRjaChrKXtpZihrJiZkJiZcInN0cmluZ1wiPT09dHlwZW9mIGsuc3RhY2spe2Zvcih2YXIgZT1rLnN0YWNrLnNwbGl0KFwiXFxuXCIpLFxuZj1kLnN0YWNrLnNwbGl0KFwiXFxuXCIpLGc9ZS5sZW5ndGgtMSxoPWYubGVuZ3RoLTE7MTw9ZyYmMDw9aCYmZVtnXSE9PWZbaF07KWgtLTtmb3IoOzE8PWcmJjA8PWg7Zy0tLGgtLSlpZihlW2ddIT09ZltoXSl7aWYoMSE9PWd8fDEhPT1oKXtkbyBpZihnLS0saC0tLDA+aHx8ZVtnXSE9PWZbaF0pcmV0dXJuXCJcXG5cIitlW2ddLnJlcGxhY2UoXCIgYXQgbmV3IFwiLFwiIGF0IFwiKTt3aGlsZSgxPD1nJiYwPD1oKX1icmVha319fWZpbmFsbHl7T2E9ITEsRXJyb3IucHJlcGFyZVN0YWNrVHJhY2U9Y31yZXR1cm4oYT1hP2EuZGlzcGxheU5hbWV8fGEubmFtZTpcIlwiKT9OYShhKTpcIlwifVxuZnVuY3Rpb24gUWEoYSl7c3dpdGNoKGEudGFnKXtjYXNlIDU6cmV0dXJuIE5hKGEudHlwZSk7Y2FzZSAxNjpyZXR1cm4gTmEoXCJMYXp5XCIpO2Nhc2UgMTM6cmV0dXJuIE5hKFwiU3VzcGVuc2VcIik7Y2FzZSAxOTpyZXR1cm4gTmEoXCJTdXNwZW5zZUxpc3RcIik7Y2FzZSAwOmNhc2UgMjpjYXNlIDE1OnJldHVybiBhPVBhKGEudHlwZSwhMSksYTtjYXNlIDExOnJldHVybiBhPVBhKGEudHlwZS5yZW5kZXIsITEpLGE7Y2FzZSAyMjpyZXR1cm4gYT1QYShhLnR5cGUuX3JlbmRlciwhMSksYTtjYXNlIDE6cmV0dXJuIGE9UGEoYS50eXBlLCEwKSxhO2RlZmF1bHQ6cmV0dXJuXCJcIn19XG5mdW5jdGlvbiBSYShhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBhLmRpc3BsYXlOYW1lfHxhLm5hbWV8fG51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKXJldHVybiBhO3N3aXRjaChhKXtjYXNlIHVhOnJldHVyblwiRnJhZ21lbnRcIjtjYXNlIHRhOnJldHVyblwiUG9ydGFsXCI7Y2FzZSB4YTpyZXR1cm5cIlByb2ZpbGVyXCI7Y2FzZSB3YTpyZXR1cm5cIlN0cmljdE1vZGVcIjtjYXNlIEJhOnJldHVyblwiU3VzcGVuc2VcIjtjYXNlIENhOnJldHVyblwiU3VzcGVuc2VMaXN0XCJ9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHphOnJldHVybihhLmRpc3BsYXlOYW1lfHxcIkNvbnRleHRcIikrXCIuQ29uc3VtZXJcIjtjYXNlIHlhOnJldHVybihhLl9jb250ZXh0LmRpc3BsYXlOYW1lfHxcIkNvbnRleHRcIikrXCIuUHJvdmlkZXJcIjtjYXNlIEFhOnZhciBiPWEucmVuZGVyO2I9Yi5kaXNwbGF5TmFtZXx8Yi5uYW1lfHxcIlwiO1xucmV0dXJuIGEuZGlzcGxheU5hbWV8fChcIlwiIT09Yj9cIkZvcndhcmRSZWYoXCIrYitcIilcIjpcIkZvcndhcmRSZWZcIik7Y2FzZSBEYTpyZXR1cm4gUmEoYS50eXBlKTtjYXNlIEZhOnJldHVybiBSYShhLl9yZW5kZXIpO2Nhc2UgRWE6Yj1hLl9wYXlsb2FkO2E9YS5faW5pdDt0cnl7cmV0dXJuIFJhKGEoYikpfWNhdGNoKGMpe319cmV0dXJuIG51bGx9ZnVuY3Rpb24gU2EoYSl7c3dpdGNoKHR5cGVvZiBhKXtjYXNlIFwiYm9vbGVhblwiOmNhc2UgXCJudW1iZXJcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJ1bmRlZmluZWRcIjpyZXR1cm4gYTtkZWZhdWx0OnJldHVyblwiXCJ9fWZ1bmN0aW9uIFRhKGEpe3ZhciBiPWEudHlwZTtyZXR1cm4oYT1hLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09YS50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09Ynx8XCJyYWRpb1wiPT09Yil9XG5mdW5jdGlvbiBVYShhKXt2YXIgYj1UYShhKT9cImNoZWNrZWRcIjpcInZhbHVlXCIsYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGEuY29uc3RydWN0b3IucHJvdG90eXBlLGIpLGQ9XCJcIithW2JdO2lmKCFhLmhhc093blByb3BlcnR5KGIpJiZcInVuZGVmaW5lZFwiIT09dHlwZW9mIGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmdldCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuc2V0KXt2YXIgZT1jLmdldCxmPWMuc2V0O09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZS5jYWxsKHRoaXMpfSxzZXQ6ZnVuY3Rpb24oYSl7ZD1cIlwiK2E7Zi5jYWxsKHRoaXMsYSl9fSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7ZW51bWVyYWJsZTpjLmVudW1lcmFibGV9KTtyZXR1cm57Z2V0VmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gZH0sc2V0VmFsdWU6ZnVuY3Rpb24oYSl7ZD1cIlwiK2F9LHN0b3BUcmFja2luZzpmdW5jdGlvbigpe2EuX3ZhbHVlVHJhY2tlcj1cbm51bGw7ZGVsZXRlIGFbYl19fX19ZnVuY3Rpb24gVmEoYSl7YS5fdmFsdWVUcmFja2VyfHwoYS5fdmFsdWVUcmFja2VyPVVhKGEpKX1mdW5jdGlvbiBXYShhKXtpZighYSlyZXR1cm4hMTt2YXIgYj1hLl92YWx1ZVRyYWNrZXI7aWYoIWIpcmV0dXJuITA7dmFyIGM9Yi5nZXRWYWx1ZSgpO3ZhciBkPVwiXCI7YSYmKGQ9VGEoYSk/YS5jaGVja2VkP1widHJ1ZVwiOlwiZmFsc2VcIjphLnZhbHVlKTthPWQ7cmV0dXJuIGEhPT1jPyhiLnNldFZhbHVlKGEpLCEwKTohMX1mdW5jdGlvbiBYYShhKXthPWF8fChcInVuZGVmaW5lZFwiIT09dHlwZW9mIGRvY3VtZW50P2RvY3VtZW50OnZvaWQgMCk7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhKXJldHVybiBudWxsO3RyeXtyZXR1cm4gYS5hY3RpdmVFbGVtZW50fHxhLmJvZHl9Y2F0Y2goYil7cmV0dXJuIGEuYm9keX19XG5mdW5jdGlvbiBZYShhLGIpe3ZhciBjPWIuY2hlY2tlZDtyZXR1cm4gbSh7fSxiLHtkZWZhdWx0Q2hlY2tlZDp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCx2YWx1ZTp2b2lkIDAsY2hlY2tlZDpudWxsIT1jP2M6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkfSl9ZnVuY3Rpb24gWmEoYSxiKXt2YXIgYz1udWxsPT1iLmRlZmF1bHRWYWx1ZT9cIlwiOmIuZGVmYXVsdFZhbHVlLGQ9bnVsbCE9Yi5jaGVja2VkP2IuY2hlY2tlZDpiLmRlZmF1bHRDaGVja2VkO2M9U2EobnVsbCE9Yi52YWx1ZT9iLnZhbHVlOmMpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbENoZWNrZWQ6ZCxpbml0aWFsVmFsdWU6Yyxjb250cm9sbGVkOlwiY2hlY2tib3hcIj09PWIudHlwZXx8XCJyYWRpb1wiPT09Yi50eXBlP251bGwhPWIuY2hlY2tlZDpudWxsIT1iLnZhbHVlfX1mdW5jdGlvbiAkYShhLGIpe2I9Yi5jaGVja2VkO251bGwhPWImJnFhKGEsXCJjaGVja2VkXCIsYiwhMSl9XG5mdW5jdGlvbiBhYihhLGIpeyRhKGEsYik7dmFyIGM9U2EoYi52YWx1ZSksZD1iLnR5cGU7aWYobnVsbCE9YylpZihcIm51bWJlclwiPT09ZCl7aWYoMD09PWMmJlwiXCI9PT1hLnZhbHVlfHxhLnZhbHVlIT1jKWEudmFsdWU9XCJcIitjfWVsc2UgYS52YWx1ZSE9PVwiXCIrYyYmKGEudmFsdWU9XCJcIitjKTtlbHNlIGlmKFwic3VibWl0XCI9PT1kfHxcInJlc2V0XCI9PT1kKXthLnJlbW92ZUF0dHJpYnV0ZShcInZhbHVlXCIpO3JldHVybn1iLmhhc093blByb3BlcnR5KFwidmFsdWVcIik/YmIoYSxiLnR5cGUsYyk6Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSYmYmIoYSxiLnR5cGUsU2EoYi5kZWZhdWx0VmFsdWUpKTtudWxsPT1iLmNoZWNrZWQmJm51bGwhPWIuZGVmYXVsdENoZWNrZWQmJihhLmRlZmF1bHRDaGVja2VkPSEhYi5kZWZhdWx0Q2hlY2tlZCl9XG5mdW5jdGlvbiBjYihhLGIsYyl7aWYoYi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpfHxiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpKXt2YXIgZD1iLnR5cGU7aWYoIShcInN1Ym1pdFwiIT09ZCYmXCJyZXNldFwiIT09ZHx8dm9pZCAwIT09Yi52YWx1ZSYmbnVsbCE9PWIudmFsdWUpKXJldHVybjtiPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTtjfHxiPT09YS52YWx1ZXx8KGEudmFsdWU9Yik7YS5kZWZhdWx0VmFsdWU9Yn1jPWEubmFtZTtcIlwiIT09YyYmKGEubmFtZT1cIlwiKTthLmRlZmF1bHRDaGVja2VkPSEhYS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkO1wiXCIhPT1jJiYoYS5uYW1lPWMpfVxuZnVuY3Rpb24gYmIoYSxiLGMpe2lmKFwibnVtYmVyXCIhPT1ifHxYYShhLm93bmVyRG9jdW1lbnQpIT09YSludWxsPT1jP2EuZGVmYXVsdFZhbHVlPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTphLmRlZmF1bHRWYWx1ZSE9PVwiXCIrYyYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrYyl9ZnVuY3Rpb24gZGIoYSl7dmFyIGI9XCJcIjthYS5DaGlsZHJlbi5mb3JFYWNoKGEsZnVuY3Rpb24oYSl7bnVsbCE9YSYmKGIrPWEpfSk7cmV0dXJuIGJ9ZnVuY3Rpb24gZWIoYSxiKXthPW0oe2NoaWxkcmVuOnZvaWQgMH0sYik7aWYoYj1kYihiLmNoaWxkcmVuKSlhLmNoaWxkcmVuPWI7cmV0dXJuIGF9XG5mdW5jdGlvbiBmYihhLGIsYyxkKXthPWEub3B0aW9ucztpZihiKXtiPXt9O2Zvcih2YXIgZT0wO2U8Yy5sZW5ndGg7ZSsrKWJbXCIkXCIrY1tlXV09ITA7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKyllPWIuaGFzT3duUHJvcGVydHkoXCIkXCIrYVtjXS52YWx1ZSksYVtjXS5zZWxlY3RlZCE9PWUmJihhW2NdLnNlbGVjdGVkPWUpLGUmJmQmJihhW2NdLmRlZmF1bHRTZWxlY3RlZD0hMCl9ZWxzZXtjPVwiXCIrU2EoYyk7Yj1udWxsO2ZvcihlPTA7ZTxhLmxlbmd0aDtlKyspe2lmKGFbZV0udmFsdWU9PT1jKXthW2VdLnNlbGVjdGVkPSEwO2QmJihhW2VdLmRlZmF1bHRTZWxlY3RlZD0hMCk7cmV0dXJufW51bGwhPT1ifHxhW2VdLmRpc2FibGVkfHwoYj1hW2VdKX1udWxsIT09YiYmKGIuc2VsZWN0ZWQ9ITApfX1cbmZ1bmN0aW9uIGdiKGEsYil7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl0aHJvdyBFcnJvcih5KDkxKSk7cmV0dXJuIG0oe30sYix7dmFsdWU6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsY2hpbGRyZW46XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlfSl9ZnVuY3Rpb24gaGIoYSxiKXt2YXIgYz1iLnZhbHVlO2lmKG51bGw9PWMpe2M9Yi5jaGlsZHJlbjtiPWIuZGVmYXVsdFZhbHVlO2lmKG51bGwhPWMpe2lmKG51bGwhPWIpdGhyb3cgRXJyb3IoeSg5MikpO2lmKEFycmF5LmlzQXJyYXkoYykpe2lmKCEoMT49Yy5sZW5ndGgpKXRocm93IEVycm9yKHkoOTMpKTtjPWNbMF19Yj1jfW51bGw9PWImJihiPVwiXCIpO2M9Yn1hLl93cmFwcGVyU3RhdGU9e2luaXRpYWxWYWx1ZTpTYShjKX19XG5mdW5jdGlvbiBpYihhLGIpe3ZhciBjPVNhKGIudmFsdWUpLGQ9U2EoYi5kZWZhdWx0VmFsdWUpO251bGwhPWMmJihjPVwiXCIrYyxjIT09YS52YWx1ZSYmKGEudmFsdWU9YyksbnVsbD09Yi5kZWZhdWx0VmFsdWUmJmEuZGVmYXVsdFZhbHVlIT09YyYmKGEuZGVmYXVsdFZhbHVlPWMpKTtudWxsIT1kJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitkKX1mdW5jdGlvbiBqYihhKXt2YXIgYj1hLnRleHRDb250ZW50O2I9PT1hLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlJiZcIlwiIT09YiYmbnVsbCE9PWImJihhLnZhbHVlPWIpfXZhciBrYj17aHRtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixtYXRobWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCIsc3ZnOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIn07XG5mdW5jdGlvbiBsYihhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fWZ1bmN0aW9uIG1iKGEsYil7cmV0dXJuIG51bGw9PWF8fFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9sYihiKTpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI9PT1hJiZcImZvcmVpZ25PYmplY3RcIj09PWI/XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI6YX1cbnZhciBuYixvYj1mdW5jdGlvbihhKXtyZXR1cm5cInVuZGVmaW5lZFwiIT09dHlwZW9mIE1TQXBwJiZNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbj9mdW5jdGlvbihiLGMsZCxlKXtNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbihmdW5jdGlvbigpe3JldHVybiBhKGIsYyxkLGUpfSl9OmF9KGZ1bmN0aW9uKGEsYil7aWYoYS5uYW1lc3BhY2VVUkkhPT1rYi5zdmd8fFwiaW5uZXJIVE1MXCJpbiBhKWEuaW5uZXJIVE1MPWI7ZWxzZXtuYj1uYnx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtuYi5pbm5lckhUTUw9XCI8c3ZnPlwiK2IudmFsdWVPZigpLnRvU3RyaW5nKCkrXCI8L3N2Zz5cIjtmb3IoYj1uYi5maXJzdENoaWxkO2EuZmlyc3RDaGlsZDspYS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpO2Zvcig7Yi5maXJzdENoaWxkOylhLmFwcGVuZENoaWxkKGIuZmlyc3RDaGlsZCl9fSk7XG5mdW5jdGlvbiBwYihhLGIpe2lmKGIpe3ZhciBjPWEuZmlyc3RDaGlsZDtpZihjJiZjPT09YS5sYXN0Q2hpbGQmJjM9PT1jLm5vZGVUeXBlKXtjLm5vZGVWYWx1ZT1iO3JldHVybn19YS50ZXh0Q29udGVudD1ifVxudmFyIHFiPXthbmltYXRpb25JdGVyYXRpb25Db3VudDohMCxib3JkZXJJbWFnZU91dHNldDohMCxib3JkZXJJbWFnZVNsaWNlOiEwLGJvcmRlckltYWdlV2lkdGg6ITAsYm94RmxleDohMCxib3hGbGV4R3JvdXA6ITAsYm94T3JkaW5hbEdyb3VwOiEwLGNvbHVtbkNvdW50OiEwLGNvbHVtbnM6ITAsZmxleDohMCxmbGV4R3JvdzohMCxmbGV4UG9zaXRpdmU6ITAsZmxleFNocmluazohMCxmbGV4TmVnYXRpdmU6ITAsZmxleE9yZGVyOiEwLGdyaWRBcmVhOiEwLGdyaWRSb3c6ITAsZ3JpZFJvd0VuZDohMCxncmlkUm93U3BhbjohMCxncmlkUm93U3RhcnQ6ITAsZ3JpZENvbHVtbjohMCxncmlkQ29sdW1uRW5kOiEwLGdyaWRDb2x1bW5TcGFuOiEwLGdyaWRDb2x1bW5TdGFydDohMCxmb250V2VpZ2h0OiEwLGxpbmVDbGFtcDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx0YWJTaXplOiEwLHdpZG93czohMCx6SW5kZXg6ITAsem9vbTohMCxmaWxsT3BhY2l0eTohMCxcbmZsb29kT3BhY2l0eTohMCxzdG9wT3BhY2l0eTohMCxzdHJva2VEYXNoYXJyYXk6ITAsc3Ryb2tlRGFzaG9mZnNldDohMCxzdHJva2VNaXRlcmxpbWl0OiEwLHN0cm9rZU9wYWNpdHk6ITAsc3Ryb2tlV2lkdGg6ITB9LHJiPVtcIldlYmtpdFwiLFwibXNcIixcIk1velwiLFwiT1wiXTtPYmplY3Qua2V5cyhxYikuZm9yRWFjaChmdW5jdGlvbihhKXtyYi5mb3JFYWNoKGZ1bmN0aW9uKGIpe2I9YithLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Euc3Vic3RyaW5nKDEpO3FiW2JdPXFiW2FdfSl9KTtmdW5jdGlvbiBzYihhLGIsYyl7cmV0dXJuIG51bGw9PWJ8fFwiYm9vbGVhblwiPT09dHlwZW9mIGJ8fFwiXCI9PT1iP1wiXCI6Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBifHwwPT09Ynx8cWIuaGFzT3duUHJvcGVydHkoYSkmJnFiW2FdPyhcIlwiK2IpLnRyaW0oKTpiK1wicHhcIn1cbmZ1bmN0aW9uIHRiKGEsYil7YT1hLnN0eWxlO2Zvcih2YXIgYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPTA9PT1jLmluZGV4T2YoXCItLVwiKSxlPXNiKGMsYltjXSxkKTtcImZsb2F0XCI9PT1jJiYoYz1cImNzc0Zsb2F0XCIpO2Q/YS5zZXRQcm9wZXJ0eShjLGUpOmFbY109ZX19dmFyIHViPW0oe21lbnVpdGVtOiEwfSx7YXJlYTohMCxiYXNlOiEwLGJyOiEwLGNvbDohMCxlbWJlZDohMCxocjohMCxpbWc6ITAsaW5wdXQ6ITAsa2V5Z2VuOiEwLGxpbms6ITAsbWV0YTohMCxwYXJhbTohMCxzb3VyY2U6ITAsdHJhY2s6ITAsd2JyOiEwfSk7XG5mdW5jdGlvbiB2YihhLGIpe2lmKGIpe2lmKHViW2FdJiYobnVsbCE9Yi5jaGlsZHJlbnx8bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IoeSgxMzcsYSkpO2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpe2lmKG51bGwhPWIuY2hpbGRyZW4pdGhyb3cgRXJyb3IoeSg2MCkpO2lmKCEoXCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZcIl9faHRtbFwiaW4gYi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IoeSg2MSkpO31pZihudWxsIT1iLnN0eWxlJiZcIm9iamVjdFwiIT09dHlwZW9mIGIuc3R5bGUpdGhyb3cgRXJyb3IoeSg2MikpO319XG5mdW5jdGlvbiB3YihhLGIpe2lmKC0xPT09YS5pbmRleE9mKFwiLVwiKSlyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGIuaXM7c3dpdGNoKGEpe2Nhc2UgXCJhbm5vdGF0aW9uLXhtbFwiOmNhc2UgXCJjb2xvci1wcm9maWxlXCI6Y2FzZSBcImZvbnQtZmFjZVwiOmNhc2UgXCJmb250LWZhY2Utc3JjXCI6Y2FzZSBcImZvbnQtZmFjZS11cmlcIjpjYXNlIFwiZm9udC1mYWNlLWZvcm1hdFwiOmNhc2UgXCJmb250LWZhY2UtbmFtZVwiOmNhc2UgXCJtaXNzaW5nLWdseXBoXCI6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMH19ZnVuY3Rpb24geGIoYSl7YT1hLnRhcmdldHx8YS5zcmNFbGVtZW50fHx3aW5kb3c7YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCYmKGE9YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCk7cmV0dXJuIDM9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphfXZhciB5Yj1udWxsLHpiPW51bGwsQWI9bnVsbDtcbmZ1bmN0aW9uIEJiKGEpe2lmKGE9Q2IoYSkpe2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiB5Yil0aHJvdyBFcnJvcih5KDI4MCkpO3ZhciBiPWEuc3RhdGVOb2RlO2ImJihiPURiKGIpLHliKGEuc3RhdGVOb2RlLGEudHlwZSxiKSl9fWZ1bmN0aW9uIEViKGEpe3piP0FiP0FiLnB1c2goYSk6QWI9W2FdOnpiPWF9ZnVuY3Rpb24gRmIoKXtpZih6Yil7dmFyIGE9emIsYj1BYjtBYj16Yj1udWxsO0JiKGEpO2lmKGIpZm9yKGE9MDthPGIubGVuZ3RoO2ErKylCYihiW2FdKX19ZnVuY3Rpb24gR2IoYSxiKXtyZXR1cm4gYShiKX1mdW5jdGlvbiBIYihhLGIsYyxkLGUpe3JldHVybiBhKGIsYyxkLGUpfWZ1bmN0aW9uIEliKCl7fXZhciBKYj1HYixLYj0hMSxMYj0hMTtmdW5jdGlvbiBNYigpe2lmKG51bGwhPT16Ynx8bnVsbCE9PUFiKUliKCksRmIoKX1cbmZ1bmN0aW9uIE5iKGEsYixjKXtpZihMYilyZXR1cm4gYShiLGMpO0xiPSEwO3RyeXtyZXR1cm4gSmIoYSxiLGMpfWZpbmFsbHl7TGI9ITEsTWIoKX19XG5mdW5jdGlvbiBPYihhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKG51bGw9PT1jKXJldHVybiBudWxsO3ZhciBkPURiKGMpO2lmKG51bGw9PT1kKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjpjYXNlIFwib25Nb3VzZUVudGVyXCI6KGQ9IWQuZGlzYWJsZWQpfHwoYT1hLnR5cGUsZD0hKFwiYnV0dG9uXCI9PT1hfHxcImlucHV0XCI9PT1hfHxcInNlbGVjdFwiPT09YXx8XCJ0ZXh0YXJlYVwiPT09YSkpO2E9IWQ7YnJlYWsgYTtkZWZhdWx0OmE9ITF9aWYoYSlyZXR1cm4gbnVsbDtpZihjJiZcImZ1bmN0aW9uXCIhPT1cbnR5cGVvZiBjKXRocm93IEVycm9yKHkoMjMxLGIsdHlwZW9mIGMpKTtyZXR1cm4gY312YXIgUGI9ITE7aWYoZmEpdHJ5e3ZhciBRYj17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoUWIsXCJwYXNzaXZlXCIse2dldDpmdW5jdGlvbigpe1BiPSEwfX0pO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwidGVzdFwiLFFiLFFiKTt3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRlc3RcIixRYixRYil9Y2F0Y2goYSl7UGI9ITF9ZnVuY3Rpb24gUmIoYSxiLGMsZCxlLGYsZyxoLGspe3ZhciBsPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywzKTt0cnl7Yi5hcHBseShjLGwpfWNhdGNoKG4pe3RoaXMub25FcnJvcihuKX19dmFyIFNiPSExLFRiPW51bGwsVWI9ITEsVmI9bnVsbCxXYj17b25FcnJvcjpmdW5jdGlvbihhKXtTYj0hMDtUYj1hfX07ZnVuY3Rpb24gWGIoYSxiLGMsZCxlLGYsZyxoLGspe1NiPSExO1RiPW51bGw7UmIuYXBwbHkoV2IsYXJndW1lbnRzKX1cbmZ1bmN0aW9uIFliKGEsYixjLGQsZSxmLGcsaCxrKXtYYi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYoU2Ipe2lmKFNiKXt2YXIgbD1UYjtTYj0hMTtUYj1udWxsfWVsc2UgdGhyb3cgRXJyb3IoeSgxOTgpKTtVYnx8KFViPSEwLFZiPWwpfX1mdW5jdGlvbiBaYihhKXt2YXIgYj1hLGM9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7YT1iO2RvIGI9YSwwIT09KGIuZmxhZ3MmMTAyNikmJihjPWIucmV0dXJuKSxhPWIucmV0dXJuO3doaWxlKGEpfXJldHVybiAzPT09Yi50YWc/YzpudWxsfWZ1bmN0aW9uICRiKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09YiYmKGE9YS5hbHRlcm5hdGUsbnVsbCE9PWEmJihiPWEubWVtb2l6ZWRTdGF0ZSkpO2lmKG51bGwhPT1iKXJldHVybiBiLmRlaHlkcmF0ZWR9cmV0dXJuIG51bGx9ZnVuY3Rpb24gYWMoYSl7aWYoWmIoYSkhPT1hKXRocm93IEVycm9yKHkoMTg4KSk7fVxuZnVuY3Rpb24gYmMoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpe2I9WmIoYSk7aWYobnVsbD09PWIpdGhyb3cgRXJyb3IoeSgxODgpKTtyZXR1cm4gYiE9PWE/bnVsbDphfWZvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jLnJldHVybjtpZihudWxsPT09ZSlicmVhazt2YXIgZj1lLmFsdGVybmF0ZTtpZihudWxsPT09Zil7ZD1lLnJldHVybjtpZihudWxsIT09ZCl7Yz1kO2NvbnRpbnVlfWJyZWFrfWlmKGUuY2hpbGQ9PT1mLmNoaWxkKXtmb3IoZj1lLmNoaWxkO2Y7KXtpZihmPT09YylyZXR1cm4gYWMoZSksYTtpZihmPT09ZClyZXR1cm4gYWMoZSksYjtmPWYuc2libGluZ310aHJvdyBFcnJvcih5KDE4OCkpO31pZihjLnJldHVybiE9PWQucmV0dXJuKWM9ZSxkPWY7ZWxzZXtmb3IodmFyIGc9ITEsaD1lLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWU7ZD1mO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZTtjPWY7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpe2ZvcihoPWYuY2hpbGQ7aDspe2lmKGg9PT1cbmMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXRocm93IEVycm9yKHkoMTg5KSk7fX1pZihjLmFsdGVybmF0ZSE9PWQpdGhyb3cgRXJyb3IoeSgxOTApKTt9aWYoMyE9PWMudGFnKXRocm93IEVycm9yKHkoMTg4KSk7cmV0dXJuIGMuc3RhdGVOb2RlLmN1cnJlbnQ9PT1jP2E6Yn1mdW5jdGlvbiBjYyhhKXthPWJjKGEpO2lmKCFhKXJldHVybiBudWxsO2Zvcih2YXIgYj1hOzspe2lmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXJldHVybiBiO2lmKGIuY2hpbGQpYi5jaGlsZC5yZXR1cm49YixiPWIuY2hpbGQ7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoOyFiLnNpYmxpbmc7KXtpZighYi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fXJldHVybiBudWxsfVxuZnVuY3Rpb24gZGMoYSxiKXtmb3IodmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWI7KXtpZihiPT09YXx8Yj09PWMpcmV0dXJuITA7Yj1iLnJldHVybn1yZXR1cm4hMX12YXIgZWMsZmMsZ2MsaGMsaWM9ITEsamM9W10sa2M9bnVsbCxsYz1udWxsLG1jPW51bGwsbmM9bmV3IE1hcCxvYz1uZXcgTWFwLHBjPVtdLHFjPVwibW91c2Vkb3duIG1vdXNldXAgdG91Y2hjYW5jZWwgdG91Y2hlbmQgdG91Y2hzdGFydCBhdXhjbGljayBkYmxjbGljayBwb2ludGVyY2FuY2VsIHBvaW50ZXJkb3duIHBvaW50ZXJ1cCBkcmFnZW5kIGRyYWdzdGFydCBkcm9wIGNvbXBvc2l0aW9uZW5kIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBpbnB1dCB0ZXh0SW5wdXQgY29weSBjdXQgcGFzdGUgY2xpY2sgY2hhbmdlIGNvbnRleHRtZW51IHJlc2V0IHN1Ym1pdFwiLnNwbGl0KFwiIFwiKTtcbmZ1bmN0aW9uIHJjKGEsYixjLGQsZSl7cmV0dXJue2Jsb2NrZWRPbjphLGRvbUV2ZW50TmFtZTpiLGV2ZW50U3lzdGVtRmxhZ3M6Y3wxNixuYXRpdmVFdmVudDplLHRhcmdldENvbnRhaW5lcnM6W2RdfX1mdW5jdGlvbiBzYyhhLGIpe3N3aXRjaChhKXtjYXNlIFwiZm9jdXNpblwiOmNhc2UgXCJmb2N1c291dFwiOmtjPW51bGw7YnJlYWs7Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnbGVhdmVcIjpsYz1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwibW91c2VvdXRcIjptYz1udWxsO2JyZWFrO2Nhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVyb3V0XCI6bmMuZGVsZXRlKGIucG9pbnRlcklkKTticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6b2MuZGVsZXRlKGIucG9pbnRlcklkKX19XG5mdW5jdGlvbiB0YyhhLGIsYyxkLGUsZil7aWYobnVsbD09PWF8fGEubmF0aXZlRXZlbnQhPT1mKXJldHVybiBhPXJjKGIsYyxkLGUsZiksbnVsbCE9PWImJihiPUNiKGIpLG51bGwhPT1iJiZmYyhiKSksYTthLmV2ZW50U3lzdGVtRmxhZ3N8PWQ7Yj1hLnRhcmdldENvbnRhaW5lcnM7bnVsbCE9PWUmJi0xPT09Yi5pbmRleE9mKGUpJiZiLnB1c2goZSk7cmV0dXJuIGF9XG5mdW5jdGlvbiB1YyhhLGIsYyxkLGUpe3N3aXRjaChiKXtjYXNlIFwiZm9jdXNpblwiOnJldHVybiBrYz10YyhrYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJkcmFnZW50ZXJcIjpyZXR1cm4gbGM9dGMobGMsYSxiLGMsZCxlKSwhMDtjYXNlIFwibW91c2VvdmVyXCI6cmV0dXJuIG1jPXRjKG1jLGEsYixjLGQsZSksITA7Y2FzZSBcInBvaW50ZXJvdmVyXCI6dmFyIGY9ZS5wb2ludGVySWQ7bmMuc2V0KGYsdGMobmMuZ2V0KGYpfHxudWxsLGEsYixjLGQsZSkpO3JldHVybiEwO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOnJldHVybiBmPWUucG9pbnRlcklkLG9jLnNldChmLHRjKG9jLmdldChmKXx8bnVsbCxhLGIsYyxkLGUpKSwhMH1yZXR1cm4hMX1cbmZ1bmN0aW9uIHZjKGEpe3ZhciBiPXdjKGEudGFyZ2V0KTtpZihudWxsIT09Yil7dmFyIGM9WmIoYik7aWYobnVsbCE9PWMpaWYoYj1jLnRhZywxMz09PWIpe2lmKGI9JGIoYyksbnVsbCE9PWIpe2EuYmxvY2tlZE9uPWI7aGMoYS5sYW5lUHJpb3JpdHksZnVuY3Rpb24oKXtyLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShhLnByaW9yaXR5LGZ1bmN0aW9uKCl7Z2MoYyl9KX0pO3JldHVybn19ZWxzZSBpZigzPT09YiYmYy5zdGF0ZU5vZGUuaHlkcmF0ZSl7YS5ibG9ja2VkT249Mz09PWMudGFnP2Muc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtyZXR1cm59fWEuYmxvY2tlZE9uPW51bGx9XG5mdW5jdGlvbiB4YyhhKXtpZihudWxsIT09YS5ibG9ja2VkT24pcmV0dXJuITE7Zm9yKHZhciBiPWEudGFyZ2V0Q29udGFpbmVyczswPGIubGVuZ3RoOyl7dmFyIGM9eWMoYS5kb21FdmVudE5hbWUsYS5ldmVudFN5c3RlbUZsYWdzLGJbMF0sYS5uYXRpdmVFdmVudCk7aWYobnVsbCE9PWMpcmV0dXJuIGI9Q2IoYyksbnVsbCE9PWImJmZjKGIpLGEuYmxvY2tlZE9uPWMsITE7Yi5zaGlmdCgpfXJldHVybiEwfWZ1bmN0aW9uIHpjKGEsYixjKXt4YyhhKSYmYy5kZWxldGUoYil9XG5mdW5jdGlvbiBBYygpe2ZvcihpYz0hMTswPGpjLmxlbmd0aDspe3ZhciBhPWpjWzBdO2lmKG51bGwhPT1hLmJsb2NrZWRPbil7YT1DYihhLmJsb2NrZWRPbik7bnVsbCE9PWEmJmVjKGEpO2JyZWFrfWZvcih2YXIgYj1hLnRhcmdldENvbnRhaW5lcnM7MDxiLmxlbmd0aDspe3ZhciBjPXljKGEuZG9tRXZlbnROYW1lLGEuZXZlbnRTeXN0ZW1GbGFncyxiWzBdLGEubmF0aXZlRXZlbnQpO2lmKG51bGwhPT1jKXthLmJsb2NrZWRPbj1jO2JyZWFrfWIuc2hpZnQoKX1udWxsPT09YS5ibG9ja2VkT24mJmpjLnNoaWZ0KCl9bnVsbCE9PWtjJiZ4YyhrYykmJihrYz1udWxsKTtudWxsIT09bGMmJnhjKGxjKSYmKGxjPW51bGwpO251bGwhPT1tYyYmeGMobWMpJiYobWM9bnVsbCk7bmMuZm9yRWFjaCh6Yyk7b2MuZm9yRWFjaCh6Yyl9XG5mdW5jdGlvbiBCYyhhLGIpe2EuYmxvY2tlZE9uPT09YiYmKGEuYmxvY2tlZE9uPW51bGwsaWN8fChpYz0hMCxyLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2soci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxBYykpKX1cbmZ1bmN0aW9uIENjKGEpe2Z1bmN0aW9uIGIoYil7cmV0dXJuIEJjKGIsYSl9aWYoMDxqYy5sZW5ndGgpe0JjKGpjWzBdLGEpO2Zvcih2YXIgYz0xO2M8amMubGVuZ3RoO2MrKyl7dmFyIGQ9amNbY107ZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCl9fW51bGwhPT1rYyYmQmMoa2MsYSk7bnVsbCE9PWxjJiZCYyhsYyxhKTtudWxsIT09bWMmJkJjKG1jLGEpO25jLmZvckVhY2goYik7b2MuZm9yRWFjaChiKTtmb3IoYz0wO2M8cGMubGVuZ3RoO2MrKylkPXBjW2NdLGQuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpO2Zvcig7MDxwYy5sZW5ndGgmJihjPXBjWzBdLG51bGw9PT1jLmJsb2NrZWRPbik7KXZjKGMpLG51bGw9PT1jLmJsb2NrZWRPbiYmcGMuc2hpZnQoKX1cbmZ1bmN0aW9uIERjKGEsYil7dmFyIGM9e307Y1thLnRvTG93ZXJDYXNlKCldPWIudG9Mb3dlckNhc2UoKTtjW1wiV2Via2l0XCIrYV09XCJ3ZWJraXRcIitiO2NbXCJNb3pcIithXT1cIm1velwiK2I7cmV0dXJuIGN9dmFyIEVjPXthbmltYXRpb25lbmQ6RGMoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246RGMoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDpEYyhcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDpEYyhcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LEZjPXt9LEdjPXt9O1xuZmEmJihHYz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlLFwiQW5pbWF0aW9uRXZlbnRcImluIHdpbmRvd3x8KGRlbGV0ZSBFYy5hbmltYXRpb25lbmQuYW5pbWF0aW9uLGRlbGV0ZSBFYy5hbmltYXRpb25pdGVyYXRpb24uYW5pbWF0aW9uLGRlbGV0ZSBFYy5hbmltYXRpb25zdGFydC5hbmltYXRpb24pLFwiVHJhbnNpdGlvbkV2ZW50XCJpbiB3aW5kb3d8fGRlbGV0ZSBFYy50cmFuc2l0aW9uZW5kLnRyYW5zaXRpb24pO2Z1bmN0aW9uIEhjKGEpe2lmKEZjW2FdKXJldHVybiBGY1thXTtpZighRWNbYV0pcmV0dXJuIGE7dmFyIGI9RWNbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gR2MpcmV0dXJuIEZjW2FdPWJbY107cmV0dXJuIGF9XG52YXIgSWM9SGMoXCJhbmltYXRpb25lbmRcIiksSmM9SGMoXCJhbmltYXRpb25pdGVyYXRpb25cIiksS2M9SGMoXCJhbmltYXRpb25zdGFydFwiKSxMYz1IYyhcInRyYW5zaXRpb25lbmRcIiksTWM9bmV3IE1hcCxOYz1uZXcgTWFwLE9jPVtcImFib3J0XCIsXCJhYm9ydFwiLEljLFwiYW5pbWF0aW9uRW5kXCIsSmMsXCJhbmltYXRpb25JdGVyYXRpb25cIixLYyxcImFuaW1hdGlvblN0YXJ0XCIsXCJjYW5wbGF5XCIsXCJjYW5QbGF5XCIsXCJjYW5wbGF5dGhyb3VnaFwiLFwiY2FuUGxheVRocm91Z2hcIixcImR1cmF0aW9uY2hhbmdlXCIsXCJkdXJhdGlvbkNoYW5nZVwiLFwiZW1wdGllZFwiLFwiZW1wdGllZFwiLFwiZW5jcnlwdGVkXCIsXCJlbmNyeXB0ZWRcIixcImVuZGVkXCIsXCJlbmRlZFwiLFwiZXJyb3JcIixcImVycm9yXCIsXCJnb3Rwb2ludGVyY2FwdHVyZVwiLFwiZ290UG9pbnRlckNhcHR1cmVcIixcImxvYWRcIixcImxvYWRcIixcImxvYWRlZGRhdGFcIixcImxvYWRlZERhdGFcIixcImxvYWRlZG1ldGFkYXRhXCIsXCJsb2FkZWRNZXRhZGF0YVwiLFwibG9hZHN0YXJ0XCIsXCJsb2FkU3RhcnRcIixcblwibG9zdHBvaW50ZXJjYXB0dXJlXCIsXCJsb3N0UG9pbnRlckNhcHR1cmVcIixcInBsYXlpbmdcIixcInBsYXlpbmdcIixcInByb2dyZXNzXCIsXCJwcm9ncmVzc1wiLFwic2Vla2luZ1wiLFwic2Vla2luZ1wiLFwic3RhbGxlZFwiLFwic3RhbGxlZFwiLFwic3VzcGVuZFwiLFwic3VzcGVuZFwiLFwidGltZXVwZGF0ZVwiLFwidGltZVVwZGF0ZVwiLExjLFwidHJhbnNpdGlvbkVuZFwiLFwid2FpdGluZ1wiLFwid2FpdGluZ1wiXTtmdW5jdGlvbiBQYyhhLGIpe2Zvcih2YXIgYz0wO2M8YS5sZW5ndGg7Yys9Mil7dmFyIGQ9YVtjXSxlPWFbYysxXTtlPVwib25cIisoZVswXS50b1VwcGVyQ2FzZSgpK2Uuc2xpY2UoMSkpO05jLnNldChkLGIpO01jLnNldChkLGUpO2RhKGUsW2RdKX19dmFyIFFjPXIudW5zdGFibGVfbm93O1FjKCk7dmFyIEY9ODtcbmZ1bmN0aW9uIFJjKGEpe2lmKDAhPT0oMSZhKSlyZXR1cm4gRj0xNSwxO2lmKDAhPT0oMiZhKSlyZXR1cm4gRj0xNCwyO2lmKDAhPT0oNCZhKSlyZXR1cm4gRj0xMyw0O3ZhciBiPTI0JmE7aWYoMCE9PWIpcmV0dXJuIEY9MTIsYjtpZigwIT09KGEmMzIpKXJldHVybiBGPTExLDMyO2I9MTkyJmE7aWYoMCE9PWIpcmV0dXJuIEY9MTAsYjtpZigwIT09KGEmMjU2KSlyZXR1cm4gRj05LDI1NjtiPTM1ODQmYTtpZigwIT09YilyZXR1cm4gRj04LGI7aWYoMCE9PShhJjQwOTYpKXJldHVybiBGPTcsNDA5NjtiPTQxODYxMTImYTtpZigwIT09YilyZXR1cm4gRj02LGI7Yj02MjkxNDU2MCZhO2lmKDAhPT1iKXJldHVybiBGPTUsYjtpZihhJjY3MTA4ODY0KXJldHVybiBGPTQsNjcxMDg4NjQ7aWYoMCE9PShhJjEzNDIxNzcyOCkpcmV0dXJuIEY9MywxMzQyMTc3Mjg7Yj04MDUzMDYzNjgmYTtpZigwIT09YilyZXR1cm4gRj0yLGI7aWYoMCE9PSgxMDczNzQxODI0JmEpKXJldHVybiBGPTEsMTA3Mzc0MTgyNDtcbkY9ODtyZXR1cm4gYX1mdW5jdGlvbiBTYyhhKXtzd2l0Y2goYSl7Y2FzZSA5OTpyZXR1cm4gMTU7Y2FzZSA5ODpyZXR1cm4gMTA7Y2FzZSA5NzpjYXNlIDk2OnJldHVybiA4O2Nhc2UgOTU6cmV0dXJuIDI7ZGVmYXVsdDpyZXR1cm4gMH19ZnVuY3Rpb24gVGMoYSl7c3dpdGNoKGEpe2Nhc2UgMTU6Y2FzZSAxNDpyZXR1cm4gOTk7Y2FzZSAxMzpjYXNlIDEyOmNhc2UgMTE6Y2FzZSAxMDpyZXR1cm4gOTg7Y2FzZSA5OmNhc2UgODpjYXNlIDc6Y2FzZSA2OmNhc2UgNDpjYXNlIDU6cmV0dXJuIDk3O2Nhc2UgMzpjYXNlIDI6Y2FzZSAxOnJldHVybiA5NTtjYXNlIDA6cmV0dXJuIDkwO2RlZmF1bHQ6dGhyb3cgRXJyb3IoeSgzNTgsYSkpO319XG5mdW5jdGlvbiBVYyhhLGIpe3ZhciBjPWEucGVuZGluZ0xhbmVzO2lmKDA9PT1jKXJldHVybiBGPTA7dmFyIGQ9MCxlPTAsZj1hLmV4cGlyZWRMYW5lcyxnPWEuc3VzcGVuZGVkTGFuZXMsaD1hLnBpbmdlZExhbmVzO2lmKDAhPT1mKWQ9ZixlPUY9MTU7ZWxzZSBpZihmPWMmMTM0MjE3NzI3LDAhPT1mKXt2YXIgaz1mJn5nOzAhPT1rPyhkPVJjKGspLGU9Rik6KGgmPWYsMCE9PWgmJihkPVJjKGgpLGU9RikpfWVsc2UgZj1jJn5nLDAhPT1mPyhkPVJjKGYpLGU9Rik6MCE9PWgmJihkPVJjKGgpLGU9Rik7aWYoMD09PWQpcmV0dXJuIDA7ZD0zMS1WYyhkKTtkPWMmKCgwPmQ/MDoxPDxkKTw8MSktMTtpZigwIT09YiYmYiE9PWQmJjA9PT0oYiZnKSl7UmMoYik7aWYoZTw9RilyZXR1cm4gYjtGPWV9Yj1hLmVudGFuZ2xlZExhbmVzO2lmKDAhPT1iKWZvcihhPWEuZW50YW5nbGVtZW50cyxiJj1kOzA8YjspYz0zMS1WYyhiKSxlPTE8PGMsZHw9YVtjXSxiJj1+ZTtyZXR1cm4gZH1cbmZ1bmN0aW9uIFdjKGEpe2E9YS5wZW5kaW5nTGFuZXMmLTEwNzM3NDE4MjU7cmV0dXJuIDAhPT1hP2E6YSYxMDczNzQxODI0PzEwNzM3NDE4MjQ6MH1mdW5jdGlvbiBYYyhhLGIpe3N3aXRjaChhKXtjYXNlIDE1OnJldHVybiAxO2Nhc2UgMTQ6cmV0dXJuIDI7Y2FzZSAxMjpyZXR1cm4gYT1ZYygyNCZ+YiksMD09PWE/WGMoMTAsYik6YTtjYXNlIDEwOnJldHVybiBhPVljKDE5MiZ+YiksMD09PWE/WGMoOCxiKTphO2Nhc2UgODpyZXR1cm4gYT1ZYygzNTg0Jn5iKSwwPT09YSYmKGE9WWMoNDE4NjExMiZ+YiksMD09PWEmJihhPTUxMikpLGE7Y2FzZSAyOnJldHVybiBiPVljKDgwNTMwNjM2OCZ+YiksMD09PWImJihiPTI2ODQzNTQ1NiksYn10aHJvdyBFcnJvcih5KDM1OCxhKSk7fWZ1bmN0aW9uIFljKGEpe3JldHVybiBhJi1hfWZ1bmN0aW9uIFpjKGEpe2Zvcih2YXIgYj1bXSxjPTA7MzE+YztjKyspYi5wdXNoKGEpO3JldHVybiBifVxuZnVuY3Rpb24gJGMoYSxiLGMpe2EucGVuZGluZ0xhbmVzfD1iO3ZhciBkPWItMTthLnN1c3BlbmRlZExhbmVzJj1kO2EucGluZ2VkTGFuZXMmPWQ7YT1hLmV2ZW50VGltZXM7Yj0zMS1WYyhiKTthW2JdPWN9dmFyIFZjPU1hdGguY2x6MzI/TWF0aC5jbHozMjphZCxiZD1NYXRoLmxvZyxjZD1NYXRoLkxOMjtmdW5jdGlvbiBhZChhKXtyZXR1cm4gMD09PWE/MzI6MzEtKGJkKGEpL2NkfDApfDB9dmFyIGRkPXIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHksZWQ9ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHksZmQ9ITA7ZnVuY3Rpb24gZ2QoYSxiLGMsZCl7S2J8fEliKCk7dmFyIGU9aGQsZj1LYjtLYj0hMDt0cnl7SGIoZSxhLGIsYyxkKX1maW5hbGx5eyhLYj1mKXx8TWIoKX19ZnVuY3Rpb24gaWQoYSxiLGMsZCl7ZWQoZGQsaGQuYmluZChudWxsLGEsYixjLGQpKX1cbmZ1bmN0aW9uIGhkKGEsYixjLGQpe2lmKGZkKXt2YXIgZTtpZigoZT0wPT09KGImNCkpJiYwPGpjLmxlbmd0aCYmLTE8cWMuaW5kZXhPZihhKSlhPXJjKG51bGwsYSxiLGMsZCksamMucHVzaChhKTtlbHNle3ZhciBmPXljKGEsYixjLGQpO2lmKG51bGw9PT1mKWUmJnNjKGEsZCk7ZWxzZXtpZihlKXtpZigtMTxxYy5pbmRleE9mKGEpKXthPXJjKGYsYSxiLGMsZCk7amMucHVzaChhKTtyZXR1cm59aWYodWMoZixhLGIsYyxkKSlyZXR1cm47c2MoYSxkKX1qZChhLGIsZCxudWxsLGMpfX19fVxuZnVuY3Rpb24geWMoYSxiLGMsZCl7dmFyIGU9eGIoZCk7ZT13YyhlKTtpZihudWxsIT09ZSl7dmFyIGY9WmIoZSk7aWYobnVsbD09PWYpZT1udWxsO2Vsc2V7dmFyIGc9Zi50YWc7aWYoMTM9PT1nKXtlPSRiKGYpO2lmKG51bGwhPT1lKXJldHVybiBlO2U9bnVsbH1lbHNlIGlmKDM9PT1nKXtpZihmLnN0YXRlTm9kZS5oeWRyYXRlKXJldHVybiAzPT09Zi50YWc/Zi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzpudWxsO2U9bnVsbH1lbHNlIGYhPT1lJiYoZT1udWxsKX19amQoYSxiLGQsZSxjKTtyZXR1cm4gbnVsbH12YXIga2Q9bnVsbCxsZD1udWxsLG1kPW51bGw7XG5mdW5jdGlvbiBuZCgpe2lmKG1kKXJldHVybiBtZDt2YXIgYSxiPWxkLGM9Yi5sZW5ndGgsZCxlPVwidmFsdWVcImluIGtkP2tkLnZhbHVlOmtkLnRleHRDb250ZW50LGY9ZS5sZW5ndGg7Zm9yKGE9MDthPGMmJmJbYV09PT1lW2FdO2ErKyk7dmFyIGc9Yy1hO2ZvcihkPTE7ZDw9ZyYmYltjLWRdPT09ZVtmLWRdO2QrKyk7cmV0dXJuIG1kPWUuc2xpY2UoYSwxPGQ/MS1kOnZvaWQgMCl9ZnVuY3Rpb24gb2QoYSl7dmFyIGI9YS5rZXlDb2RlO1wiY2hhckNvZGVcImluIGE/KGE9YS5jaGFyQ29kZSwwPT09YSYmMTM9PT1iJiYoYT0xMykpOmE9YjsxMD09PWEmJihhPTEzKTtyZXR1cm4gMzI8PWF8fDEzPT09YT9hOjB9ZnVuY3Rpb24gcGQoKXtyZXR1cm4hMH1mdW5jdGlvbiBxZCgpe3JldHVybiExfVxuZnVuY3Rpb24gcmQoYSl7ZnVuY3Rpb24gYihiLGQsZSxmLGcpe3RoaXMuX3JlYWN0TmFtZT1iO3RoaXMuX3RhcmdldEluc3Q9ZTt0aGlzLnR5cGU9ZDt0aGlzLm5hdGl2ZUV2ZW50PWY7dGhpcy50YXJnZXQ9Zzt0aGlzLmN1cnJlbnRUYXJnZXQ9bnVsbDtmb3IodmFyIGMgaW4gYSlhLmhhc093blByb3BlcnR5KGMpJiYoYj1hW2NdLHRoaXNbY109Yj9iKGYpOmZbY10pO3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPShudWxsIT1mLmRlZmF1bHRQcmV2ZW50ZWQ/Zi5kZWZhdWx0UHJldmVudGVkOiExPT09Zi5yZXR1cm5WYWx1ZSk/cGQ6cWQ7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1xZDtyZXR1cm4gdGhpc31tKGIucHJvdG90eXBlLHtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuZGVmYXVsdFByZXZlbnRlZD0hMDt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnByZXZlbnREZWZhdWx0P2EucHJldmVudERlZmF1bHQoKTpcInVua25vd25cIiE9PXR5cGVvZiBhLnJldHVyblZhbHVlJiZcbihhLnJldHVyblZhbHVlPSExKSx0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1wZCl9LHN0b3BQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEuc3RvcFByb3BhZ2F0aW9uP2Euc3RvcFByb3BhZ2F0aW9uKCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5jYW5jZWxCdWJibGUmJihhLmNhbmNlbEJ1YmJsZT0hMCksdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1wZCl9LHBlcnNpc3Q6ZnVuY3Rpb24oKXt9LGlzUGVyc2lzdGVudDpwZH0pO3JldHVybiBifVxudmFyIHNkPXtldmVudFBoYXNlOjAsYnViYmxlczowLGNhbmNlbGFibGU6MCx0aW1lU3RhbXA6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOjAsaXNUcnVzdGVkOjB9LHRkPXJkKHNkKSx1ZD1tKHt9LHNkLHt2aWV3OjAsZGV0YWlsOjB9KSx2ZD1yZCh1ZCksd2QseGQseWQsQWQ9bSh7fSx1ZCx7c2NyZWVuWDowLHNjcmVlblk6MCxjbGllbnRYOjAsY2xpZW50WTowLHBhZ2VYOjAscGFnZVk6MCxjdHJsS2V5OjAsc2hpZnRLZXk6MCxhbHRLZXk6MCxtZXRhS2V5OjAsZ2V0TW9kaWZpZXJTdGF0ZTp6ZCxidXR0b246MCxidXR0b25zOjAscmVsYXRlZFRhcmdldDpmdW5jdGlvbihhKXtyZXR1cm4gdm9pZCAwPT09YS5yZWxhdGVkVGFyZ2V0P2EuZnJvbUVsZW1lbnQ9PT1hLnNyY0VsZW1lbnQ/YS50b0VsZW1lbnQ6YS5mcm9tRWxlbWVudDphLnJlbGF0ZWRUYXJnZXR9LG1vdmVtZW50WDpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WFwiaW5cbmEpcmV0dXJuIGEubW92ZW1lbnRYO2EhPT15ZCYmKHlkJiZcIm1vdXNlbW92ZVwiPT09YS50eXBlPyh3ZD1hLnNjcmVlblgteWQuc2NyZWVuWCx4ZD1hLnNjcmVlblkteWQuc2NyZWVuWSk6eGQ9d2Q9MCx5ZD1hKTtyZXR1cm4gd2R9LG1vdmVtZW50WTpmdW5jdGlvbihhKXtyZXR1cm5cIm1vdmVtZW50WVwiaW4gYT9hLm1vdmVtZW50WTp4ZH19KSxCZD1yZChBZCksQ2Q9bSh7fSxBZCx7ZGF0YVRyYW5zZmVyOjB9KSxEZD1yZChDZCksRWQ9bSh7fSx1ZCx7cmVsYXRlZFRhcmdldDowfSksRmQ9cmQoRWQpLEdkPW0oe30sc2Qse2FuaW1hdGlvbk5hbWU6MCxlbGFwc2VkVGltZTowLHBzZXVkb0VsZW1lbnQ6MH0pLEhkPXJkKEdkKSxJZD1tKHt9LHNkLHtjbGlwYm9hcmREYXRhOmZ1bmN0aW9uKGEpe3JldHVyblwiY2xpcGJvYXJkRGF0YVwiaW4gYT9hLmNsaXBib2FyZERhdGE6d2luZG93LmNsaXBib2FyZERhdGF9fSksSmQ9cmQoSWQpLEtkPW0oe30sc2Qse2RhdGE6MH0pLExkPXJkKEtkKSxNZD17RXNjOlwiRXNjYXBlXCIsXG5TcGFjZWJhcjpcIiBcIixMZWZ0OlwiQXJyb3dMZWZ0XCIsVXA6XCJBcnJvd1VwXCIsUmlnaHQ6XCJBcnJvd1JpZ2h0XCIsRG93bjpcIkFycm93RG93blwiLERlbDpcIkRlbGV0ZVwiLFdpbjpcIk9TXCIsTWVudTpcIkNvbnRleHRNZW51XCIsQXBwczpcIkNvbnRleHRNZW51XCIsU2Nyb2xsOlwiU2Nyb2xsTG9ja1wiLE1velByaW50YWJsZUtleTpcIlVuaWRlbnRpZmllZFwifSxOZD17ODpcIkJhY2tzcGFjZVwiLDk6XCJUYWJcIiwxMjpcIkNsZWFyXCIsMTM6XCJFbnRlclwiLDE2OlwiU2hpZnRcIiwxNzpcIkNvbnRyb2xcIiwxODpcIkFsdFwiLDE5OlwiUGF1c2VcIiwyMDpcIkNhcHNMb2NrXCIsMjc6XCJFc2NhcGVcIiwzMjpcIiBcIiwzMzpcIlBhZ2VVcFwiLDM0OlwiUGFnZURvd25cIiwzNTpcIkVuZFwiLDM2OlwiSG9tZVwiLDM3OlwiQXJyb3dMZWZ0XCIsMzg6XCJBcnJvd1VwXCIsMzk6XCJBcnJvd1JpZ2h0XCIsNDA6XCJBcnJvd0Rvd25cIiw0NTpcIkluc2VydFwiLDQ2OlwiRGVsZXRlXCIsMTEyOlwiRjFcIiwxMTM6XCJGMlwiLDExNDpcIkYzXCIsMTE1OlwiRjRcIiwxMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIixcbjExOTpcIkY4XCIsMTIwOlwiRjlcIiwxMjE6XCJGMTBcIiwxMjI6XCJGMTFcIiwxMjM6XCJGMTJcIiwxNDQ6XCJOdW1Mb2NrXCIsMTQ1OlwiU2Nyb2xsTG9ja1wiLDIyNDpcIk1ldGFcIn0sT2Q9e0FsdDpcImFsdEtleVwiLENvbnRyb2w6XCJjdHJsS2V5XCIsTWV0YTpcIm1ldGFLZXlcIixTaGlmdDpcInNoaWZ0S2V5XCJ9O2Z1bmN0aW9uIFBkKGEpe3ZhciBiPXRoaXMubmF0aXZlRXZlbnQ7cmV0dXJuIGIuZ2V0TW9kaWZpZXJTdGF0ZT9iLmdldE1vZGlmaWVyU3RhdGUoYSk6KGE9T2RbYV0pPyEhYlthXTohMX1mdW5jdGlvbiB6ZCgpe3JldHVybiBQZH1cbnZhciBRZD1tKHt9LHVkLHtrZXk6ZnVuY3Rpb24oYSl7aWYoYS5rZXkpe3ZhciBiPU1kW2Eua2V5XXx8YS5rZXk7aWYoXCJVbmlkZW50aWZpZWRcIiE9PWIpcmV0dXJuIGJ9cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlPyhhPW9kKGEpLDEzPT09YT9cIkVudGVyXCI6U3RyaW5nLmZyb21DaGFyQ29kZShhKSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9OZFthLmtleUNvZGVdfHxcIlVuaWRlbnRpZmllZFwiOlwiXCJ9LGNvZGU6MCxsb2NhdGlvbjowLGN0cmxLZXk6MCxzaGlmdEtleTowLGFsdEtleTowLG1ldGFLZXk6MCxyZXBlYXQ6MCxsb2NhbGU6MCxnZXRNb2RpZmllclN0YXRlOnpkLGNoYXJDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT9vZChhKTowfSxrZXlDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9LHdoaWNoOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PVxuYS50eXBlP29kKGEpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9fSksUmQ9cmQoUWQpLFNkPW0oe30sQWQse3BvaW50ZXJJZDowLHdpZHRoOjAsaGVpZ2h0OjAscHJlc3N1cmU6MCx0YW5nZW50aWFsUHJlc3N1cmU6MCx0aWx0WDowLHRpbHRZOjAsdHdpc3Q6MCxwb2ludGVyVHlwZTowLGlzUHJpbWFyeTowfSksVGQ9cmQoU2QpLFVkPW0oe30sdWQse3RvdWNoZXM6MCx0YXJnZXRUb3VjaGVzOjAsY2hhbmdlZFRvdWNoZXM6MCxhbHRLZXk6MCxtZXRhS2V5OjAsY3RybEtleTowLHNoaWZ0S2V5OjAsZ2V0TW9kaWZpZXJTdGF0ZTp6ZH0pLFZkPXJkKFVkKSxXZD1tKHt9LHNkLHtwcm9wZXJ0eU5hbWU6MCxlbGFwc2VkVGltZTowLHBzZXVkb0VsZW1lbnQ6MH0pLFhkPXJkKFdkKSxZZD1tKHt9LEFkLHtkZWx0YVg6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVhcImluIGE/YS5kZWx0YVg6XCJ3aGVlbERlbHRhWFwiaW4gYT8tYS53aGVlbERlbHRhWDowfSxcbmRlbHRhWTpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWVwiaW4gYT9hLmRlbHRhWTpcIndoZWVsRGVsdGFZXCJpbiBhPy1hLndoZWVsRGVsdGFZOlwid2hlZWxEZWx0YVwiaW4gYT8tYS53aGVlbERlbHRhOjB9LGRlbHRhWjowLGRlbHRhTW9kZTowfSksWmQ9cmQoWWQpLCRkPVs5LDEzLDI3LDMyXSxhZT1mYSYmXCJDb21wb3NpdGlvbkV2ZW50XCJpbiB3aW5kb3csYmU9bnVsbDtmYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYoYmU9ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKTt2YXIgY2U9ZmEmJlwiVGV4dEV2ZW50XCJpbiB3aW5kb3cmJiFiZSxkZT1mYSYmKCFhZXx8YmUmJjg8YmUmJjExPj1iZSksZWU9U3RyaW5nLmZyb21DaGFyQ29kZSgzMiksZmU9ITE7XG5mdW5jdGlvbiBnZShhLGIpe3N3aXRjaChhKXtjYXNlIFwia2V5dXBcIjpyZXR1cm4tMSE9PSRkLmluZGV4T2YoYi5rZXlDb2RlKTtjYXNlIFwia2V5ZG93blwiOnJldHVybiAyMjkhPT1iLmtleUNvZGU7Y2FzZSBcImtleXByZXNzXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJmb2N1c291dFwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIGhlKGEpe2E9YS5kZXRhaWw7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZcImRhdGFcImluIGE/YS5kYXRhOm51bGx9dmFyIGllPSExO2Z1bmN0aW9uIGplKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBoZShiKTtjYXNlIFwia2V5cHJlc3NcIjppZigzMiE9PWIud2hpY2gpcmV0dXJuIG51bGw7ZmU9ITA7cmV0dXJuIGVlO2Nhc2UgXCJ0ZXh0SW5wdXRcIjpyZXR1cm4gYT1iLmRhdGEsYT09PWVlJiZmZT9udWxsOmE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiBrZShhLGIpe2lmKGllKXJldHVyblwiY29tcG9zaXRpb25lbmRcIj09PWF8fCFhZSYmZ2UoYSxiKT8oYT1uZCgpLG1kPWxkPWtkPW51bGwsaWU9ITEsYSk6bnVsbDtzd2l0Y2goYSl7Y2FzZSBcInBhc3RlXCI6cmV0dXJuIG51bGw7Y2FzZSBcImtleXByZXNzXCI6aWYoIShiLmN0cmxLZXl8fGIuYWx0S2V5fHxiLm1ldGFLZXkpfHxiLmN0cmxLZXkmJmIuYWx0S2V5KXtpZihiLmNoYXImJjE8Yi5jaGFyLmxlbmd0aClyZXR1cm4gYi5jaGFyO2lmKGIud2hpY2gpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoYi53aGljaCl9cmV0dXJuIG51bGw7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIGRlJiZcImtvXCIhPT1iLmxvY2FsZT9udWxsOmIuZGF0YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciBsZT17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCxcImRhdGV0aW1lLWxvY2FsXCI6ITAsZW1haWw6ITAsbW9udGg6ITAsbnVtYmVyOiEwLHBhc3N3b3JkOiEwLHJhbmdlOiEwLHNlYXJjaDohMCx0ZWw6ITAsdGV4dDohMCx0aW1lOiEwLHVybDohMCx3ZWVrOiEwfTtmdW5jdGlvbiBtZShhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09Yj8hIWxlW2EudHlwZV06XCJ0ZXh0YXJlYVwiPT09Yj8hMDohMX1mdW5jdGlvbiBuZShhLGIsYyxkKXtFYihkKTtiPW9lKGIsXCJvbkNoYW5nZVwiKTswPGIubGVuZ3RoJiYoYz1uZXcgdGQoXCJvbkNoYW5nZVwiLFwiY2hhbmdlXCIsbnVsbCxjLGQpLGEucHVzaCh7ZXZlbnQ6YyxsaXN0ZW5lcnM6Yn0pKX12YXIgcGU9bnVsbCxxZT1udWxsO2Z1bmN0aW9uIHJlKGEpe3NlKGEsMCl9ZnVuY3Rpb24gdGUoYSl7dmFyIGI9dWUoYSk7aWYoV2EoYikpcmV0dXJuIGF9XG5mdW5jdGlvbiB2ZShhLGIpe2lmKFwiY2hhbmdlXCI9PT1hKXJldHVybiBifXZhciB3ZT0hMTtpZihmYSl7dmFyIHhlO2lmKGZhKXt2YXIgeWU9XCJvbmlucHV0XCJpbiBkb2N1bWVudDtpZigheWUpe3ZhciB6ZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO3plLnNldEF0dHJpYnV0ZShcIm9uaW5wdXRcIixcInJldHVybjtcIik7eWU9XCJmdW5jdGlvblwiPT09dHlwZW9mIHplLm9uaW5wdXR9eGU9eWV9ZWxzZSB4ZT0hMTt3ZT14ZSYmKCFkb2N1bWVudC5kb2N1bWVudE1vZGV8fDk8ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKX1mdW5jdGlvbiBBZSgpe3BlJiYocGUuZGV0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsQmUpLHFlPXBlPW51bGwpfWZ1bmN0aW9uIEJlKGEpe2lmKFwidmFsdWVcIj09PWEucHJvcGVydHlOYW1lJiZ0ZShxZSkpe3ZhciBiPVtdO25lKGIscWUsYSx4YihhKSk7YT1yZTtpZihLYilhKGIpO2Vsc2V7S2I9ITA7dHJ5e0diKGEsYil9ZmluYWxseXtLYj0hMSxNYigpfX19fVxuZnVuY3Rpb24gQ2UoYSxiLGMpe1wiZm9jdXNpblwiPT09YT8oQWUoKSxwZT1iLHFlPWMscGUuYXR0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsQmUpKTpcImZvY3Vzb3V0XCI9PT1hJiZBZSgpfWZ1bmN0aW9uIERlKGEpe2lmKFwic2VsZWN0aW9uY2hhbmdlXCI9PT1hfHxcImtleXVwXCI9PT1hfHxcImtleWRvd25cIj09PWEpcmV0dXJuIHRlKHFlKX1mdW5jdGlvbiBFZShhLGIpe2lmKFwiY2xpY2tcIj09PWEpcmV0dXJuIHRlKGIpfWZ1bmN0aW9uIEZlKGEsYil7aWYoXCJpbnB1dFwiPT09YXx8XCJjaGFuZ2VcIj09PWEpcmV0dXJuIHRlKGIpfWZ1bmN0aW9uIEdlKGEsYil7cmV0dXJuIGE9PT1iJiYoMCE9PWF8fDEvYT09PTEvYil8fGEhPT1hJiZiIT09Yn12YXIgSGU9XCJmdW5jdGlvblwiPT09dHlwZW9mIE9iamVjdC5pcz9PYmplY3QuaXM6R2UsSWU9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbmZ1bmN0aW9uIEplKGEsYil7aWYoSGUoYSxiKSlyZXR1cm4hMDtpZihcIm9iamVjdFwiIT09dHlwZW9mIGF8fG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGJ8fG51bGw9PT1iKXJldHVybiExO3ZhciBjPU9iamVjdC5rZXlzKGEpLGQ9T2JqZWN0LmtleXMoYik7aWYoYy5sZW5ndGghPT1kLmxlbmd0aClyZXR1cm4hMTtmb3IoZD0wO2Q8Yy5sZW5ndGg7ZCsrKWlmKCFJZS5jYWxsKGIsY1tkXSl8fCFIZShhW2NbZF1dLGJbY1tkXV0pKXJldHVybiExO3JldHVybiEwfWZ1bmN0aW9uIEtlKGEpe2Zvcig7YSYmYS5maXJzdENoaWxkOylhPWEuZmlyc3RDaGlsZDtyZXR1cm4gYX1cbmZ1bmN0aW9uIExlKGEsYil7dmFyIGM9S2UoYSk7YT0wO2Zvcih2YXIgZDtjOyl7aWYoMz09PWMubm9kZVR5cGUpe2Q9YStjLnRleHRDb250ZW50Lmxlbmd0aDtpZihhPD1iJiZkPj1iKXJldHVybntub2RlOmMsb2Zmc2V0OmItYX07YT1kfWE6e2Zvcig7Yzspe2lmKGMubmV4dFNpYmxpbmcpe2M9Yy5uZXh0U2libGluZzticmVhayBhfWM9Yy5wYXJlbnROb2RlfWM9dm9pZCAwfWM9S2UoYyl9fWZ1bmN0aW9uIE1lKGEsYil7cmV0dXJuIGEmJmI/YT09PWI/ITA6YSYmMz09PWEubm9kZVR5cGU/ITE6YiYmMz09PWIubm9kZVR5cGU/TWUoYSxiLnBhcmVudE5vZGUpOlwiY29udGFpbnNcImluIGE/YS5jb250YWlucyhiKTphLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uPyEhKGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikmMTYpOiExOiExfVxuZnVuY3Rpb24gTmUoKXtmb3IodmFyIGE9d2luZG93LGI9WGEoKTtiIGluc3RhbmNlb2YgYS5IVE1MSUZyYW1lRWxlbWVudDspe3RyeXt2YXIgYz1cInN0cmluZ1wiPT09dHlwZW9mIGIuY29udGVudFdpbmRvdy5sb2NhdGlvbi5ocmVmfWNhdGNoKGQpe2M9ITF9aWYoYylhPWIuY29udGVudFdpbmRvdztlbHNlIGJyZWFrO2I9WGEoYS5kb2N1bWVudCl9cmV0dXJuIGJ9ZnVuY3Rpb24gT2UoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiBiJiYoXCJpbnB1dFwiPT09YiYmKFwidGV4dFwiPT09YS50eXBlfHxcInNlYXJjaFwiPT09YS50eXBlfHxcInRlbFwiPT09YS50eXBlfHxcInVybFwiPT09YS50eXBlfHxcInBhc3N3b3JkXCI9PT1hLnR5cGUpfHxcInRleHRhcmVhXCI9PT1ifHxcInRydWVcIj09PWEuY29udGVudEVkaXRhYmxlKX1cbnZhciBQZT1mYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLFFlPW51bGwsUmU9bnVsbCxTZT1udWxsLFRlPSExO1xuZnVuY3Rpb24gVWUoYSxiLGMpe3ZhciBkPWMud2luZG93PT09Yz9jLmRvY3VtZW50Ojk9PT1jLm5vZGVUeXBlP2M6Yy5vd25lckRvY3VtZW50O1RlfHxudWxsPT1RZXx8UWUhPT1YYShkKXx8KGQ9UWUsXCJzZWxlY3Rpb25TdGFydFwiaW4gZCYmT2UoZCk/ZD17c3RhcnQ6ZC5zZWxlY3Rpb25TdGFydCxlbmQ6ZC5zZWxlY3Rpb25FbmR9OihkPShkLm93bmVyRG9jdW1lbnQmJmQub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlld3x8d2luZG93KS5nZXRTZWxlY3Rpb24oKSxkPXthbmNob3JOb2RlOmQuYW5jaG9yTm9kZSxhbmNob3JPZmZzZXQ6ZC5hbmNob3JPZmZzZXQsZm9jdXNOb2RlOmQuZm9jdXNOb2RlLGZvY3VzT2Zmc2V0OmQuZm9jdXNPZmZzZXR9KSxTZSYmSmUoU2UsZCl8fChTZT1kLGQ9b2UoUmUsXCJvblNlbGVjdFwiKSwwPGQubGVuZ3RoJiYoYj1uZXcgdGQoXCJvblNlbGVjdFwiLFwic2VsZWN0XCIsbnVsbCxiLGMpLGEucHVzaCh7ZXZlbnQ6YixsaXN0ZW5lcnM6ZH0pLGIudGFyZ2V0PVFlKSkpfVxuUGMoXCJjYW5jZWwgY2FuY2VsIGNsaWNrIGNsaWNrIGNsb3NlIGNsb3NlIGNvbnRleHRtZW51IGNvbnRleHRNZW51IGNvcHkgY29weSBjdXQgY3V0IGF1eGNsaWNrIGF1eENsaWNrIGRibGNsaWNrIGRvdWJsZUNsaWNrIGRyYWdlbmQgZHJhZ0VuZCBkcmFnc3RhcnQgZHJhZ1N0YXJ0IGRyb3AgZHJvcCBmb2N1c2luIGZvY3VzIGZvY3Vzb3V0IGJsdXIgaW5wdXQgaW5wdXQgaW52YWxpZCBpbnZhbGlkIGtleWRvd24ga2V5RG93biBrZXlwcmVzcyBrZXlQcmVzcyBrZXl1cCBrZXlVcCBtb3VzZWRvd24gbW91c2VEb3duIG1vdXNldXAgbW91c2VVcCBwYXN0ZSBwYXN0ZSBwYXVzZSBwYXVzZSBwbGF5IHBsYXkgcG9pbnRlcmNhbmNlbCBwb2ludGVyQ2FuY2VsIHBvaW50ZXJkb3duIHBvaW50ZXJEb3duIHBvaW50ZXJ1cCBwb2ludGVyVXAgcmF0ZWNoYW5nZSByYXRlQ2hhbmdlIHJlc2V0IHJlc2V0IHNlZWtlZCBzZWVrZWQgc3VibWl0IHN1Ym1pdCB0b3VjaGNhbmNlbCB0b3VjaENhbmNlbCB0b3VjaGVuZCB0b3VjaEVuZCB0b3VjaHN0YXJ0IHRvdWNoU3RhcnQgdm9sdW1lY2hhbmdlIHZvbHVtZUNoYW5nZVwiLnNwbGl0KFwiIFwiKSxcbjApO1BjKFwiZHJhZyBkcmFnIGRyYWdlbnRlciBkcmFnRW50ZXIgZHJhZ2V4aXQgZHJhZ0V4aXQgZHJhZ2xlYXZlIGRyYWdMZWF2ZSBkcmFnb3ZlciBkcmFnT3ZlciBtb3VzZW1vdmUgbW91c2VNb3ZlIG1vdXNlb3V0IG1vdXNlT3V0IG1vdXNlb3ZlciBtb3VzZU92ZXIgcG9pbnRlcm1vdmUgcG9pbnRlck1vdmUgcG9pbnRlcm91dCBwb2ludGVyT3V0IHBvaW50ZXJvdmVyIHBvaW50ZXJPdmVyIHNjcm9sbCBzY3JvbGwgdG9nZ2xlIHRvZ2dsZSB0b3VjaG1vdmUgdG91Y2hNb3ZlIHdoZWVsIHdoZWVsXCIuc3BsaXQoXCIgXCIpLDEpO1BjKE9jLDIpO2Zvcih2YXIgVmU9XCJjaGFuZ2Ugc2VsZWN0aW9uY2hhbmdlIHRleHRJbnB1dCBjb21wb3NpdGlvbnN0YXJ0IGNvbXBvc2l0aW9uZW5kIGNvbXBvc2l0aW9udXBkYXRlXCIuc3BsaXQoXCIgXCIpLFdlPTA7V2U8VmUubGVuZ3RoO1dlKyspTmMuc2V0KFZlW1dlXSwwKTtlYShcIm9uTW91c2VFbnRlclwiLFtcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl0pO1xuZWEoXCJvbk1vdXNlTGVhdmVcIixbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdKTtlYShcIm9uUG9pbnRlckVudGVyXCIsW1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl0pO2VhKFwib25Qb2ludGVyTGVhdmVcIixbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXSk7ZGEoXCJvbkNoYW5nZVwiLFwiY2hhbmdlIGNsaWNrIGZvY3VzaW4gZm9jdXNvdXQgaW5wdXQga2V5ZG93biBrZXl1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIikpO2RhKFwib25TZWxlY3RcIixcImZvY3Vzb3V0IGNvbnRleHRtZW51IGRyYWdlbmQgZm9jdXNpbiBrZXlkb3duIGtleXVwIG1vdXNlZG93biBtb3VzZXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKSk7ZGEoXCJvbkJlZm9yZUlucHV0XCIsW1wiY29tcG9zaXRpb25lbmRcIixcImtleXByZXNzXCIsXCJ0ZXh0SW5wdXRcIixcInBhc3RlXCJdKTtkYShcIm9uQ29tcG9zaXRpb25FbmRcIixcImNvbXBvc2l0aW9uZW5kIGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTtcbmRhKFwib25Db21wb3NpdGlvblN0YXJ0XCIsXCJjb21wb3NpdGlvbnN0YXJ0IGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTtkYShcIm9uQ29tcG9zaXRpb25VcGRhdGVcIixcImNvbXBvc2l0aW9udXBkYXRlIGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTt2YXIgWGU9XCJhYm9ydCBjYW5wbGF5IGNhbnBsYXl0aHJvdWdoIGR1cmF0aW9uY2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGxvYWRlZGRhdGEgbG9hZGVkbWV0YWRhdGEgbG9hZHN0YXJ0IHBhdXNlIHBsYXkgcGxheWluZyBwcm9ncmVzcyByYXRlY2hhbmdlIHNlZWtlZCBzZWVraW5nIHN0YWxsZWQgc3VzcGVuZCB0aW1ldXBkYXRlIHZvbHVtZWNoYW5nZSB3YWl0aW5nXCIuc3BsaXQoXCIgXCIpLFllPW5ldyBTZXQoXCJjYW5jZWwgY2xvc2UgaW52YWxpZCBsb2FkIHNjcm9sbCB0b2dnbGVcIi5zcGxpdChcIiBcIikuY29uY2F0KFhlKSk7XG5mdW5jdGlvbiBaZShhLGIsYyl7dmFyIGQ9YS50eXBlfHxcInVua25vd24tZXZlbnRcIjthLmN1cnJlbnRUYXJnZXQ9YztZYihkLGIsdm9pZCAwLGEpO2EuY3VycmVudFRhcmdldD1udWxsfVxuZnVuY3Rpb24gc2UoYSxiKXtiPTAhPT0oYiY0KTtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrKyl7dmFyIGQ9YVtjXSxlPWQuZXZlbnQ7ZD1kLmxpc3RlbmVyczthOnt2YXIgZj12b2lkIDA7aWYoYilmb3IodmFyIGc9ZC5sZW5ndGgtMTswPD1nO2ctLSl7dmFyIGg9ZFtnXSxrPWguaW5zdGFuY2UsbD1oLmN1cnJlbnRUYXJnZXQ7aD1oLmxpc3RlbmVyO2lmKGshPT1mJiZlLmlzUHJvcGFnYXRpb25TdG9wcGVkKCkpYnJlYWsgYTtaZShlLGgsbCk7Zj1rfWVsc2UgZm9yKGc9MDtnPGQubGVuZ3RoO2crKyl7aD1kW2ddO2s9aC5pbnN0YW5jZTtsPWguY3VycmVudFRhcmdldDtoPWgubGlzdGVuZXI7aWYoayE9PWYmJmUuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSlicmVhayBhO1plKGUsaCxsKTtmPWt9fX1pZihVYil0aHJvdyBhPVZiLFViPSExLFZiPW51bGwsYTt9XG5mdW5jdGlvbiBHKGEsYil7dmFyIGM9JGUoYiksZD1hK1wiX19idWJibGVcIjtjLmhhcyhkKXx8KGFmKGIsYSwyLCExKSxjLmFkZChkKSl9dmFyIGJmPVwiX3JlYWN0TGlzdGVuaW5nXCIrTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMik7ZnVuY3Rpb24gY2YoYSl7YVtiZl18fChhW2JmXT0hMCxiYS5mb3JFYWNoKGZ1bmN0aW9uKGIpe1llLmhhcyhiKXx8ZGYoYiwhMSxhLG51bGwpO2RmKGIsITAsYSxudWxsKX0pKX1cbmZ1bmN0aW9uIGRmKGEsYixjLGQpe3ZhciBlPTQ8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzRdP2FyZ3VtZW50c1s0XTowLGY9YztcInNlbGVjdGlvbmNoYW5nZVwiPT09YSYmOSE9PWMubm9kZVR5cGUmJihmPWMub3duZXJEb2N1bWVudCk7aWYobnVsbCE9PWQmJiFiJiZZZS5oYXMoYSkpe2lmKFwic2Nyb2xsXCIhPT1hKXJldHVybjtlfD0yO2Y9ZH12YXIgZz0kZShmKSxoPWErXCJfX1wiKyhiP1wiY2FwdHVyZVwiOlwiYnViYmxlXCIpO2cuaGFzKGgpfHwoYiYmKGV8PTQpLGFmKGYsYSxlLGIpLGcuYWRkKGgpKX1cbmZ1bmN0aW9uIGFmKGEsYixjLGQpe3ZhciBlPU5jLmdldChiKTtzd2l0Y2godm9pZCAwPT09ZT8yOmUpe2Nhc2UgMDplPWdkO2JyZWFrO2Nhc2UgMTplPWlkO2JyZWFrO2RlZmF1bHQ6ZT1oZH1jPWUuYmluZChudWxsLGIsYyxhKTtlPXZvaWQgMDshUGJ8fFwidG91Y2hzdGFydFwiIT09YiYmXCJ0b3VjaG1vdmVcIiE9PWImJlwid2hlZWxcIiE9PWJ8fChlPSEwKTtkP3ZvaWQgMCE9PWU/YS5hZGRFdmVudExpc3RlbmVyKGIsYyx7Y2FwdHVyZTohMCxwYXNzaXZlOmV9KTphLmFkZEV2ZW50TGlzdGVuZXIoYixjLCEwKTp2b2lkIDAhPT1lP2EuYWRkRXZlbnRMaXN0ZW5lcihiLGMse3Bhc3NpdmU6ZX0pOmEuYWRkRXZlbnRMaXN0ZW5lcihiLGMsITEpfVxuZnVuY3Rpb24gamQoYSxiLGMsZCxlKXt2YXIgZj1kO2lmKDA9PT0oYiYxKSYmMD09PShiJjIpJiZudWxsIT09ZClhOmZvcig7Oyl7aWYobnVsbD09PWQpcmV0dXJuO3ZhciBnPWQudGFnO2lmKDM9PT1nfHw0PT09Zyl7dmFyIGg9ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztpZihoPT09ZXx8OD09PWgubm9kZVR5cGUmJmgucGFyZW50Tm9kZT09PWUpYnJlYWs7aWYoND09PWcpZm9yKGc9ZC5yZXR1cm47bnVsbCE9PWc7KXt2YXIgaz1nLnRhZztpZigzPT09a3x8ND09PWspaWYoaz1nLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLGs9PT1lfHw4PT09ay5ub2RlVHlwZSYmay5wYXJlbnROb2RlPT09ZSlyZXR1cm47Zz1nLnJldHVybn1mb3IoO251bGwhPT1oOyl7Zz13YyhoKTtpZihudWxsPT09ZylyZXR1cm47az1nLnRhZztpZig1PT09a3x8Nj09PWspe2Q9Zj1nO2NvbnRpbnVlIGF9aD1oLnBhcmVudE5vZGV9fWQ9ZC5yZXR1cm59TmIoZnVuY3Rpb24oKXt2YXIgZD1mLGU9eGIoYyksZz1bXTtcbmE6e3ZhciBoPU1jLmdldChhKTtpZih2b2lkIDAhPT1oKXt2YXIgaz10ZCx4PWE7c3dpdGNoKGEpe2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDA9PT1vZChjKSlicmVhayBhO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6az1SZDticmVhaztjYXNlIFwiZm9jdXNpblwiOng9XCJmb2N1c1wiO2s9RmQ7YnJlYWs7Y2FzZSBcImZvY3Vzb3V0XCI6eD1cImJsdXJcIjtrPUZkO2JyZWFrO2Nhc2UgXCJiZWZvcmVibHVyXCI6Y2FzZSBcImFmdGVyYmx1clwiOms9RmQ7YnJlYWs7Y2FzZSBcImNsaWNrXCI6aWYoMj09PWMuYnV0dG9uKWJyZWFrIGE7Y2FzZSBcImF1eGNsaWNrXCI6Y2FzZSBcImRibGNsaWNrXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJtb3VzZW1vdmVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJtb3VzZW91dFwiOmNhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwiY29udGV4dG1lbnVcIjprPUJkO2JyZWFrO2Nhc2UgXCJkcmFnXCI6Y2FzZSBcImRyYWdlbmRcIjpjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdleGl0XCI6Y2FzZSBcImRyYWdsZWF2ZVwiOmNhc2UgXCJkcmFnb3ZlclwiOmNhc2UgXCJkcmFnc3RhcnRcIjpjYXNlIFwiZHJvcFwiOms9XG5EZDticmVhaztjYXNlIFwidG91Y2hjYW5jZWxcIjpjYXNlIFwidG91Y2hlbmRcIjpjYXNlIFwidG91Y2htb3ZlXCI6Y2FzZSBcInRvdWNoc3RhcnRcIjprPVZkO2JyZWFrO2Nhc2UgSWM6Y2FzZSBKYzpjYXNlIEtjOms9SGQ7YnJlYWs7Y2FzZSBMYzprPVhkO2JyZWFrO2Nhc2UgXCJzY3JvbGxcIjprPXZkO2JyZWFrO2Nhc2UgXCJ3aGVlbFwiOms9WmQ7YnJlYWs7Y2FzZSBcImNvcHlcIjpjYXNlIFwiY3V0XCI6Y2FzZSBcInBhc3RlXCI6az1KZDticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcInBvaW50ZXJjYW5jZWxcIjpjYXNlIFwicG9pbnRlcmRvd25cIjpjYXNlIFwicG9pbnRlcm1vdmVcIjpjYXNlIFwicG9pbnRlcm91dFwiOmNhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVydXBcIjprPVRkfXZhciB3PTAhPT0oYiY0KSx6PSF3JiZcInNjcm9sbFwiPT09YSx1PXc/bnVsbCE9PWg/aCtcIkNhcHR1cmVcIjpudWxsOmg7dz1bXTtmb3IodmFyIHQ9ZCxxO251bGwhPT1cbnQ7KXtxPXQ7dmFyIHY9cS5zdGF0ZU5vZGU7NT09PXEudGFnJiZudWxsIT09diYmKHE9dixudWxsIT09dSYmKHY9T2IodCx1KSxudWxsIT12JiZ3LnB1c2goZWYodCx2LHEpKSkpO2lmKHopYnJlYWs7dD10LnJldHVybn0wPHcubGVuZ3RoJiYoaD1uZXcgayhoLHgsbnVsbCxjLGUpLGcucHVzaCh7ZXZlbnQ6aCxsaXN0ZW5lcnM6d30pKX19aWYoMD09PShiJjcpKXthOntoPVwibW91c2VvdmVyXCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hO2s9XCJtb3VzZW91dFwiPT09YXx8XCJwb2ludGVyb3V0XCI9PT1hO2lmKGgmJjA9PT0oYiYxNikmJih4PWMucmVsYXRlZFRhcmdldHx8Yy5mcm9tRWxlbWVudCkmJih3Yyh4KXx8eFtmZl0pKWJyZWFrIGE7aWYoa3x8aCl7aD1lLndpbmRvdz09PWU/ZTooaD1lLm93bmVyRG9jdW1lbnQpP2guZGVmYXVsdFZpZXd8fGgucGFyZW50V2luZG93OndpbmRvdztpZihrKXtpZih4PWMucmVsYXRlZFRhcmdldHx8Yy50b0VsZW1lbnQsaz1kLHg9eD93Yyh4KTpudWxsLG51bGwhPT1cbngmJih6PVpiKHgpLHghPT16fHw1IT09eC50YWcmJjYhPT14LnRhZykpeD1udWxsfWVsc2Ugaz1udWxsLHg9ZDtpZihrIT09eCl7dz1CZDt2PVwib25Nb3VzZUxlYXZlXCI7dT1cIm9uTW91c2VFbnRlclwiO3Q9XCJtb3VzZVwiO2lmKFwicG9pbnRlcm91dFwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSl3PVRkLHY9XCJvblBvaW50ZXJMZWF2ZVwiLHU9XCJvblBvaW50ZXJFbnRlclwiLHQ9XCJwb2ludGVyXCI7ej1udWxsPT1rP2g6dWUoayk7cT1udWxsPT14P2g6dWUoeCk7aD1uZXcgdyh2LHQrXCJsZWF2ZVwiLGssYyxlKTtoLnRhcmdldD16O2gucmVsYXRlZFRhcmdldD1xO3Y9bnVsbDt3YyhlKT09PWQmJih3PW5ldyB3KHUsdCtcImVudGVyXCIseCxjLGUpLHcudGFyZ2V0PXEsdy5yZWxhdGVkVGFyZ2V0PXosdj13KTt6PXY7aWYoayYmeCliOnt3PWs7dT14O3Q9MDtmb3IocT13O3E7cT1nZihxKSl0Kys7cT0wO2Zvcih2PXU7djt2PWdmKHYpKXErKztmb3IoOzA8dC1xOyl3PWdmKHcpLHQtLTtmb3IoOzA8cS10Oyl1PVxuZ2YodSkscS0tO2Zvcig7dC0tOyl7aWYodz09PXV8fG51bGwhPT11JiZ3PT09dS5hbHRlcm5hdGUpYnJlYWsgYjt3PWdmKHcpO3U9Z2YodSl9dz1udWxsfWVsc2Ugdz1udWxsO251bGwhPT1rJiZoZihnLGgsayx3LCExKTtudWxsIT09eCYmbnVsbCE9PXomJmhmKGcseix4LHcsITApfX19YTp7aD1kP3VlKGQpOndpbmRvdztrPWgubm9kZU5hbWUmJmgubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtpZihcInNlbGVjdFwiPT09a3x8XCJpbnB1dFwiPT09ayYmXCJmaWxlXCI9PT1oLnR5cGUpdmFyIEo9dmU7ZWxzZSBpZihtZShoKSlpZih3ZSlKPUZlO2Vsc2V7Sj1EZTt2YXIgSz1DZX1lbHNlKGs9aC5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWsudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWgudHlwZXx8XCJyYWRpb1wiPT09aC50eXBlKSYmKEo9RWUpO2lmKEomJihKPUooYSxkKSkpe25lKGcsSixjLGUpO2JyZWFrIGF9SyYmSyhhLGgsZCk7XCJmb2N1c291dFwiPT09YSYmKEs9aC5fd3JhcHBlclN0YXRlKSYmXG5LLmNvbnRyb2xsZWQmJlwibnVtYmVyXCI9PT1oLnR5cGUmJmJiKGgsXCJudW1iZXJcIixoLnZhbHVlKX1LPWQ/dWUoZCk6d2luZG93O3N3aXRjaChhKXtjYXNlIFwiZm9jdXNpblwiOmlmKG1lKEspfHxcInRydWVcIj09PUsuY29udGVudEVkaXRhYmxlKVFlPUssUmU9ZCxTZT1udWxsO2JyZWFrO2Nhc2UgXCJmb2N1c291dFwiOlNlPVJlPVFlPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlZG93blwiOlRlPSEwO2JyZWFrO2Nhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcImRyYWdlbmRcIjpUZT0hMTtVZShnLGMsZSk7YnJlYWs7Y2FzZSBcInNlbGVjdGlvbmNoYW5nZVwiOmlmKFBlKWJyZWFrO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6VWUoZyxjLGUpfXZhciBRO2lmKGFlKWI6e3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25zdGFydFwiOnZhciBMPVwib25Db21wb3NpdGlvblN0YXJ0XCI7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpMPVwib25Db21wb3NpdGlvbkVuZFwiO2JyZWFrIGI7XG5jYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjpMPVwib25Db21wb3NpdGlvblVwZGF0ZVwiO2JyZWFrIGJ9TD12b2lkIDB9ZWxzZSBpZT9nZShhLGMpJiYoTD1cIm9uQ29tcG9zaXRpb25FbmRcIik6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihMPVwib25Db21wb3NpdGlvblN0YXJ0XCIpO0wmJihkZSYmXCJrb1wiIT09Yy5sb2NhbGUmJihpZXx8XCJvbkNvbXBvc2l0aW9uU3RhcnRcIiE9PUw/XCJvbkNvbXBvc2l0aW9uRW5kXCI9PT1MJiZpZSYmKFE9bmQoKSk6KGtkPWUsbGQ9XCJ2YWx1ZVwiaW4ga2Q/a2QudmFsdWU6a2QudGV4dENvbnRlbnQsaWU9ITApKSxLPW9lKGQsTCksMDxLLmxlbmd0aCYmKEw9bmV3IExkKEwsYSxudWxsLGMsZSksZy5wdXNoKHtldmVudDpMLGxpc3RlbmVyczpLfSksUT9MLmRhdGE9UTooUT1oZShjKSxudWxsIT09USYmKEwuZGF0YT1RKSkpKTtpZihRPWNlP2plKGEsYyk6a2UoYSxjKSlkPW9lKGQsXCJvbkJlZm9yZUlucHV0XCIpLDA8ZC5sZW5ndGgmJihlPW5ldyBMZChcIm9uQmVmb3JlSW5wdXRcIixcblwiYmVmb3JlaW5wdXRcIixudWxsLGMsZSksZy5wdXNoKHtldmVudDplLGxpc3RlbmVyczpkfSksZS5kYXRhPVEpfXNlKGcsYil9KX1mdW5jdGlvbiBlZihhLGIsYyl7cmV0dXJue2luc3RhbmNlOmEsbGlzdGVuZXI6YixjdXJyZW50VGFyZ2V0OmN9fWZ1bmN0aW9uIG9lKGEsYil7Zm9yKHZhciBjPWIrXCJDYXB0dXJlXCIsZD1bXTtudWxsIT09YTspe3ZhciBlPWEsZj1lLnN0YXRlTm9kZTs1PT09ZS50YWcmJm51bGwhPT1mJiYoZT1mLGY9T2IoYSxjKSxudWxsIT1mJiZkLnVuc2hpZnQoZWYoYSxmLGUpKSxmPU9iKGEsYiksbnVsbCE9ZiYmZC5wdXNoKGVmKGEsZixlKSkpO2E9YS5yZXR1cm59cmV0dXJuIGR9ZnVuY3Rpb24gZ2YoYSl7aWYobnVsbD09PWEpcmV0dXJuIG51bGw7ZG8gYT1hLnJldHVybjt3aGlsZShhJiY1IT09YS50YWcpO3JldHVybiBhP2E6bnVsbH1cbmZ1bmN0aW9uIGhmKGEsYixjLGQsZSl7Zm9yKHZhciBmPWIuX3JlYWN0TmFtZSxnPVtdO251bGwhPT1jJiZjIT09ZDspe3ZhciBoPWMsaz1oLmFsdGVybmF0ZSxsPWguc3RhdGVOb2RlO2lmKG51bGwhPT1rJiZrPT09ZClicmVhazs1PT09aC50YWcmJm51bGwhPT1sJiYoaD1sLGU/KGs9T2IoYyxmKSxudWxsIT1rJiZnLnVuc2hpZnQoZWYoYyxrLGgpKSk6ZXx8KGs9T2IoYyxmKSxudWxsIT1rJiZnLnB1c2goZWYoYyxrLGgpKSkpO2M9Yy5yZXR1cm59MCE9PWcubGVuZ3RoJiZhLnB1c2goe2V2ZW50OmIsbGlzdGVuZXJzOmd9KX1mdW5jdGlvbiBqZigpe312YXIga2Y9bnVsbCxsZj1udWxsO2Z1bmN0aW9uIG1mKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6cmV0dXJuISFiLmF1dG9Gb2N1c31yZXR1cm4hMX1cbmZ1bmN0aW9uIG5mKGEsYil7cmV0dXJuXCJ0ZXh0YXJlYVwiPT09YXx8XCJvcHRpb25cIj09PWF8fFwibm9zY3JpcHRcIj09PWF8fFwic3RyaW5nXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJudW1iZXJcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbH12YXIgb2Y9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAscGY9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwO2Z1bmN0aW9uIHFmKGEpezE9PT1hLm5vZGVUeXBlP2EudGV4dENvbnRlbnQ9XCJcIjo5PT09YS5ub2RlVHlwZSYmKGE9YS5ib2R5LG51bGwhPWEmJihhLnRleHRDb250ZW50PVwiXCIpKX1cbmZ1bmN0aW9uIHJmKGEpe2Zvcig7bnVsbCE9YTthPWEubmV4dFNpYmxpbmcpe3ZhciBiPWEubm9kZVR5cGU7aWYoMT09PWJ8fDM9PT1iKWJyZWFrfXJldHVybiBhfWZ1bmN0aW9uIHNmKGEpe2E9YS5wcmV2aW91c1NpYmxpbmc7Zm9yKHZhciBiPTA7YTspe2lmKDg9PT1hLm5vZGVUeXBlKXt2YXIgYz1hLmRhdGE7aWYoXCIkXCI9PT1jfHxcIiQhXCI9PT1jfHxcIiQ/XCI9PT1jKXtpZigwPT09YilyZXR1cm4gYTtiLS19ZWxzZVwiLyRcIj09PWMmJmIrK31hPWEucHJldmlvdXNTaWJsaW5nfXJldHVybiBudWxsfXZhciB0Zj0wO2Z1bmN0aW9uIHVmKGEpe3JldHVybnskJHR5cGVvZjpHYSx0b1N0cmluZzphLHZhbHVlT2Y6YX19dmFyIHZmPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpLHdmPVwiX19yZWFjdEZpYmVyJFwiK3ZmLHhmPVwiX19yZWFjdFByb3BzJFwiK3ZmLGZmPVwiX19yZWFjdENvbnRhaW5lciRcIit2Zix5Zj1cIl9fcmVhY3RFdmVudHMkXCIrdmY7XG5mdW5jdGlvbiB3YyhhKXt2YXIgYj1hW3dmXTtpZihiKXJldHVybiBiO2Zvcih2YXIgYz1hLnBhcmVudE5vZGU7Yzspe2lmKGI9Y1tmZl18fGNbd2ZdKXtjPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1iLmNoaWxkfHxudWxsIT09YyYmbnVsbCE9PWMuY2hpbGQpZm9yKGE9c2YoYSk7bnVsbCE9PWE7KXtpZihjPWFbd2ZdKXJldHVybiBjO2E9c2YoYSl9cmV0dXJuIGJ9YT1jO2M9YS5wYXJlbnROb2RlfXJldHVybiBudWxsfWZ1bmN0aW9uIENiKGEpe2E9YVt3Zl18fGFbZmZdO3JldHVybiFhfHw1IT09YS50YWcmJjYhPT1hLnRhZyYmMTMhPT1hLnRhZyYmMyE9PWEudGFnP251bGw6YX1mdW5jdGlvbiB1ZShhKXtpZig1PT09YS50YWd8fDY9PT1hLnRhZylyZXR1cm4gYS5zdGF0ZU5vZGU7dGhyb3cgRXJyb3IoeSgzMykpO31mdW5jdGlvbiBEYihhKXtyZXR1cm4gYVt4Zl18fG51bGx9XG5mdW5jdGlvbiAkZShhKXt2YXIgYj1hW3lmXTt2b2lkIDA9PT1iJiYoYj1hW3lmXT1uZXcgU2V0KTtyZXR1cm4gYn12YXIgemY9W10sQWY9LTE7ZnVuY3Rpb24gQmYoYSl7cmV0dXJue2N1cnJlbnQ6YX19ZnVuY3Rpb24gSChhKXswPkFmfHwoYS5jdXJyZW50PXpmW0FmXSx6ZltBZl09bnVsbCxBZi0tKX1mdW5jdGlvbiBJKGEsYil7QWYrKzt6ZltBZl09YS5jdXJyZW50O2EuY3VycmVudD1ifXZhciBDZj17fSxNPUJmKENmKSxOPUJmKCExKSxEZj1DZjtcbmZ1bmN0aW9uIEVmKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gQ2Y7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9ZnVuY3Rpb24gRmYoYSl7YT1hLmNoaWxkQ29udGV4dFR5cGVzO3JldHVybiBudWxsIT09YSYmdm9pZCAwIT09YX1mdW5jdGlvbiBHZigpe0goTik7SChNKX1mdW5jdGlvbiBIZihhLGIsYyl7aWYoTS5jdXJyZW50IT09Q2YpdGhyb3cgRXJyb3IoeSgxNjgpKTtJKE0sYik7SShOLGMpfVxuZnVuY3Rpb24gSWYoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2E9Yi5jaGlsZENvbnRleHRUeXBlcztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5nZXRDaGlsZENvbnRleHQpcmV0dXJuIGM7ZD1kLmdldENoaWxkQ29udGV4dCgpO2Zvcih2YXIgZSBpbiBkKWlmKCEoZSBpbiBhKSl0aHJvdyBFcnJvcih5KDEwOCxSYShiKXx8XCJVbmtub3duXCIsZSkpO3JldHVybiBtKHt9LGMsZCl9ZnVuY3Rpb24gSmYoYSl7YT0oYT1hLnN0YXRlTm9kZSkmJmEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fENmO0RmPU0uY3VycmVudDtJKE0sYSk7SShOLE4uY3VycmVudCk7cmV0dXJuITB9ZnVuY3Rpb24gS2YoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2lmKCFkKXRocm93IEVycm9yKHkoMTY5KSk7Yz8oYT1JZihhLGIsRGYpLGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ9YSxIKE4pLEgoTSksSShNLGEpKTpIKE4pO0koTixjKX1cbnZhciBMZj1udWxsLE1mPW51bGwsTmY9ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHksT2Y9ci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrLFBmPXIudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2ssUWY9ci51bnN0YWJsZV9zaG91bGRZaWVsZCxSZj1yLnVuc3RhYmxlX3JlcXVlc3RQYWludCxTZj1yLnVuc3RhYmxlX25vdyxUZj1yLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsLFVmPXIudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHksVmY9ci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxXZj1yLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LFhmPXIudW5zdGFibGVfTG93UHJpb3JpdHksWWY9ci51bnN0YWJsZV9JZGxlUHJpb3JpdHksWmY9e30sJGY9dm9pZCAwIT09UmY/UmY6ZnVuY3Rpb24oKXt9LGFnPW51bGwsYmc9bnVsbCxjZz0hMSxkZz1TZigpLE89MUU0PmRnP1NmOmZ1bmN0aW9uKCl7cmV0dXJuIFNmKCktZGd9O1xuZnVuY3Rpb24gZWcoKXtzd2l0Y2goVGYoKSl7Y2FzZSBVZjpyZXR1cm4gOTk7Y2FzZSBWZjpyZXR1cm4gOTg7Y2FzZSBXZjpyZXR1cm4gOTc7Y2FzZSBYZjpyZXR1cm4gOTY7Y2FzZSBZZjpyZXR1cm4gOTU7ZGVmYXVsdDp0aHJvdyBFcnJvcih5KDMzMikpO319ZnVuY3Rpb24gZmcoYSl7c3dpdGNoKGEpe2Nhc2UgOTk6cmV0dXJuIFVmO2Nhc2UgOTg6cmV0dXJuIFZmO2Nhc2UgOTc6cmV0dXJuIFdmO2Nhc2UgOTY6cmV0dXJuIFhmO2Nhc2UgOTU6cmV0dXJuIFlmO2RlZmF1bHQ6dGhyb3cgRXJyb3IoeSgzMzIpKTt9fWZ1bmN0aW9uIGdnKGEsYil7YT1mZyhhKTtyZXR1cm4gTmYoYSxiKX1mdW5jdGlvbiBoZyhhLGIsYyl7YT1mZyhhKTtyZXR1cm4gT2YoYSxiLGMpfWZ1bmN0aW9uIGlnKCl7aWYobnVsbCE9PWJnKXt2YXIgYT1iZztiZz1udWxsO1BmKGEpfWpnKCl9XG5mdW5jdGlvbiBqZygpe2lmKCFjZyYmbnVsbCE9PWFnKXtjZz0hMDt2YXIgYT0wO3RyeXt2YXIgYj1hZztnZyg5OSxmdW5jdGlvbigpe2Zvcig7YTxiLmxlbmd0aDthKyspe3ZhciBjPWJbYV07ZG8gYz1jKCEwKTt3aGlsZShudWxsIT09Yyl9fSk7YWc9bnVsbH1jYXRjaChjKXt0aHJvdyBudWxsIT09YWcmJihhZz1hZy5zbGljZShhKzEpKSxPZihVZixpZyksYzt9ZmluYWxseXtjZz0hMX19fXZhciBrZz1yYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZztmdW5jdGlvbiBsZyhhLGIpe2lmKGEmJmEuZGVmYXVsdFByb3BzKXtiPW0oe30sYik7YT1hLmRlZmF1bHRQcm9wcztmb3IodmFyIGMgaW4gYSl2b2lkIDA9PT1iW2NdJiYoYltjXT1hW2NdKTtyZXR1cm4gYn1yZXR1cm4gYn12YXIgbWc9QmYobnVsbCksbmc9bnVsbCxvZz1udWxsLHBnPW51bGw7ZnVuY3Rpb24gcWcoKXtwZz1vZz1uZz1udWxsfVxuZnVuY3Rpb24gcmcoYSl7dmFyIGI9bWcuY3VycmVudDtIKG1nKTthLnR5cGUuX2NvbnRleHQuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIHNnKGEsYil7Zm9yKDtudWxsIT09YTspe3ZhciBjPWEuYWx0ZXJuYXRlO2lmKChhLmNoaWxkTGFuZXMmYik9PT1iKWlmKG51bGw9PT1jfHwoYy5jaGlsZExhbmVzJmIpPT09YilicmVhaztlbHNlIGMuY2hpbGRMYW5lc3w9YjtlbHNlIGEuY2hpbGRMYW5lc3w9YixudWxsIT09YyYmKGMuY2hpbGRMYW5lc3w9Yik7YT1hLnJldHVybn19ZnVuY3Rpb24gdGcoYSxiKXtuZz1hO3BnPW9nPW51bGw7YT1hLmRlcGVuZGVuY2llcztudWxsIT09YSYmbnVsbCE9PWEuZmlyc3RDb250ZXh0JiYoMCE9PShhLmxhbmVzJmIpJiYodWc9ITApLGEuZmlyc3RDb250ZXh0PW51bGwpfVxuZnVuY3Rpb24gdmcoYSxiKXtpZihwZyE9PWEmJiExIT09YiYmMCE9PWIpe2lmKFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MTA3Mzc0MTgyMz09PWIpcGc9YSxiPTEwNzM3NDE4MjM7Yj17Y29udGV4dDphLG9ic2VydmVkQml0czpiLG5leHQ6bnVsbH07aWYobnVsbD09PW9nKXtpZihudWxsPT09bmcpdGhyb3cgRXJyb3IoeSgzMDgpKTtvZz1iO25nLmRlcGVuZGVuY2llcz17bGFuZXM6MCxmaXJzdENvbnRleHQ6YixyZXNwb25kZXJzOm51bGx9fWVsc2Ugb2c9b2cubmV4dD1ifXJldHVybiBhLl9jdXJyZW50VmFsdWV9dmFyIHdnPSExO2Z1bmN0aW9uIHhnKGEpe2EudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTphLm1lbW9pemVkU3RhdGUsZmlyc3RCYXNlVXBkYXRlOm51bGwsbGFzdEJhc2VVcGRhdGU6bnVsbCxzaGFyZWQ6e3BlbmRpbmc6bnVsbH0sZWZmZWN0czpudWxsfX1cbmZ1bmN0aW9uIHlnKGEsYil7YT1hLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9PT1hJiYoYi51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmEuYmFzZVN0YXRlLGZpcnN0QmFzZVVwZGF0ZTphLmZpcnN0QmFzZVVwZGF0ZSxsYXN0QmFzZVVwZGF0ZTphLmxhc3RCYXNlVXBkYXRlLHNoYXJlZDphLnNoYXJlZCxlZmZlY3RzOmEuZWZmZWN0c30pfWZ1bmN0aW9uIHpnKGEsYil7cmV0dXJue2V2ZW50VGltZTphLGxhbmU6Yix0YWc6MCxwYXlsb2FkOm51bGwsY2FsbGJhY2s6bnVsbCxuZXh0Om51bGx9fWZ1bmN0aW9uIEFnKGEsYil7YT1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1hKXthPWEuc2hhcmVkO3ZhciBjPWEucGVuZGluZztudWxsPT09Yz9iLm5leHQ9YjooYi5uZXh0PWMubmV4dCxjLm5leHQ9Yik7YS5wZW5kaW5nPWJ9fVxuZnVuY3Rpb24gQmcoYSxiKXt2YXIgYz1hLnVwZGF0ZVF1ZXVlLGQ9YS5hbHRlcm5hdGU7aWYobnVsbCE9PWQmJihkPWQudXBkYXRlUXVldWUsYz09PWQpKXt2YXIgZT1udWxsLGY9bnVsbDtjPWMuZmlyc3RCYXNlVXBkYXRlO2lmKG51bGwhPT1jKXtkb3t2YXIgZz17ZXZlbnRUaW1lOmMuZXZlbnRUaW1lLGxhbmU6Yy5sYW5lLHRhZzpjLnRhZyxwYXlsb2FkOmMucGF5bG9hZCxjYWxsYmFjazpjLmNhbGxiYWNrLG5leHQ6bnVsbH07bnVsbD09PWY/ZT1mPWc6Zj1mLm5leHQ9ZztjPWMubmV4dH13aGlsZShudWxsIT09Yyk7bnVsbD09PWY/ZT1mPWI6Zj1mLm5leHQ9Yn1lbHNlIGU9Zj1iO2M9e2Jhc2VTdGF0ZTpkLmJhc2VTdGF0ZSxmaXJzdEJhc2VVcGRhdGU6ZSxsYXN0QmFzZVVwZGF0ZTpmLHNoYXJlZDpkLnNoYXJlZCxlZmZlY3RzOmQuZWZmZWN0c307YS51cGRhdGVRdWV1ZT1jO3JldHVybn1hPWMubGFzdEJhc2VVcGRhdGU7bnVsbD09PWE/Yy5maXJzdEJhc2VVcGRhdGU9YjphLm5leHQ9XG5iO2MubGFzdEJhc2VVcGRhdGU9Yn1cbmZ1bmN0aW9uIENnKGEsYixjLGQpe3ZhciBlPWEudXBkYXRlUXVldWU7d2c9ITE7dmFyIGY9ZS5maXJzdEJhc2VVcGRhdGUsZz1lLmxhc3RCYXNlVXBkYXRlLGg9ZS5zaGFyZWQucGVuZGluZztpZihudWxsIT09aCl7ZS5zaGFyZWQucGVuZGluZz1udWxsO3ZhciBrPWgsbD1rLm5leHQ7ay5uZXh0PW51bGw7bnVsbD09PWc/Zj1sOmcubmV4dD1sO2c9azt2YXIgbj1hLmFsdGVybmF0ZTtpZihudWxsIT09bil7bj1uLnVwZGF0ZVF1ZXVlO3ZhciBBPW4ubGFzdEJhc2VVcGRhdGU7QSE9PWcmJihudWxsPT09QT9uLmZpcnN0QmFzZVVwZGF0ZT1sOkEubmV4dD1sLG4ubGFzdEJhc2VVcGRhdGU9ayl9fWlmKG51bGwhPT1mKXtBPWUuYmFzZVN0YXRlO2c9MDtuPWw9az1udWxsO2Rve2g9Zi5sYW5lO3ZhciBwPWYuZXZlbnRUaW1lO2lmKChkJmgpPT09aCl7bnVsbCE9PW4mJihuPW4ubmV4dD17ZXZlbnRUaW1lOnAsbGFuZTowLHRhZzpmLnRhZyxwYXlsb2FkOmYucGF5bG9hZCxjYWxsYmFjazpmLmNhbGxiYWNrLFxubmV4dDpudWxsfSk7YTp7dmFyIEM9YSx4PWY7aD1iO3A9Yztzd2l0Y2goeC50YWcpe2Nhc2UgMTpDPXgucGF5bG9hZDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgQyl7QT1DLmNhbGwocCxBLGgpO2JyZWFrIGF9QT1DO2JyZWFrIGE7Y2FzZSAzOkMuZmxhZ3M9Qy5mbGFncyYtNDA5N3w2NDtjYXNlIDA6Qz14LnBheWxvYWQ7aD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgQz9DLmNhbGwocCxBLGgpOkM7aWYobnVsbD09PWh8fHZvaWQgMD09PWgpYnJlYWsgYTtBPW0oe30sQSxoKTticmVhayBhO2Nhc2UgMjp3Zz0hMH19bnVsbCE9PWYuY2FsbGJhY2smJihhLmZsYWdzfD0zMixoPWUuZWZmZWN0cyxudWxsPT09aD9lLmVmZmVjdHM9W2ZdOmgucHVzaChmKSl9ZWxzZSBwPXtldmVudFRpbWU6cCxsYW5lOmgsdGFnOmYudGFnLHBheWxvYWQ6Zi5wYXlsb2FkLGNhbGxiYWNrOmYuY2FsbGJhY2ssbmV4dDpudWxsfSxudWxsPT09bj8obD1uPXAsaz1BKTpuPW4ubmV4dD1wLGd8PWg7Zj1mLm5leHQ7aWYobnVsbD09PVxuZilpZihoPWUuc2hhcmVkLnBlbmRpbmcsbnVsbD09PWgpYnJlYWs7ZWxzZSBmPWgubmV4dCxoLm5leHQ9bnVsbCxlLmxhc3RCYXNlVXBkYXRlPWgsZS5zaGFyZWQucGVuZGluZz1udWxsfXdoaWxlKDEpO251bGw9PT1uJiYoaz1BKTtlLmJhc2VTdGF0ZT1rO2UuZmlyc3RCYXNlVXBkYXRlPWw7ZS5sYXN0QmFzZVVwZGF0ZT1uO0RnfD1nO2EubGFuZXM9ZzthLm1lbW9pemVkU3RhdGU9QX19ZnVuY3Rpb24gRWcoYSxiLGMpe2E9Yi5lZmZlY3RzO2IuZWZmZWN0cz1udWxsO2lmKG51bGwhPT1hKWZvcihiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBkPWFbYl0sZT1kLmNhbGxiYWNrO2lmKG51bGwhPT1lKXtkLmNhbGxiYWNrPW51bGw7ZD1jO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlKXRocm93IEVycm9yKHkoMTkxLGUpKTtlLmNhbGwoZCl9fX12YXIgRmc9KG5ldyBhYS5Db21wb25lbnQpLnJlZnM7XG5mdW5jdGlvbiBHZyhhLGIsYyxkKXtiPWEubWVtb2l6ZWRTdGF0ZTtjPWMoZCxiKTtjPW51bGw9PT1jfHx2b2lkIDA9PT1jP2I6bSh7fSxiLGMpO2EubWVtb2l6ZWRTdGF0ZT1jOzA9PT1hLmxhbmVzJiYoYS51cGRhdGVRdWV1ZS5iYXNlU3RhdGU9Yyl9XG52YXIgS2c9e2lzTW91bnRlZDpmdW5jdGlvbihhKXtyZXR1cm4oYT1hLl9yZWFjdEludGVybmFscyk/WmIoYSk9PT1hOiExfSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbHM7dmFyIGQ9SGcoKSxlPUlnKGEpLGY9emcoZCxlKTtmLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGYuY2FsbGJhY2s9Yyk7QWcoYSxmKTtKZyhhLGUsZCl9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbHM7dmFyIGQ9SGcoKSxlPUlnKGEpLGY9emcoZCxlKTtmLnRhZz0xO2YucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZi5jYWxsYmFjaz1jKTtBZyhhLGYpO0pnKGEsZSxkKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGEsYil7YT1hLl9yZWFjdEludGVybmFsczt2YXIgYz1IZygpLGQ9SWcoYSksZT16ZyhjLGQpO2UudGFnPTI7dm9pZCAwIT09YiYmbnVsbCE9PWImJihlLmNhbGxiYWNrPVxuYik7QWcoYSxlKTtKZyhhLGQsYyl9fTtmdW5jdGlvbiBMZyhhLGIsYyxkLGUsZixnKXthPWEuc3RhdGVOb2RlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnNob3VsZENvbXBvbmVudFVwZGF0ZT9hLnNob3VsZENvbXBvbmVudFVwZGF0ZShkLGYsZyk6Yi5wcm90b3R5cGUmJmIucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFKZShjLGQpfHwhSmUoZSxmKTohMH1cbmZ1bmN0aW9uIE1nKGEsYixjKXt2YXIgZD0hMSxlPUNmO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9mPXZnKGYpOihlPUZmKGIpP0RmOk0uY3VycmVudCxkPWIuY29udGV4dFR5cGVzLGY9KGQ9bnVsbCE9PWQmJnZvaWQgMCE9PWQpP0VmKGEsZSk6Q2YpO2I9bmV3IGIoYyxmKTthLm1lbW9pemVkU3RhdGU9bnVsbCE9PWIuc3RhdGUmJnZvaWQgMCE9PWIuc3RhdGU/Yi5zdGF0ZTpudWxsO2IudXBkYXRlcj1LZzthLnN0YXRlTm9kZT1iO2IuX3JlYWN0SW50ZXJuYWxzPWE7ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1mKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIE5nKGEsYixjLGQpe2E9Yi5zdGF0ZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO2Iuc3RhdGUhPT1hJiZLZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGIsYi5zdGF0ZSxudWxsKX1cbmZ1bmN0aW9uIE9nKGEsYixjLGQpe3ZhciBlPWEuc3RhdGVOb2RlO2UucHJvcHM9YztlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtlLnJlZnM9Rmc7eGcoYSk7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2UuY29udGV4dD12ZyhmKTooZj1GZihiKT9EZjpNLmN1cnJlbnQsZS5jb250ZXh0PUVmKGEsZikpO0NnKGEsYyxlLGQpO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2Y9Yi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGYmJihHZyhhLGIsZixjKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50fHxcbihiPWUuc3RhdGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50JiZlLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpLGIhPT1lLnN0YXRlJiZLZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGUsZS5zdGF0ZSxudWxsKSxDZyhhLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50RGlkTW91bnQmJihhLmZsYWdzfD00KX12YXIgUGc9QXJyYXkuaXNBcnJheTtcbmZ1bmN0aW9uIFFnKGEsYixjKXthPWMucmVmO2lmKG51bGwhPT1hJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmXCJvYmplY3RcIiE9PXR5cGVvZiBhKXtpZihjLl9vd25lcil7Yz1jLl9vd25lcjtpZihjKXtpZigxIT09Yy50YWcpdGhyb3cgRXJyb3IoeSgzMDkpKTt2YXIgZD1jLnN0YXRlTm9kZX1pZighZCl0aHJvdyBFcnJvcih5KDE0NyxhKSk7dmFyIGU9XCJcIithO2lmKG51bGwhPT1iJiZudWxsIT09Yi5yZWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLnJlZiYmYi5yZWYuX3N0cmluZ1JlZj09PWUpcmV0dXJuIGIucmVmO2I9ZnVuY3Rpb24oYSl7dmFyIGI9ZC5yZWZzO2I9PT1GZyYmKGI9ZC5yZWZzPXt9KTtudWxsPT09YT9kZWxldGUgYltlXTpiW2VdPWF9O2IuX3N0cmluZ1JlZj1lO3JldHVybiBifWlmKFwic3RyaW5nXCIhPT10eXBlb2YgYSl0aHJvdyBFcnJvcih5KDI4NCkpO2lmKCFjLl9vd25lcil0aHJvdyBFcnJvcih5KDI5MCxhKSk7fXJldHVybiBhfVxuZnVuY3Rpb24gUmcoYSxiKXtpZihcInRleHRhcmVhXCIhPT1hLnR5cGUpdGhyb3cgRXJyb3IoeSgzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmIpKTt9XG5mdW5jdGlvbiBTZyhhKXtmdW5jdGlvbiBiKGIsYyl7aWYoYSl7dmFyIGQ9Yi5sYXN0RWZmZWN0O251bGwhPT1kPyhkLm5leHRFZmZlY3Q9YyxiLmxhc3RFZmZlY3Q9Yyk6Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YztjLm5leHRFZmZlY3Q9bnVsbDtjLmZsYWdzPTh9fWZ1bmN0aW9uIGMoYyxkKXtpZighYSlyZXR1cm4gbnVsbDtmb3IoO251bGwhPT1kOyliKGMsZCksZD1kLnNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gZChhLGIpe2ZvcihhPW5ldyBNYXA7bnVsbCE9PWI7KW51bGwhPT1iLmtleT9hLnNldChiLmtleSxiKTphLnNldChiLmluZGV4LGIpLGI9Yi5zaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGUoYSxiKXthPVRnKGEsYik7YS5pbmRleD0wO2Euc2libGluZz1udWxsO3JldHVybiBhfWZ1bmN0aW9uIGYoYixjLGQpe2IuaW5kZXg9ZDtpZighYSlyZXR1cm4gYztkPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1kKXJldHVybiBkPWQuaW5kZXgsZDxjPyhiLmZsYWdzPTIsXG5jKTpkO2IuZmxhZ3M9MjtyZXR1cm4gY31mdW5jdGlvbiBnKGIpe2EmJm51bGw9PT1iLmFsdGVybmF0ZSYmKGIuZmxhZ3M9Mik7cmV0dXJuIGJ9ZnVuY3Rpb24gaChhLGIsYyxkKXtpZihudWxsPT09Ynx8NiE9PWIudGFnKXJldHVybiBiPVVnKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIGsoYSxiLGMsZCl7aWYobnVsbCE9PWImJmIuZWxlbWVudFR5cGU9PT1jLnR5cGUpcmV0dXJuIGQ9ZShiLGMucHJvcHMpLGQucmVmPVFnKGEsYixjKSxkLnJldHVybj1hLGQ7ZD1WZyhjLnR5cGUsYy5rZXksYy5wcm9wcyxudWxsLGEubW9kZSxkKTtkLnJlZj1RZyhhLGIsYyk7ZC5yZXR1cm49YTtyZXR1cm4gZH1mdW5jdGlvbiBsKGEsYixjLGQpe2lmKG51bGw9PT1ifHw0IT09Yi50YWd8fGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8hPT1jLmNvbnRhaW5lckluZm98fGIuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uIT09Yy5pbXBsZW1lbnRhdGlvbilyZXR1cm4gYj1cbldnKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLmNoaWxkcmVufHxbXSk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBuKGEsYixjLGQsZil7aWYobnVsbD09PWJ8fDchPT1iLnRhZylyZXR1cm4gYj1YZyhjLGEubW9kZSxkLGYpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIEEoYSxiLGMpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYnx8XCJudW1iZXJcIj09PXR5cGVvZiBiKXJldHVybiBiPVVnKFwiXCIrYixhLm1vZGUsYyksYi5yZXR1cm49YSxiO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWIpe3N3aXRjaChiLiQkdHlwZW9mKXtjYXNlIHNhOnJldHVybiBjPVZnKGIudHlwZSxiLmtleSxiLnByb3BzLG51bGwsYS5tb2RlLGMpLGMucmVmPVFnKGEsbnVsbCxiKSxjLnJldHVybj1hLGM7Y2FzZSB0YTpyZXR1cm4gYj1XZyhiLGEubW9kZSxjKSxiLnJldHVybj1hLGJ9aWYoUGcoYil8fExhKGIpKXJldHVybiBiPVhnKGIsXG5hLm1vZGUsYyxudWxsKSxiLnJldHVybj1hLGI7UmcoYSxiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBwKGEsYixjLGQpe3ZhciBlPW51bGwhPT1iP2Iua2V5Om51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBjfHxcIm51bWJlclwiPT09dHlwZW9mIGMpcmV0dXJuIG51bGwhPT1lP251bGw6aChhLGIsXCJcIitjLGQpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3N3aXRjaChjLiQkdHlwZW9mKXtjYXNlIHNhOnJldHVybiBjLmtleT09PWU/Yy50eXBlPT09dWE/bihhLGIsYy5wcm9wcy5jaGlsZHJlbixkLGUpOmsoYSxiLGMsZCk6bnVsbDtjYXNlIHRhOnJldHVybiBjLmtleT09PWU/bChhLGIsYyxkKTpudWxsfWlmKFBnKGMpfHxMYShjKSlyZXR1cm4gbnVsbCE9PWU/bnVsbDpuKGEsYixjLGQsbnVsbCk7UmcoYSxjKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBDKGEsYixjLGQsZSl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkfHxcIm51bWJlclwiPT09dHlwZW9mIGQpcmV0dXJuIGE9YS5nZXQoYyl8fFxubnVsbCxoKGIsYSxcIlwiK2QsZSk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCl7c3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2Ugc2E6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGQudHlwZT09PXVhP24oYixhLGQucHJvcHMuY2hpbGRyZW4sZSxkLmtleSk6ayhiLGEsZCxlKTtjYXNlIHRhOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxsKGIsYSxkLGUpfWlmKFBnKGQpfHxMYShkKSlyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxuKGIsYSxkLGUsbnVsbCk7UmcoYixkKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB4KGUsZyxoLGspe2Zvcih2YXIgbD1udWxsLHQ9bnVsbCx1PWcsej1nPTAscT1udWxsO251bGwhPT11JiZ6PGgubGVuZ3RoO3orKyl7dS5pbmRleD56PyhxPXUsdT1udWxsKTpxPXUuc2libGluZzt2YXIgbj1wKGUsdSxoW3pdLGspO2lmKG51bGw9PT1uKXtudWxsPT09dSYmKHU9cSk7YnJlYWt9YSYmdSYmbnVsbD09PVxubi5hbHRlcm5hdGUmJmIoZSx1KTtnPWYobixnLHopO251bGw9PT10P2w9bjp0LnNpYmxpbmc9bjt0PW47dT1xfWlmKHo9PT1oLmxlbmd0aClyZXR1cm4gYyhlLHUpLGw7aWYobnVsbD09PXUpe2Zvcig7ejxoLmxlbmd0aDt6KyspdT1BKGUsaFt6XSxrKSxudWxsIT09dSYmKGc9Zih1LGcseiksbnVsbD09PXQ/bD11OnQuc2libGluZz11LHQ9dSk7cmV0dXJuIGx9Zm9yKHU9ZChlLHUpO3o8aC5sZW5ndGg7eisrKXE9Qyh1LGUseixoW3pdLGspLG51bGwhPT1xJiYoYSYmbnVsbCE9PXEuYWx0ZXJuYXRlJiZ1LmRlbGV0ZShudWxsPT09cS5rZXk/ejpxLmtleSksZz1mKHEsZyx6KSxudWxsPT09dD9sPXE6dC5zaWJsaW5nPXEsdD1xKTthJiZ1LmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfWZ1bmN0aW9uIHcoZSxnLGgsayl7dmFyIGw9TGEoaCk7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGwpdGhyb3cgRXJyb3IoeSgxNTApKTtoPWwuY2FsbChoKTtpZihudWxsPT1cbmgpdGhyb3cgRXJyb3IoeSgxNTEpKTtmb3IodmFyIHQ9bD1udWxsLHU9Zyx6PWc9MCxxPW51bGwsbj1oLm5leHQoKTtudWxsIT09dSYmIW4uZG9uZTt6Kyssbj1oLm5leHQoKSl7dS5pbmRleD56PyhxPXUsdT1udWxsKTpxPXUuc2libGluZzt2YXIgdz1wKGUsdSxuLnZhbHVlLGspO2lmKG51bGw9PT13KXtudWxsPT09dSYmKHU9cSk7YnJlYWt9YSYmdSYmbnVsbD09PXcuYWx0ZXJuYXRlJiZiKGUsdSk7Zz1mKHcsZyx6KTtudWxsPT09dD9sPXc6dC5zaWJsaW5nPXc7dD13O3U9cX1pZihuLmRvbmUpcmV0dXJuIGMoZSx1KSxsO2lmKG51bGw9PT11KXtmb3IoOyFuLmRvbmU7eisrLG49aC5uZXh0KCkpbj1BKGUsbi52YWx1ZSxrKSxudWxsIT09biYmKGc9ZihuLGcseiksbnVsbD09PXQ/bD1uOnQuc2libGluZz1uLHQ9bik7cmV0dXJuIGx9Zm9yKHU9ZChlLHUpOyFuLmRvbmU7eisrLG49aC5uZXh0KCkpbj1DKHUsZSx6LG4udmFsdWUsayksbnVsbCE9PW4mJihhJiZudWxsIT09bi5hbHRlcm5hdGUmJlxudS5kZWxldGUobnVsbD09PW4ua2V5P3o6bi5rZXkpLGc9ZihuLGcseiksbnVsbD09PXQ/bD1uOnQuc2libGluZz1uLHQ9bik7YSYmdS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1yZXR1cm4gZnVuY3Rpb24oYSxkLGYsaCl7dmFyIGs9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi50eXBlPT09dWEmJm51bGw9PT1mLmtleTtrJiYoZj1mLnByb3BzLmNoaWxkcmVuKTt2YXIgbD1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mO2lmKGwpc3dpdGNoKGYuJCR0eXBlb2Ype2Nhc2Ugc2E6YTp7bD1mLmtleTtmb3Ioaz1kO251bGwhPT1rOyl7aWYoay5rZXk9PT1sKXtzd2l0Y2goay50YWcpe2Nhc2UgNzppZihmLnR5cGU9PT11YSl7YyhhLGsuc2libGluZyk7ZD1lKGssZi5wcm9wcy5jaGlsZHJlbik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1icmVhaztkZWZhdWx0OmlmKGsuZWxlbWVudFR5cGU9PT1mLnR5cGUpe2MoYSxrLnNpYmxpbmcpO1xuZD1lKGssZi5wcm9wcyk7ZC5yZWY9UWcoYSxrLGYpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9fWMoYSxrKTticmVha31lbHNlIGIoYSxrKTtrPWsuc2libGluZ31mLnR5cGU9PT11YT8oZD1YZyhmLnByb3BzLmNoaWxkcmVuLGEubW9kZSxoLGYua2V5KSxkLnJldHVybj1hLGE9ZCk6KGg9VmcoZi50eXBlLGYua2V5LGYucHJvcHMsbnVsbCxhLm1vZGUsaCksaC5yZWY9UWcoYSxkLGYpLGgucmV0dXJuPWEsYT1oKX1yZXR1cm4gZyhhKTtjYXNlIHRhOmE6e2ZvcihrPWYua2V5O251bGwhPT1kOyl7aWYoZC5rZXk9PT1rKWlmKDQ9PT1kLnRhZyYmZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbz09PWYuY29udGFpbmVySW5mbyYmZC5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb249PT1mLmltcGxlbWVudGF0aW9uKXtjKGEsZC5zaWJsaW5nKTtkPWUoZCxmLmNoaWxkcmVufHxbXSk7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPWQuc2libGluZ31kPVxuV2coZixhLm1vZGUsaCk7ZC5yZXR1cm49YTthPWR9cmV0dXJuIGcoYSl9aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBmfHxcIm51bWJlclwiPT09dHlwZW9mIGYpcmV0dXJuIGY9XCJcIitmLG51bGwhPT1kJiY2PT09ZC50YWc/KGMoYSxkLnNpYmxpbmcpLGQ9ZShkLGYpLGQucmV0dXJuPWEsYT1kKTooYyhhLGQpLGQ9VWcoZixhLm1vZGUsaCksZC5yZXR1cm49YSxhPWQpLGcoYSk7aWYoUGcoZikpcmV0dXJuIHgoYSxkLGYsaCk7aWYoTGEoZikpcmV0dXJuIHcoYSxkLGYsaCk7bCYmUmcoYSxmKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGYmJiFrKXN3aXRjaChhLnRhZyl7Y2FzZSAxOmNhc2UgMjI6Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTp0aHJvdyBFcnJvcih5KDE1MixSYShhLnR5cGUpfHxcIkNvbXBvbmVudFwiKSk7fXJldHVybiBjKGEsZCl9fXZhciBZZz1TZyghMCksWmc9U2coITEpLCRnPXt9LGFoPUJmKCRnKSxiaD1CZigkZyksY2g9QmYoJGcpO1xuZnVuY3Rpb24gZGgoYSl7aWYoYT09PSRnKXRocm93IEVycm9yKHkoMTc0KSk7cmV0dXJuIGF9ZnVuY3Rpb24gZWgoYSxiKXtJKGNoLGIpO0koYmgsYSk7SShhaCwkZyk7YT1iLm5vZGVUeXBlO3N3aXRjaChhKXtjYXNlIDk6Y2FzZSAxMTpiPShiPWIuZG9jdW1lbnRFbGVtZW50KT9iLm5hbWVzcGFjZVVSSTptYihudWxsLFwiXCIpO2JyZWFrO2RlZmF1bHQ6YT04PT09YT9iLnBhcmVudE5vZGU6YixiPWEubmFtZXNwYWNlVVJJfHxudWxsLGE9YS50YWdOYW1lLGI9bWIoYixhKX1IKGFoKTtJKGFoLGIpfWZ1bmN0aW9uIGZoKCl7SChhaCk7SChiaCk7SChjaCl9ZnVuY3Rpb24gZ2goYSl7ZGgoY2guY3VycmVudCk7dmFyIGI9ZGgoYWguY3VycmVudCk7dmFyIGM9bWIoYixhLnR5cGUpO2IhPT1jJiYoSShiaCxhKSxJKGFoLGMpKX1mdW5jdGlvbiBoaChhKXtiaC5jdXJyZW50PT09YSYmKEgoYWgpLEgoYmgpKX12YXIgUD1CZigwKTtcbmZ1bmN0aW9uIGloKGEpe2Zvcih2YXIgYj1hO251bGwhPT1iOyl7aWYoMTM9PT1iLnRhZyl7dmFyIGM9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1jJiYoYz1jLmRlaHlkcmF0ZWQsbnVsbD09PWN8fFwiJD9cIj09PWMuZGF0YXx8XCIkIVwiPT09Yy5kYXRhKSlyZXR1cm4gYn1lbHNlIGlmKDE5PT09Yi50YWcmJnZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5yZXZlYWxPcmRlcil7aWYoMCE9PShiLmZsYWdzJjY0KSlyZXR1cm4gYn1lbHNlIGlmKG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09Yi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9cmV0dXJuIG51bGx9dmFyIGpoPW51bGwsa2g9bnVsbCxsaD0hMTtcbmZ1bmN0aW9uIG1oKGEsYil7dmFyIGM9bmgoNSxudWxsLG51bGwsMCk7Yy5lbGVtZW50VHlwZT1cIkRFTEVURURcIjtjLnR5cGU9XCJERUxFVEVEXCI7Yy5zdGF0ZU5vZGU9YjtjLnJldHVybj1hO2MuZmxhZ3M9ODtudWxsIT09YS5sYXN0RWZmZWN0PyhhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGEubGFzdEVmZmVjdD1jKTphLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1jfWZ1bmN0aW9uIG9oKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6dmFyIGM9YS50eXBlO2I9MSE9PWIubm9kZVR5cGV8fGMudG9Mb3dlckNhc2UoKSE9PWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmI7cmV0dXJuIG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDY6cmV0dXJuIGI9XCJcIj09PWEucGVuZGluZ1Byb3BzfHwzIT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgMTM6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBwaChhKXtpZihsaCl7dmFyIGI9a2g7aWYoYil7dmFyIGM9YjtpZighb2goYSxiKSl7Yj1yZihjLm5leHRTaWJsaW5nKTtpZighYnx8IW9oKGEsYikpe2EuZmxhZ3M9YS5mbGFncyYtMTAyNXwyO2xoPSExO2poPWE7cmV0dXJufW1oKGpoLGMpfWpoPWE7a2g9cmYoYi5maXJzdENoaWxkKX1lbHNlIGEuZmxhZ3M9YS5mbGFncyYtMTAyNXwyLGxoPSExLGpoPWF9fWZ1bmN0aW9uIHFoKGEpe2ZvcihhPWEucmV0dXJuO251bGwhPT1hJiY1IT09YS50YWcmJjMhPT1hLnRhZyYmMTMhPT1hLnRhZzspYT1hLnJldHVybjtqaD1hfVxuZnVuY3Rpb24gcmgoYSl7aWYoYSE9PWpoKXJldHVybiExO2lmKCFsaClyZXR1cm4gcWgoYSksbGg9ITAsITE7dmFyIGI9YS50eXBlO2lmKDUhPT1hLnRhZ3x8XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiFuZihiLGEubWVtb2l6ZWRQcm9wcykpZm9yKGI9a2g7YjspbWgoYSxiKSxiPXJmKGIubmV4dFNpYmxpbmcpO3FoKGEpO2lmKDEzPT09YS50YWcpe2E9YS5tZW1vaXplZFN0YXRlO2E9bnVsbCE9PWE/YS5kZWh5ZHJhdGVkOm51bGw7aWYoIWEpdGhyb3cgRXJyb3IoeSgzMTcpKTthOnthPWEubmV4dFNpYmxpbmc7Zm9yKGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihcIi8kXCI9PT1jKXtpZigwPT09Yil7a2g9cmYoYS5uZXh0U2libGluZyk7YnJlYWsgYX1iLS19ZWxzZVwiJFwiIT09YyYmXCIkIVwiIT09YyYmXCIkP1wiIT09Y3x8YisrfWE9YS5uZXh0U2libGluZ31raD1udWxsfX1lbHNlIGtoPWpoP3JmKGEuc3RhdGVOb2RlLm5leHRTaWJsaW5nKTpudWxsO3JldHVybiEwfVxuZnVuY3Rpb24gc2goKXtraD1qaD1udWxsO2xoPSExfXZhciB0aD1bXTtmdW5jdGlvbiB1aCgpe2Zvcih2YXIgYT0wO2E8dGgubGVuZ3RoO2ErKyl0aFthXS5fd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeT1udWxsO3RoLmxlbmd0aD0wfXZhciB2aD1yYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLHdoPXJhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnLHhoPTAsUj1udWxsLFM9bnVsbCxUPW51bGwseWg9ITEsemg9ITE7ZnVuY3Rpb24gQWgoKXt0aHJvdyBFcnJvcih5KDMyMSkpO31mdW5jdGlvbiBCaChhLGIpe2lmKG51bGw9PT1iKXJldHVybiExO2Zvcih2YXIgYz0wO2M8Yi5sZW5ndGgmJmM8YS5sZW5ndGg7YysrKWlmKCFIZShhW2NdLGJbY10pKXJldHVybiExO3JldHVybiEwfVxuZnVuY3Rpb24gQ2goYSxiLGMsZCxlLGYpe3hoPWY7Uj1iO2IubWVtb2l6ZWRTdGF0ZT1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtiLmxhbmVzPTA7dmguY3VycmVudD1udWxsPT09YXx8bnVsbD09PWEubWVtb2l6ZWRTdGF0ZT9EaDpFaDthPWMoZCxlKTtpZih6aCl7Zj0wO2Rve3poPSExO2lmKCEoMjU+ZikpdGhyb3cgRXJyb3IoeSgzMDEpKTtmKz0xO1Q9Uz1udWxsO2IudXBkYXRlUXVldWU9bnVsbDt2aC5jdXJyZW50PUZoO2E9YyhkLGUpfXdoaWxlKHpoKX12aC5jdXJyZW50PUdoO2I9bnVsbCE9PVMmJm51bGwhPT1TLm5leHQ7eGg9MDtUPVM9Uj1udWxsO3loPSExO2lmKGIpdGhyb3cgRXJyb3IoeSgzMDApKTtyZXR1cm4gYX1mdW5jdGlvbiBIaCgpe3ZhciBhPXttZW1vaXplZFN0YXRlOm51bGwsYmFzZVN0YXRlOm51bGwsYmFzZVF1ZXVlOm51bGwscXVldWU6bnVsbCxuZXh0Om51bGx9O251bGw9PT1UP1IubWVtb2l6ZWRTdGF0ZT1UPWE6VD1ULm5leHQ9YTtyZXR1cm4gVH1cbmZ1bmN0aW9uIEloKCl7aWYobnVsbD09PVMpe3ZhciBhPVIuYWx0ZXJuYXRlO2E9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGx9ZWxzZSBhPVMubmV4dDt2YXIgYj1udWxsPT09VD9SLm1lbW9pemVkU3RhdGU6VC5uZXh0O2lmKG51bGwhPT1iKVQ9YixTPWE7ZWxzZXtpZihudWxsPT09YSl0aHJvdyBFcnJvcih5KDMxMCkpO1M9YTthPXttZW1vaXplZFN0YXRlOlMubWVtb2l6ZWRTdGF0ZSxiYXNlU3RhdGU6Uy5iYXNlU3RhdGUsYmFzZVF1ZXVlOlMuYmFzZVF1ZXVlLHF1ZXVlOlMucXVldWUsbmV4dDpudWxsfTtudWxsPT09VD9SLm1lbW9pemVkU3RhdGU9VD1hOlQ9VC5uZXh0PWF9cmV0dXJuIFR9ZnVuY3Rpb24gSmgoYSxiKXtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKGEpOmJ9XG5mdW5jdGlvbiBLaChhKXt2YXIgYj1JaCgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcih5KDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO3ZhciBkPVMsZT1kLmJhc2VRdWV1ZSxmPWMucGVuZGluZztpZihudWxsIT09Zil7aWYobnVsbCE9PWUpe3ZhciBnPWUubmV4dDtlLm5leHQ9Zi5uZXh0O2YubmV4dD1nfWQuYmFzZVF1ZXVlPWU9ZjtjLnBlbmRpbmc9bnVsbH1pZihudWxsIT09ZSl7ZT1lLm5leHQ7ZD1kLmJhc2VTdGF0ZTt2YXIgaD1nPWY9bnVsbCxrPWU7ZG97dmFyIGw9ay5sYW5lO2lmKCh4aCZsKT09PWwpbnVsbCE9PWgmJihoPWgubmV4dD17bGFuZTowLGFjdGlvbjprLmFjdGlvbixlYWdlclJlZHVjZXI6ay5lYWdlclJlZHVjZXIsZWFnZXJTdGF0ZTprLmVhZ2VyU3RhdGUsbmV4dDpudWxsfSksZD1rLmVhZ2VyUmVkdWNlcj09PWE/ay5lYWdlclN0YXRlOmEoZCxrLmFjdGlvbik7ZWxzZXt2YXIgbj17bGFuZTpsLGFjdGlvbjprLmFjdGlvbixlYWdlclJlZHVjZXI6ay5lYWdlclJlZHVjZXIsXG5lYWdlclN0YXRlOmsuZWFnZXJTdGF0ZSxuZXh0Om51bGx9O251bGw9PT1oPyhnPWg9bixmPWQpOmg9aC5uZXh0PW47Ui5sYW5lc3w9bDtEZ3w9bH1rPWsubmV4dH13aGlsZShudWxsIT09ayYmayE9PWUpO251bGw9PT1oP2Y9ZDpoLm5leHQ9ZztIZShkLGIubWVtb2l6ZWRTdGF0ZSl8fCh1Zz0hMCk7Yi5tZW1vaXplZFN0YXRlPWQ7Yi5iYXNlU3RhdGU9ZjtiLmJhc2VRdWV1ZT1oO2MubGFzdFJlbmRlcmVkU3RhdGU9ZH1yZXR1cm5bYi5tZW1vaXplZFN0YXRlLGMuZGlzcGF0Y2hdfVxuZnVuY3Rpb24gTGgoYSl7dmFyIGI9SWgoKSxjPWIucXVldWU7aWYobnVsbD09PWMpdGhyb3cgRXJyb3IoeSgzMTEpKTtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTt2YXIgZD1jLmRpc3BhdGNoLGU9Yy5wZW5kaW5nLGY9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1lKXtjLnBlbmRpbmc9bnVsbDt2YXIgZz1lPWUubmV4dDtkbyBmPWEoZixnLmFjdGlvbiksZz1nLm5leHQ7d2hpbGUoZyE9PWUpO0hlKGYsYi5tZW1vaXplZFN0YXRlKXx8KHVnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZjtudWxsPT09Yi5iYXNlUXVldWUmJihiLmJhc2VTdGF0ZT1mKTtjLmxhc3RSZW5kZXJlZFN0YXRlPWZ9cmV0dXJuW2YsZF19XG5mdW5jdGlvbiBNaChhLGIsYyl7dmFyIGQ9Yi5fZ2V0VmVyc2lvbjtkPWQoYi5fc291cmNlKTt2YXIgZT1iLl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5O2lmKG51bGwhPT1lKWE9ZT09PWQ7ZWxzZSBpZihhPWEubXV0YWJsZVJlYWRMYW5lcyxhPSh4aCZhKT09PWEpYi5fd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeT1kLHRoLnB1c2goYik7aWYoYSlyZXR1cm4gYyhiLl9zb3VyY2UpO3RoLnB1c2goYik7dGhyb3cgRXJyb3IoeSgzNTApKTt9XG5mdW5jdGlvbiBOaChhLGIsYyxkKXt2YXIgZT1VO2lmKG51bGw9PT1lKXRocm93IEVycm9yKHkoMzQ5KSk7dmFyIGY9Yi5fZ2V0VmVyc2lvbixnPWYoYi5fc291cmNlKSxoPXZoLmN1cnJlbnQsaz1oLnVzZVN0YXRlKGZ1bmN0aW9uKCl7cmV0dXJuIE1oKGUsYixjKX0pLGw9a1sxXSxuPWtbMF07az1UO3ZhciBBPWEubWVtb2l6ZWRTdGF0ZSxwPUEucmVmcyxDPXAuZ2V0U25hcHNob3QseD1BLnNvdXJjZTtBPUEuc3Vic2NyaWJlO3ZhciB3PVI7YS5tZW1vaXplZFN0YXRlPXtyZWZzOnAsc291cmNlOmIsc3Vic2NyaWJlOmR9O2gudXNlRWZmZWN0KGZ1bmN0aW9uKCl7cC5nZXRTbmFwc2hvdD1jO3Auc2V0U25hcHNob3Q9bDt2YXIgYT1mKGIuX3NvdXJjZSk7aWYoIUhlKGcsYSkpe2E9YyhiLl9zb3VyY2UpO0hlKG4sYSl8fChsKGEpLGE9SWcodyksZS5tdXRhYmxlUmVhZExhbmVzfD1hJmUucGVuZGluZ0xhbmVzKTthPWUubXV0YWJsZVJlYWRMYW5lcztlLmVudGFuZ2xlZExhbmVzfD1hO2Zvcih2YXIgZD1cbmUuZW50YW5nbGVtZW50cyxoPWE7MDxoOyl7dmFyIGs9MzEtVmMoaCksdj0xPDxrO2Rba118PWE7aCY9fnZ9fX0sW2MsYixkXSk7aC51c2VFZmZlY3QoZnVuY3Rpb24oKXtyZXR1cm4gZChiLl9zb3VyY2UsZnVuY3Rpb24oKXt2YXIgYT1wLmdldFNuYXBzaG90LGM9cC5zZXRTbmFwc2hvdDt0cnl7YyhhKGIuX3NvdXJjZSkpO3ZhciBkPUlnKHcpO2UubXV0YWJsZVJlYWRMYW5lc3w9ZCZlLnBlbmRpbmdMYW5lc31jYXRjaChxKXtjKGZ1bmN0aW9uKCl7dGhyb3cgcTt9KX19KX0sW2IsZF0pO0hlKEMsYykmJkhlKHgsYikmJkhlKEEsZCl8fChhPXtwZW5kaW5nOm51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOkpoLGxhc3RSZW5kZXJlZFN0YXRlOm59LGEuZGlzcGF0Y2g9bD1PaC5iaW5kKG51bGwsUixhKSxrLnF1ZXVlPWEsay5iYXNlUXVldWU9bnVsbCxuPU1oKGUsYixjKSxrLm1lbW9pemVkU3RhdGU9ay5iYXNlU3RhdGU9bik7cmV0dXJuIG59XG5mdW5jdGlvbiBQaChhLGIsYyl7dmFyIGQ9SWgoKTtyZXR1cm4gTmgoZCxhLGIsYyl9ZnVuY3Rpb24gUWgoYSl7dmFyIGI9SGgoKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSYmKGE9YSgpKTtiLm1lbW9pemVkU3RhdGU9Yi5iYXNlU3RhdGU9YTthPWIucXVldWU9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6SmgsbGFzdFJlbmRlcmVkU3RhdGU6YX07YT1hLmRpc3BhdGNoPU9oLmJpbmQobnVsbCxSLGEpO3JldHVybltiLm1lbW9pemVkU3RhdGUsYV19XG5mdW5jdGlvbiBSaChhLGIsYyxkKXthPXt0YWc6YSxjcmVhdGU6YixkZXN0cm95OmMsZGVwczpkLG5leHQ6bnVsbH07Yj1SLnVwZGF0ZVF1ZXVlO251bGw9PT1iPyhiPXtsYXN0RWZmZWN0Om51bGx9LFIudXBkYXRlUXVldWU9YixiLmxhc3RFZmZlY3Q9YS5uZXh0PWEpOihjPWIubGFzdEVmZmVjdCxudWxsPT09Yz9iLmxhc3RFZmZlY3Q9YS5uZXh0PWE6KGQ9Yy5uZXh0LGMubmV4dD1hLGEubmV4dD1kLGIubGFzdEVmZmVjdD1hKSk7cmV0dXJuIGF9ZnVuY3Rpb24gU2goYSl7dmFyIGI9SGgoKTthPXtjdXJyZW50OmF9O3JldHVybiBiLm1lbW9pemVkU3RhdGU9YX1mdW5jdGlvbiBUaCgpe3JldHVybiBJaCgpLm1lbW9pemVkU3RhdGV9ZnVuY3Rpb24gVWgoYSxiLGMsZCl7dmFyIGU9SGgoKTtSLmZsYWdzfD1hO2UubWVtb2l6ZWRTdGF0ZT1SaCgxfGIsYyx2b2lkIDAsdm9pZCAwPT09ZD9udWxsOmQpfVxuZnVuY3Rpb24gVmgoYSxiLGMsZCl7dmFyIGU9SWgoKTtkPXZvaWQgMD09PWQ/bnVsbDpkO3ZhciBmPXZvaWQgMDtpZihudWxsIT09Uyl7dmFyIGc9Uy5tZW1vaXplZFN0YXRlO2Y9Zy5kZXN0cm95O2lmKG51bGwhPT1kJiZCaChkLGcuZGVwcykpe1JoKGIsYyxmLGQpO3JldHVybn19Ui5mbGFnc3w9YTtlLm1lbW9pemVkU3RhdGU9UmgoMXxiLGMsZixkKX1mdW5jdGlvbiBXaChhLGIpe3JldHVybiBVaCg1MTYsNCxhLGIpfWZ1bmN0aW9uIFhoKGEsYil7cmV0dXJuIFZoKDUxNiw0LGEsYil9ZnVuY3Rpb24gWWgoYSxiKXtyZXR1cm4gVmgoNCwyLGEsYil9ZnVuY3Rpb24gWmgoYSxiKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYilyZXR1cm4gYT1hKCksYihhKSxmdW5jdGlvbigpe2IobnVsbCl9O2lmKG51bGwhPT1iJiZ2b2lkIDAhPT1iKXJldHVybiBhPWEoKSxiLmN1cnJlbnQ9YSxmdW5jdGlvbigpe2IuY3VycmVudD1udWxsfX1cbmZ1bmN0aW9uICRoKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gVmgoNCwyLFpoLmJpbmQobnVsbCxiLGEpLGMpfWZ1bmN0aW9uIGFpKCl7fWZ1bmN0aW9uIGJpKGEsYil7dmFyIGM9SWgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJkJoKGIsZFsxXSkpcmV0dXJuIGRbMF07Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfWZ1bmN0aW9uIGNpKGEsYil7dmFyIGM9SWgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJkJoKGIsZFsxXSkpcmV0dXJuIGRbMF07YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfVxuZnVuY3Rpb24gZGkoYSxiKXt2YXIgYz1lZygpO2dnKDk4PmM/OTg6YyxmdW5jdGlvbigpe2EoITApfSk7Z2coOTc8Yz85NzpjLGZ1bmN0aW9uKCl7dmFyIGM9d2gudHJhbnNpdGlvbjt3aC50cmFuc2l0aW9uPTE7dHJ5e2EoITEpLGIoKX1maW5hbGx5e3doLnRyYW5zaXRpb249Y319KX1cbmZ1bmN0aW9uIE9oKGEsYixjKXt2YXIgZD1IZygpLGU9SWcoYSksZj17bGFuZTplLGFjdGlvbjpjLGVhZ2VyUmVkdWNlcjpudWxsLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9LGc9Yi5wZW5kaW5nO251bGw9PT1nP2YubmV4dD1mOihmLm5leHQ9Zy5uZXh0LGcubmV4dD1mKTtiLnBlbmRpbmc9ZjtnPWEuYWx0ZXJuYXRlO2lmKGE9PT1SfHxudWxsIT09ZyYmZz09PVIpemg9eWg9ITA7ZWxzZXtpZigwPT09YS5sYW5lcyYmKG51bGw9PT1nfHwwPT09Zy5sYW5lcykmJihnPWIubGFzdFJlbmRlcmVkUmVkdWNlcixudWxsIT09ZykpdHJ5e3ZhciBoPWIubGFzdFJlbmRlcmVkU3RhdGUsaz1nKGgsYyk7Zi5lYWdlclJlZHVjZXI9ZztmLmVhZ2VyU3RhdGU9aztpZihIZShrLGgpKXJldHVybn1jYXRjaChsKXt9ZmluYWxseXt9SmcoYSxlLGQpfX1cbnZhciBHaD17cmVhZENvbnRleHQ6dmcsdXNlQ2FsbGJhY2s6QWgsdXNlQ29udGV4dDpBaCx1c2VFZmZlY3Q6QWgsdXNlSW1wZXJhdGl2ZUhhbmRsZTpBaCx1c2VMYXlvdXRFZmZlY3Q6QWgsdXNlTWVtbzpBaCx1c2VSZWR1Y2VyOkFoLHVzZVJlZjpBaCx1c2VTdGF0ZTpBaCx1c2VEZWJ1Z1ZhbHVlOkFoLHVzZURlZmVycmVkVmFsdWU6QWgsdXNlVHJhbnNpdGlvbjpBaCx1c2VNdXRhYmxlU291cmNlOkFoLHVzZU9wYXF1ZUlkZW50aWZpZXI6QWgsdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxEaD17cmVhZENvbnRleHQ6dmcsdXNlQ2FsbGJhY2s6ZnVuY3Rpb24oYSxiKXtIaCgpLm1lbW9pemVkU3RhdGU9W2Esdm9pZCAwPT09Yj9udWxsOmJdO3JldHVybiBhfSx1c2VDb250ZXh0OnZnLHVzZUVmZmVjdDpXaCx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gVWgoNCwyLFpoLmJpbmQobnVsbCxcbmIsYSksYyl9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBVaCg0LDIsYSxiKX0sdXNlTWVtbzpmdW5jdGlvbihhLGIpe3ZhciBjPUhoKCk7Yj12b2lkIDA9PT1iP251bGw6YjthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPUhoKCk7Yj12b2lkIDAhPT1jP2MoYik6YjtkLm1lbW9pemVkU3RhdGU9ZC5iYXNlU3RhdGU9YjthPWQucXVldWU9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6YSxsYXN0UmVuZGVyZWRTdGF0ZTpifTthPWEuZGlzcGF0Y2g9T2guYmluZChudWxsLFIsYSk7cmV0dXJuW2QubWVtb2l6ZWRTdGF0ZSxhXX0sdXNlUmVmOlNoLHVzZVN0YXRlOlFoLHVzZURlYnVnVmFsdWU6YWksdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhKXt2YXIgYj1RaChhKSxjPWJbMF0sZD1iWzFdO1doKGZ1bmN0aW9uKCl7dmFyIGI9d2gudHJhbnNpdGlvbjtcbndoLnRyYW5zaXRpb249MTt0cnl7ZChhKX1maW5hbGx5e3doLnRyYW5zaXRpb249Yn19LFthXSk7cmV0dXJuIGN9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oKXt2YXIgYT1RaCghMSksYj1hWzBdO2E9ZGkuYmluZChudWxsLGFbMV0pO1NoKGEpO3JldHVyblthLGJdfSx1c2VNdXRhYmxlU291cmNlOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1IaCgpO2QubWVtb2l6ZWRTdGF0ZT17cmVmczp7Z2V0U25hcHNob3Q6YixzZXRTbmFwc2hvdDpudWxsfSxzb3VyY2U6YSxzdWJzY3JpYmU6Y307cmV0dXJuIE5oKGQsYSxiLGMpfSx1c2VPcGFxdWVJZGVudGlmaWVyOmZ1bmN0aW9uKCl7aWYobGgpe3ZhciBhPSExLGI9dWYoZnVuY3Rpb24oKXthfHwoYT0hMCxjKFwicjpcIisodGYrKykudG9TdHJpbmcoMzYpKSk7dGhyb3cgRXJyb3IoeSgzNTUpKTt9KSxjPVFoKGIpWzFdOzA9PT0oUi5tb2RlJjIpJiYoUi5mbGFnc3w9NTE2LFJoKDUsZnVuY3Rpb24oKXtjKFwicjpcIisodGYrKykudG9TdHJpbmcoMzYpKX0sXG52b2lkIDAsbnVsbCkpO3JldHVybiBifWI9XCJyOlwiKyh0ZisrKS50b1N0cmluZygzNik7UWgoYik7cmV0dXJuIGJ9LHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX0sRWg9e3JlYWRDb250ZXh0OnZnLHVzZUNhbGxiYWNrOmJpLHVzZUNvbnRleHQ6dmcsdXNlRWZmZWN0OlhoLHVzZUltcGVyYXRpdmVIYW5kbGU6JGgsdXNlTGF5b3V0RWZmZWN0OlloLHVzZU1lbW86Y2ksdXNlUmVkdWNlcjpLaCx1c2VSZWY6VGgsdXNlU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gS2goSmgpfSx1c2VEZWJ1Z1ZhbHVlOmFpLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSl7dmFyIGI9S2goSmgpLGM9YlswXSxkPWJbMV07WGgoZnVuY3Rpb24oKXt2YXIgYj13aC50cmFuc2l0aW9uO3doLnRyYW5zaXRpb249MTt0cnl7ZChhKX1maW5hbGx5e3doLnRyYW5zaXRpb249Yn19LFthXSk7cmV0dXJuIGN9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oKXt2YXIgYT1LaChKaClbMF07cmV0dXJuW1RoKCkuY3VycmVudCxcbmFdfSx1c2VNdXRhYmxlU291cmNlOlBoLHVzZU9wYXF1ZUlkZW50aWZpZXI6ZnVuY3Rpb24oKXtyZXR1cm4gS2goSmgpWzBdfSx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LEZoPXtyZWFkQ29udGV4dDp2Zyx1c2VDYWxsYmFjazpiaSx1c2VDb250ZXh0OnZnLHVzZUVmZmVjdDpYaCx1c2VJbXBlcmF0aXZlSGFuZGxlOiRoLHVzZUxheW91dEVmZmVjdDpZaCx1c2VNZW1vOmNpLHVzZVJlZHVjZXI6TGgsdXNlUmVmOlRoLHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIExoKEpoKX0sdXNlRGVidWdWYWx1ZTphaSx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEpe3ZhciBiPUxoKEpoKSxjPWJbMF0sZD1iWzFdO1hoKGZ1bmN0aW9uKCl7dmFyIGI9d2gudHJhbnNpdGlvbjt3aC50cmFuc2l0aW9uPTE7dHJ5e2QoYSl9ZmluYWxseXt3aC50cmFuc2l0aW9uPWJ9fSxbYV0pO3JldHVybiBjfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9TGgoSmgpWzBdO3JldHVybltUaCgpLmN1cnJlbnQsXG5hXX0sdXNlTXV0YWJsZVNvdXJjZTpQaCx1c2VPcGFxdWVJZGVudGlmaWVyOmZ1bmN0aW9uKCl7cmV0dXJuIExoKEpoKVswXX0sdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxlaT1yYS5SZWFjdEN1cnJlbnRPd25lcix1Zz0hMTtmdW5jdGlvbiBmaShhLGIsYyxkKXtiLmNoaWxkPW51bGw9PT1hP1pnKGIsbnVsbCxjLGQpOllnKGIsYS5jaGlsZCxjLGQpfWZ1bmN0aW9uIGdpKGEsYixjLGQsZSl7Yz1jLnJlbmRlcjt2YXIgZj1iLnJlZjt0ZyhiLGUpO2Q9Q2goYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhdWcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmZsYWdzJj0tNTE3LGEubGFuZXMmPX5lLGhpKGEsYixlKTtiLmZsYWdzfD0xO2ZpKGEsYixkLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gaWkoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hKXt2YXIgZz1jLnR5cGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJiFqaShnKSYmdm9pZCAwPT09Zy5kZWZhdWx0UHJvcHMmJm51bGw9PT1jLmNvbXBhcmUmJnZvaWQgMD09PWMuZGVmYXVsdFByb3BzKXJldHVybiBiLnRhZz0xNSxiLnR5cGU9ZyxraShhLGIsZyxkLGUsZik7YT1WZyhjLnR5cGUsbnVsbCxkLGIsYi5tb2RlLGYpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1nPWEuY2hpbGQ7aWYoMD09PShlJmYpJiYoZT1nLm1lbW9pemVkUHJvcHMsYz1jLmNvbXBhcmUsYz1udWxsIT09Yz9jOkplLGMoZSxkKSYmYS5yZWY9PT1iLnJlZikpcmV0dXJuIGhpKGEsYixmKTtiLmZsYWdzfD0xO2E9VGcoZyxkKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9XG5mdW5jdGlvbiBraShhLGIsYyxkLGUsZil7aWYobnVsbCE9PWEmJkplKGEubWVtb2l6ZWRQcm9wcyxkKSYmYS5yZWY9PT1iLnJlZilpZih1Zz0hMSwwIT09KGYmZSkpMCE9PShhLmZsYWdzJjE2Mzg0KSYmKHVnPSEwKTtlbHNlIHJldHVybiBiLmxhbmVzPWEubGFuZXMsaGkoYSxiLGYpO3JldHVybiBsaShhLGIsYyxkLGYpfVxuZnVuY3Rpb24gbWkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9ZC5jaGlsZHJlbixmPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsO2lmKFwiaGlkZGVuXCI9PT1kLm1vZGV8fFwidW5zdGFibGUtZGVmZXItd2l0aG91dC1oaWRpbmdcIj09PWQubW9kZSlpZigwPT09KGIubW9kZSY0KSliLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczowfSxuaShiLGMpO2Vsc2UgaWYoMCE9PShjJjEwNzM3NDE4MjQpKWIubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOjB9LG5pKGIsbnVsbCE9PWY/Zi5iYXNlTGFuZXM6Yyk7ZWxzZSByZXR1cm4gYT1udWxsIT09Zj9mLmJhc2VMYW5lc3xjOmMsYi5sYW5lcz1iLmNoaWxkTGFuZXM9MTA3Mzc0MTgyNCxiLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczphfSxuaShiLGEpLG51bGw7ZWxzZSBudWxsIT09Zj8oZD1mLmJhc2VMYW5lc3xjLGIubWVtb2l6ZWRTdGF0ZT1udWxsKTpkPWMsbmkoYixkKTtmaShhLGIsZSxjKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIG9pKGEsYil7dmFyIGM9Yi5yZWY7aWYobnVsbD09PWEmJm51bGwhPT1jfHxudWxsIT09YSYmYS5yZWYhPT1jKWIuZmxhZ3N8PTEyOH1mdW5jdGlvbiBsaShhLGIsYyxkLGUpe3ZhciBmPUZmKGMpP0RmOk0uY3VycmVudDtmPUVmKGIsZik7dGcoYixlKTtjPUNoKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXVnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5mbGFncyY9LTUxNyxhLmxhbmVzJj1+ZSxoaShhLGIsZSk7Yi5mbGFnc3w9MTtmaShhLGIsYyxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIHBpKGEsYixjLGQsZSl7aWYoRmYoYykpe3ZhciBmPSEwO0pmKGIpfWVsc2UgZj0hMTt0ZyhiLGUpO2lmKG51bGw9PT1iLnN0YXRlTm9kZSludWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmZsYWdzfD0yKSxNZyhiLGMsZCksT2coYixjLGQsZSksZD0hMDtlbHNlIGlmKG51bGw9PT1hKXt2YXIgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcztnLnByb3BzPWg7dmFyIGs9Zy5jb250ZXh0LGw9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGwmJm51bGwhPT1sP2w9dmcobCk6KGw9RmYoYyk/RGY6TS5jdXJyZW50LGw9RWYoYixsKSk7dmFyIG49Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMsQT1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygbnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGU7QXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlxuXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxrIT09bCkmJk5nKGIsZyxkLGwpO3dnPSExO3ZhciBwPWIubWVtb2l6ZWRTdGF0ZTtnLnN0YXRlPXA7Q2coYixkLGcsZSk7az1iLm1lbW9pemVkU3RhdGU7aCE9PWR8fHAhPT1rfHxOLmN1cnJlbnR8fHdnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbiYmKEdnKGIsYyxuLGQpLGs9Yi5tZW1vaXplZFN0YXRlKSwoaD13Z3x8TGcoYixjLGgsZCxwLGssbCkpPyhBfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnR8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnQmJmcuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PVxudHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmZsYWdzfD00KSk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5mbGFnc3w9NCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPWspLGcucHJvcHM9ZCxnLnN0YXRlPWssZy5jb250ZXh0PWwsZD1oKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmZsYWdzfD00KSxkPSExKX1lbHNle2c9Yi5zdGF0ZU5vZGU7eWcoYSxiKTtoPWIubWVtb2l6ZWRQcm9wcztsPWIudHlwZT09PWIuZWxlbWVudFR5cGU/aDpsZyhiLnR5cGUsaCk7Zy5wcm9wcz1sO0E9Yi5wZW5kaW5nUHJvcHM7cD1nLmNvbnRleHQ7az1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgayYmbnVsbCE9PWs/az12ZyhrKTooaz1GZihjKT9EZjpNLmN1cnJlbnQsaz1FZihiLGspKTt2YXIgQz1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczsobj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgQ3x8XG5cImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PUF8fHAhPT1rKSYmTmcoYixnLGQsayk7d2c9ITE7cD1iLm1lbW9pemVkU3RhdGU7Zy5zdGF0ZT1wO0NnKGIsZCxnLGUpO3ZhciB4PWIubWVtb2l6ZWRTdGF0ZTtoIT09QXx8cCE9PXh8fE4uY3VycmVudHx8d2c/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBDJiYoR2coYixjLEMsZCkseD1iLm1lbW9pemVkU3RhdGUpLChsPXdnfHxMZyhiLGMsbCxkLHAseCxrKSk/KG58fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlfHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5jb21wb25lbnRXaWxsVXBkYXRlKGQsXG54LGspLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlKGQseCxrKSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlJiYoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUmJihiLmZsYWdzfD0yNTYpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZwPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnA9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD0yNTYpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT14KSxnLnByb3BzPWQsZy5zdGF0ZT14LGcuY29udGV4dD1rLGQ9bCk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8XG5oPT09YS5tZW1vaXplZFByb3BzJiZwPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnA9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD0yNTYpLGQ9ITEpfXJldHVybiBxaShhLGIsYyxkLGYsZSl9XG5mdW5jdGlvbiBxaShhLGIsYyxkLGUsZil7b2koYSxiKTt2YXIgZz0wIT09KGIuZmxhZ3MmNjQpO2lmKCFkJiYhZylyZXR1cm4gZSYmS2YoYixjLCExKSxoaShhLGIsZik7ZD1iLnN0YXRlTm9kZTtlaS5jdXJyZW50PWI7dmFyIGg9ZyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yP251bGw6ZC5yZW5kZXIoKTtiLmZsYWdzfD0xO251bGwhPT1hJiZnPyhiLmNoaWxkPVlnKGIsYS5jaGlsZCxudWxsLGYpLGIuY2hpbGQ9WWcoYixudWxsLGgsZikpOmZpKGEsYixoLGYpO2IubWVtb2l6ZWRTdGF0ZT1kLnN0YXRlO2UmJktmKGIsYywhMCk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gcmkoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9IZihhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZIZihhLGIuY29udGV4dCwhMSk7ZWgoYSxiLmNvbnRhaW5lckluZm8pfVxudmFyIHNpPXtkZWh5ZHJhdGVkOm51bGwscmV0cnlMYW5lOjB9O1xuZnVuY3Rpb24gdGkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9UC5jdXJyZW50LGY9ITEsZzsoZz0wIT09KGIuZmxhZ3MmNjQpKXx8KGc9bnVsbCE9PWEmJm51bGw9PT1hLm1lbW9pemVkU3RhdGU/ITE6MCE9PShlJjIpKTtnPyhmPSEwLGIuZmxhZ3MmPS02NSk6bnVsbCE9PWEmJm51bGw9PT1hLm1lbW9pemVkU3RhdGV8fHZvaWQgMD09PWQuZmFsbGJhY2t8fCEwPT09ZC51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFja3x8KGV8PTEpO0koUCxlJjEpO2lmKG51bGw9PT1hKXt2b2lkIDAhPT1kLmZhbGxiYWNrJiZwaChiKTthPWQuY2hpbGRyZW47ZT1kLmZhbGxiYWNrO2lmKGYpcmV0dXJuIGE9dWkoYixhLGUsYyksYi5jaGlsZC5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6Y30sYi5tZW1vaXplZFN0YXRlPXNpLGE7aWYoXCJudW1iZXJcIj09PXR5cGVvZiBkLnVuc3RhYmxlX2V4cGVjdGVkTG9hZFRpbWUpcmV0dXJuIGE9dWkoYixhLGUsYyksYi5jaGlsZC5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6Y30sXG5iLm1lbW9pemVkU3RhdGU9c2ksYi5sYW5lcz0zMzU1NDQzMixhO2M9dmkoe21vZGU6XCJ2aXNpYmxlXCIsY2hpbGRyZW46YX0sYi5tb2RlLGMsbnVsbCk7Yy5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1jfWlmKG51bGwhPT1hLm1lbW9pemVkU3RhdGUpe2lmKGYpcmV0dXJuIGQ9d2koYSxiLGQuY2hpbGRyZW4sZC5mYWxsYmFjayxjKSxmPWIuY2hpbGQsZT1hLmNoaWxkLm1lbW9pemVkU3RhdGUsZi5tZW1vaXplZFN0YXRlPW51bGw9PT1lP3tiYXNlTGFuZXM6Y306e2Jhc2VMYW5lczplLmJhc2VMYW5lc3xjfSxmLmNoaWxkTGFuZXM9YS5jaGlsZExhbmVzJn5jLGIubWVtb2l6ZWRTdGF0ZT1zaSxkO2M9eGkoYSxiLGQuY2hpbGRyZW4sYyk7Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGN9aWYoZilyZXR1cm4gZD13aShhLGIsZC5jaGlsZHJlbixkLmZhbGxiYWNrLGMpLGY9Yi5jaGlsZCxlPWEuY2hpbGQubWVtb2l6ZWRTdGF0ZSxmLm1lbW9pemVkU3RhdGU9bnVsbD09PWU/e2Jhc2VMYW5lczpjfTpcbntiYXNlTGFuZXM6ZS5iYXNlTGFuZXN8Y30sZi5jaGlsZExhbmVzPWEuY2hpbGRMYW5lcyZ+YyxiLm1lbW9pemVkU3RhdGU9c2ksZDtjPXhpKGEsYixkLmNoaWxkcmVuLGMpO2IubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBjfWZ1bmN0aW9uIHVpKGEsYixjLGQpe3ZhciBlPWEubW9kZSxmPWEuY2hpbGQ7Yj17bW9kZTpcImhpZGRlblwiLGNoaWxkcmVuOmJ9OzA9PT0oZSYyKSYmbnVsbCE9PWY/KGYuY2hpbGRMYW5lcz0wLGYucGVuZGluZ1Byb3BzPWIpOmY9dmkoYixlLDAsbnVsbCk7Yz1YZyhjLGUsZCxudWxsKTtmLnJldHVybj1hO2MucmV0dXJuPWE7Zi5zaWJsaW5nPWM7YS5jaGlsZD1mO3JldHVybiBjfVxuZnVuY3Rpb24geGkoYSxiLGMsZCl7dmFyIGU9YS5jaGlsZDthPWUuc2libGluZztjPVRnKGUse21vZGU6XCJ2aXNpYmxlXCIsY2hpbGRyZW46Y30pOzA9PT0oYi5tb2RlJjIpJiYoYy5sYW5lcz1kKTtjLnJldHVybj1iO2Muc2libGluZz1udWxsO251bGwhPT1hJiYoYS5uZXh0RWZmZWN0PW51bGwsYS5mbGFncz04LGIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWEpO3JldHVybiBiLmNoaWxkPWN9XG5mdW5jdGlvbiB3aShhLGIsYyxkLGUpe3ZhciBmPWIubW9kZSxnPWEuY2hpbGQ7YT1nLnNpYmxpbmc7dmFyIGg9e21vZGU6XCJoaWRkZW5cIixjaGlsZHJlbjpjfTswPT09KGYmMikmJmIuY2hpbGQhPT1nPyhjPWIuY2hpbGQsYy5jaGlsZExhbmVzPTAsYy5wZW5kaW5nUHJvcHM9aCxnPWMubGFzdEVmZmVjdCxudWxsIT09Zz8oYi5maXJzdEVmZmVjdD1jLmZpcnN0RWZmZWN0LGIubGFzdEVmZmVjdD1nLGcubmV4dEVmZmVjdD1udWxsKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1udWxsKTpjPVRnKGcsaCk7bnVsbCE9PWE/ZD1UZyhhLGQpOihkPVhnKGQsZixlLG51bGwpLGQuZmxhZ3N8PTIpO2QucmV0dXJuPWI7Yy5yZXR1cm49YjtjLnNpYmxpbmc9ZDtiLmNoaWxkPWM7cmV0dXJuIGR9ZnVuY3Rpb24geWkoYSxiKXthLmxhbmVzfD1iO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiYoYy5sYW5lc3w9Yik7c2coYS5yZXR1cm4sYil9XG5mdW5jdGlvbiB6aShhLGIsYyxkLGUsZil7dmFyIGc9YS5tZW1vaXplZFN0YXRlO251bGw9PT1nP2EubWVtb2l6ZWRTdGF0ZT17aXNCYWNrd2FyZHM6YixyZW5kZXJpbmc6bnVsbCxyZW5kZXJpbmdTdGFydFRpbWU6MCxsYXN0OmQsdGFpbDpjLHRhaWxNb2RlOmUsbGFzdEVmZmVjdDpmfTooZy5pc0JhY2t3YXJkcz1iLGcucmVuZGVyaW5nPW51bGwsZy5yZW5kZXJpbmdTdGFydFRpbWU9MCxnLmxhc3Q9ZCxnLnRhaWw9YyxnLnRhaWxNb2RlPWUsZy5sYXN0RWZmZWN0PWYpfVxuZnVuY3Rpb24gQWkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9ZC5yZXZlYWxPcmRlcixmPWQudGFpbDtmaShhLGIsZC5jaGlsZHJlbixjKTtkPVAuY3VycmVudDtpZigwIT09KGQmMikpZD1kJjF8MixiLmZsYWdzfD02NDtlbHNle2lmKG51bGwhPT1hJiYwIT09KGEuZmxhZ3MmNjQpKWE6Zm9yKGE9Yi5jaGlsZDtudWxsIT09YTspe2lmKDEzPT09YS50YWcpbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSYmeWkoYSxjKTtlbHNlIGlmKDE5PT09YS50YWcpeWkoYSxjKTtlbHNlIGlmKG51bGwhPT1hLmNoaWxkKXthLmNoaWxkLnJldHVybj1hO2E9YS5jaGlsZDtjb250aW51ZX1pZihhPT09YilicmVhayBhO2Zvcig7bnVsbD09PWEuc2libGluZzspe2lmKG51bGw9PT1hLnJldHVybnx8YS5yZXR1cm49PT1iKWJyZWFrIGE7YT1hLnJldHVybn1hLnNpYmxpbmcucmV0dXJuPWEucmV0dXJuO2E9YS5zaWJsaW5nfWQmPTF9SShQLGQpO2lmKDA9PT0oYi5tb2RlJjIpKWIubWVtb2l6ZWRTdGF0ZT1cbm51bGw7ZWxzZSBzd2l0Y2goZSl7Y2FzZSBcImZvcndhcmRzXCI6Yz1iLmNoaWxkO2ZvcihlPW51bGw7bnVsbCE9PWM7KWE9Yy5hbHRlcm5hdGUsbnVsbCE9PWEmJm51bGw9PT1paChhKSYmKGU9YyksYz1jLnNpYmxpbmc7Yz1lO251bGw9PT1jPyhlPWIuY2hpbGQsYi5jaGlsZD1udWxsKTooZT1jLnNpYmxpbmcsYy5zaWJsaW5nPW51bGwpO3ppKGIsITEsZSxjLGYsYi5sYXN0RWZmZWN0KTticmVhaztjYXNlIFwiYmFja3dhcmRzXCI6Yz1udWxsO2U9Yi5jaGlsZDtmb3IoYi5jaGlsZD1udWxsO251bGwhPT1lOyl7YT1lLmFsdGVybmF0ZTtpZihudWxsIT09YSYmbnVsbD09PWloKGEpKXtiLmNoaWxkPWU7YnJlYWt9YT1lLnNpYmxpbmc7ZS5zaWJsaW5nPWM7Yz1lO2U9YX16aShiLCEwLGMsbnVsbCxmLGIubGFzdEVmZmVjdCk7YnJlYWs7Y2FzZSBcInRvZ2V0aGVyXCI6emkoYiwhMSxudWxsLG51bGwsdm9pZCAwLGIubGFzdEVmZmVjdCk7YnJlYWs7ZGVmYXVsdDpiLm1lbW9pemVkU3RhdGU9bnVsbH1yZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGhpKGEsYixjKXtudWxsIT09YSYmKGIuZGVwZW5kZW5jaWVzPWEuZGVwZW5kZW5jaWVzKTtEZ3w9Yi5sYW5lcztpZigwIT09KGMmYi5jaGlsZExhbmVzKSl7aWYobnVsbCE9PWEmJmIuY2hpbGQhPT1hLmNoaWxkKXRocm93IEVycm9yKHkoMTUzKSk7aWYobnVsbCE9PWIuY2hpbGQpe2E9Yi5jaGlsZDtjPVRnKGEsYS5wZW5kaW5nUHJvcHMpO2IuY2hpbGQ9Yztmb3IoYy5yZXR1cm49YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz1UZyhhLGEucGVuZGluZ1Byb3BzKSxjLnJldHVybj1iO2Muc2libGluZz1udWxsfXJldHVybiBiLmNoaWxkfXJldHVybiBudWxsfXZhciBCaSxDaSxEaSxFaTtcbkJpPWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPWIuY2hpbGQ7bnVsbCE9PWM7KXtpZig1PT09Yy50YWd8fDY9PT1jLnRhZylhLmFwcGVuZENoaWxkKGMuc3RhdGVOb2RlKTtlbHNlIGlmKDQhPT1jLnRhZyYmbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1iKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fTtDaT1mdW5jdGlvbigpe307XG5EaT1mdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1hLm1lbW9pemVkUHJvcHM7aWYoZSE9PWQpe2E9Yi5zdGF0ZU5vZGU7ZGgoYWguY3VycmVudCk7dmFyIGY9bnVsbDtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6ZT1ZYShhLGUpO2Q9WWEoYSxkKTtmPVtdO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjplPWViKGEsZSk7ZD1lYihhLGQpO2Y9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmU9bSh7fSxlLHt2YWx1ZTp2b2lkIDB9KTtkPW0oe30sZCx7dmFsdWU6dm9pZCAwfSk7Zj1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjplPWdiKGEsZSk7ZD1nYihhLGQpO2Y9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoYS5vbmNsaWNrPWpmKX12YihjLGQpO3ZhciBnO2M9bnVsbDtmb3IobCBpbiBlKWlmKCFkLmhhc093blByb3BlcnR5KGwpJiZlLmhhc093blByb3BlcnR5KGwpJiZudWxsIT1lW2xdKWlmKFwic3R5bGVcIj09PVxubCl7dmFyIGg9ZVtsXTtmb3IoZyBpbiBoKWguaGFzT3duUHJvcGVydHkoZykmJihjfHwoYz17fSksY1tnXT1cIlwiKX1lbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09bCYmXCJjaGlsZHJlblwiIT09bCYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWwmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1sJiZcImF1dG9Gb2N1c1wiIT09bCYmKGNhLmhhc093blByb3BlcnR5KGwpP2Z8fChmPVtdKTooZj1mfHxbXSkucHVzaChsLG51bGwpKTtmb3IobCBpbiBkKXt2YXIgaz1kW2xdO2g9bnVsbCE9ZT9lW2xdOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGwpJiZrIT09aCYmKG51bGwhPWt8fG51bGwhPWgpKWlmKFwic3R5bGVcIj09PWwpaWYoaCl7Zm9yKGcgaW4gaCkhaC5oYXNPd25Qcm9wZXJ0eShnKXx8ayYmay5oYXNPd25Qcm9wZXJ0eShnKXx8KGN8fChjPXt9KSxjW2ddPVwiXCIpO2ZvcihnIGluIGspay5oYXNPd25Qcm9wZXJ0eShnKSYmaFtnXSE9PWtbZ10mJihjfHxcbihjPXt9KSxjW2ddPWtbZ10pfWVsc2UgY3x8KGZ8fChmPVtdKSxmLnB1c2gobCxjKSksYz1rO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1sPyhrPWs/ay5fX2h0bWw6dm9pZCAwLGg9aD9oLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmaCE9PWsmJihmPWZ8fFtdKS5wdXNoKGwsaykpOlwiY2hpbGRyZW5cIj09PWw/XCJzdHJpbmdcIiE9PXR5cGVvZiBrJiZcIm51bWJlclwiIT09dHlwZW9mIGt8fChmPWZ8fFtdKS5wdXNoKGwsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09bCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWwmJihjYS5oYXNPd25Qcm9wZXJ0eShsKT8obnVsbCE9ayYmXCJvblNjcm9sbFwiPT09bCYmRyhcInNjcm9sbFwiLGEpLGZ8fGg9PT1rfHwoZj1bXSkpOlwib2JqZWN0XCI9PT10eXBlb2YgayYmbnVsbCE9PWsmJmsuJCR0eXBlb2Y9PT1HYT9rLnRvU3RyaW5nKCk6KGY9Znx8W10pLnB1c2gobCxrKSl9YyYmKGY9Znx8W10pLnB1c2goXCJzdHlsZVwiLFxuYyk7dmFyIGw9ZjtpZihiLnVwZGF0ZVF1ZXVlPWwpYi5mbGFnc3w9NH19O0VpPWZ1bmN0aW9uKGEsYixjLGQpe2MhPT1kJiYoYi5mbGFnc3w9NCl9O2Z1bmN0aW9uIEZpKGEsYil7aWYoIWxoKXN3aXRjaChhLnRhaWxNb2RlKXtjYXNlIFwiaGlkZGVuXCI6Yj1hLnRhaWw7Zm9yKHZhciBjPW51bGw7bnVsbCE9PWI7KW51bGwhPT1iLmFsdGVybmF0ZSYmKGM9YiksYj1iLnNpYmxpbmc7bnVsbD09PWM/YS50YWlsPW51bGw6Yy5zaWJsaW5nPW51bGw7YnJlYWs7Y2FzZSBcImNvbGxhcHNlZFwiOmM9YS50YWlsO2Zvcih2YXIgZD1udWxsO251bGwhPT1jOyludWxsIT09Yy5hbHRlcm5hdGUmJihkPWMpLGM9Yy5zaWJsaW5nO251bGw9PT1kP2J8fG51bGw9PT1hLnRhaWw/YS50YWlsPW51bGw6YS50YWlsLnNpYmxpbmc9bnVsbDpkLnNpYmxpbmc9bnVsbH19XG5mdW5jdGlvbiBHaShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHM7c3dpdGNoKGIudGFnKXtjYXNlIDI6Y2FzZSAxNjpjYXNlIDE1OmNhc2UgMDpjYXNlIDExOmNhc2UgNzpjYXNlIDg6Y2FzZSAxMjpjYXNlIDk6Y2FzZSAxNDpyZXR1cm4gbnVsbDtjYXNlIDE6cmV0dXJuIEZmKGIudHlwZSkmJkdmKCksbnVsbDtjYXNlIDM6ZmgoKTtIKE4pO0goTSk7dWgoKTtkPWIuc3RhdGVOb2RlO2QucGVuZGluZ0NvbnRleHQmJihkLmNvbnRleHQ9ZC5wZW5kaW5nQ29udGV4dCxkLnBlbmRpbmdDb250ZXh0PW51bGwpO2lmKG51bGw9PT1hfHxudWxsPT09YS5jaGlsZClyaChiKT9iLmZsYWdzfD00OmQuaHlkcmF0ZXx8KGIuZmxhZ3N8PTI1Nik7Q2koYik7cmV0dXJuIG51bGw7Y2FzZSA1OmhoKGIpO3ZhciBlPWRoKGNoLmN1cnJlbnQpO2M9Yi50eXBlO2lmKG51bGwhPT1hJiZudWxsIT1iLnN0YXRlTm9kZSlEaShhLGIsYyxkLGUpLGEucmVmIT09Yi5yZWYmJihiLmZsYWdzfD0xMjgpO2Vsc2V7aWYoIWQpe2lmKG51bGw9PT1cbmIuc3RhdGVOb2RlKXRocm93IEVycm9yKHkoMTY2KSk7cmV0dXJuIG51bGx9YT1kaChhaC5jdXJyZW50KTtpZihyaChiKSl7ZD1iLnN0YXRlTm9kZTtjPWIudHlwZTt2YXIgZj1iLm1lbW9pemVkUHJvcHM7ZFt3Zl09YjtkW3hmXT1mO3N3aXRjaChjKXtjYXNlIFwiZGlhbG9nXCI6RyhcImNhbmNlbFwiLGQpO0coXCJjbG9zZVwiLGQpO2JyZWFrO2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RyhcImxvYWRcIixkKTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoYT0wO2E8WGUubGVuZ3RoO2ErKylHKFhlW2FdLGQpO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpHKFwiZXJyb3JcIixkKTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpHKFwiZXJyb3JcIixkKTtHKFwibG9hZFwiLGQpO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RyhcInRvZ2dsZVwiLGQpO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOlphKGQsZik7RyhcImludmFsaWRcIixkKTticmVhaztjYXNlIFwic2VsZWN0XCI6ZC5fd3JhcHBlclN0YXRlPVxue3dhc011bHRpcGxlOiEhZi5tdWx0aXBsZX07RyhcImludmFsaWRcIixkKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpoYihkLGYpLEcoXCJpbnZhbGlkXCIsZCl9dmIoYyxmKTthPW51bGw7Zm9yKHZhciBnIGluIGYpZi5oYXNPd25Qcm9wZXJ0eShnKSYmKGU9ZltnXSxcImNoaWxkcmVuXCI9PT1nP1wic3RyaW5nXCI9PT10eXBlb2YgZT9kLnRleHRDb250ZW50IT09ZSYmKGE9W1wiY2hpbGRyZW5cIixlXSk6XCJudW1iZXJcIj09PXR5cGVvZiBlJiZkLnRleHRDb250ZW50IT09XCJcIitlJiYoYT1bXCJjaGlsZHJlblwiLFwiXCIrZV0pOmNhLmhhc093blByb3BlcnR5KGcpJiZudWxsIT1lJiZcIm9uU2Nyb2xsXCI9PT1nJiZHKFwic2Nyb2xsXCIsZCkpO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpWYShkKTtjYihkLGYsITApO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZhKGQpO2piKGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjYXNlIFwib3B0aW9uXCI6YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5vbkNsaWNrJiYoZC5vbmNsaWNrPVxuamYpfWQ9YTtiLnVwZGF0ZVF1ZXVlPWQ7bnVsbCE9PWQmJihiLmZsYWdzfD00KX1lbHNle2c9OT09PWUubm9kZVR5cGU/ZTplLm93bmVyRG9jdW1lbnQ7YT09PWtiLmh0bWwmJihhPWxiKGMpKTthPT09a2IuaHRtbD9cInNjcmlwdFwiPT09Yz8oYT1nLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYS5pbm5lckhUTUw9XCI8c2NyaXB0PlxceDNjL3NjcmlwdD5cIixhPWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKSk6XCJzdHJpbmdcIj09PXR5cGVvZiBkLmlzP2E9Zy5jcmVhdGVFbGVtZW50KGMse2lzOmQuaXN9KTooYT1nLmNyZWF0ZUVsZW1lbnQoYyksXCJzZWxlY3RcIj09PWMmJihnPWEsZC5tdWx0aXBsZT9nLm11bHRpcGxlPSEwOmQuc2l6ZSYmKGcuc2l6ZT1kLnNpemUpKSk6YT1nLmNyZWF0ZUVsZW1lbnROUyhhLGMpO2Fbd2ZdPWI7YVt4Zl09ZDtCaShhLGIsITEsITEpO2Iuc3RhdGVOb2RlPWE7Zz13YihjLGQpO3N3aXRjaChjKXtjYXNlIFwiZGlhbG9nXCI6RyhcImNhbmNlbFwiLGEpO0coXCJjbG9zZVwiLGEpO1xuZT1kO2JyZWFrO2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RyhcImxvYWRcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGU9MDtlPFhlLmxlbmd0aDtlKyspRyhYZVtlXSxhKTtlPWQ7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkcoXCJlcnJvclwiLGEpO2U9ZDticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpHKFwiZXJyb3JcIixhKTtHKFwibG9hZFwiLGEpO2U9ZDticmVhaztjYXNlIFwiZGV0YWlsc1wiOkcoXCJ0b2dnbGVcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcImlucHV0XCI6WmEoYSxkKTtlPVlhKGEsZCk7RyhcImludmFsaWRcIixhKTticmVhaztjYXNlIFwib3B0aW9uXCI6ZT1lYihhLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLl93cmFwcGVyU3RhdGU9e3dhc011bHRpcGxlOiEhZC5tdWx0aXBsZX07ZT1tKHt9LGQse3ZhbHVlOnZvaWQgMH0pO0coXCJpbnZhbGlkXCIsYSk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aGIoYSxkKTtlPVxuZ2IoYSxkKTtHKFwiaW52YWxpZFwiLGEpO2JyZWFrO2RlZmF1bHQ6ZT1kfXZiKGMsZSk7dmFyIGg9ZTtmb3IoZiBpbiBoKWlmKGguaGFzT3duUHJvcGVydHkoZikpe3ZhciBrPWhbZl07XCJzdHlsZVwiPT09Zj90YihhLGspOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWY/KGs9az9rLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmb2IoYSxrKSk6XCJjaGlsZHJlblwiPT09Zj9cInN0cmluZ1wiPT09dHlwZW9mIGs/KFwidGV4dGFyZWFcIiE9PWN8fFwiXCIhPT1rKSYmcGIoYSxrKTpcIm51bWJlclwiPT09dHlwZW9mIGsmJnBiKGEsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09ZiYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWYmJlwiYXV0b0ZvY3VzXCIhPT1mJiYoY2EuaGFzT3duUHJvcGVydHkoZik/bnVsbCE9ayYmXCJvblNjcm9sbFwiPT09ZiYmRyhcInNjcm9sbFwiLGEpOm51bGwhPWsmJnFhKGEsZixrLGcpKX1zd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6VmEoYSk7Y2IoYSxkLCExKTtcbmJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZhKGEpO2piKGEpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpudWxsIT1kLnZhbHVlJiZhLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsXCJcIitTYShkLnZhbHVlKSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEubXVsdGlwbGU9ISFkLm11bHRpcGxlO2Y9ZC52YWx1ZTtudWxsIT1mP2ZiKGEsISFkLm11bHRpcGxlLGYsITEpOm51bGwhPWQuZGVmYXVsdFZhbHVlJiZmYihhLCEhZC5tdWx0aXBsZSxkLmRlZmF1bHRWYWx1ZSwhMCk7YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5vbkNsaWNrJiYoYS5vbmNsaWNrPWpmKX1tZihjLGQpJiYoYi5mbGFnc3w9NCl9bnVsbCE9PWIucmVmJiYoYi5mbGFnc3w9MTI4KX1yZXR1cm4gbnVsbDtjYXNlIDY6aWYoYSYmbnVsbCE9Yi5zdGF0ZU5vZGUpRWkoYSxiLGEubWVtb2l6ZWRQcm9wcyxkKTtlbHNle2lmKFwic3RyaW5nXCIhPT10eXBlb2YgZCYmbnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHkoMTY2KSk7XG5jPWRoKGNoLmN1cnJlbnQpO2RoKGFoLmN1cnJlbnQpO3JoKGIpPyhkPWIuc3RhdGVOb2RlLGM9Yi5tZW1vaXplZFByb3BzLGRbd2ZdPWIsZC5ub2RlVmFsdWUhPT1jJiYoYi5mbGFnc3w9NCkpOihkPSg5PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoZCksZFt3Zl09YixiLnN0YXRlTm9kZT1kKX1yZXR1cm4gbnVsbDtjYXNlIDEzOkgoUCk7ZD1iLm1lbW9pemVkU3RhdGU7aWYoMCE9PShiLmZsYWdzJjY0KSlyZXR1cm4gYi5sYW5lcz1jLGI7ZD1udWxsIT09ZDtjPSExO251bGw9PT1hP3ZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5mYWxsYmFjayYmcmgoYik6Yz1udWxsIT09YS5tZW1vaXplZFN0YXRlO2lmKGQmJiFjJiYwIT09KGIubW9kZSYyKSlpZihudWxsPT09YSYmITAhPT1iLm1lbW9pemVkUHJvcHMudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2t8fDAhPT0oUC5jdXJyZW50JjEpKTA9PT1WJiYoVj0zKTtlbHNle2lmKDA9PT1WfHwzPT09VilWPVxuNDtudWxsPT09VXx8MD09PShEZyYxMzQyMTc3MjcpJiYwPT09KEhpJjEzNDIxNzcyNyl8fElpKFUsVyl9aWYoZHx8YyliLmZsYWdzfD00O3JldHVybiBudWxsO2Nhc2UgNDpyZXR1cm4gZmgoKSxDaShiKSxudWxsPT09YSYmY2YoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksbnVsbDtjYXNlIDEwOnJldHVybiByZyhiKSxudWxsO2Nhc2UgMTc6cmV0dXJuIEZmKGIudHlwZSkmJkdmKCksbnVsbDtjYXNlIDE5OkgoUCk7ZD1iLm1lbW9pemVkU3RhdGU7aWYobnVsbD09PWQpcmV0dXJuIG51bGw7Zj0wIT09KGIuZmxhZ3MmNjQpO2c9ZC5yZW5kZXJpbmc7aWYobnVsbD09PWcpaWYoZilGaShkLCExKTtlbHNle2lmKDAhPT1WfHxudWxsIT09YSYmMCE9PShhLmZsYWdzJjY0KSlmb3IoYT1iLmNoaWxkO251bGwhPT1hOyl7Zz1paChhKTtpZihudWxsIT09Zyl7Yi5mbGFnc3w9NjQ7RmkoZCwhMSk7Zj1nLnVwZGF0ZVF1ZXVlO251bGwhPT1mJiYoYi51cGRhdGVRdWV1ZT1mLGIuZmxhZ3N8PTQpO1xubnVsbD09PWQubGFzdEVmZmVjdCYmKGIuZmlyc3RFZmZlY3Q9bnVsbCk7Yi5sYXN0RWZmZWN0PWQubGFzdEVmZmVjdDtkPWM7Zm9yKGM9Yi5jaGlsZDtudWxsIT09YzspZj1jLGE9ZCxmLmZsYWdzJj0yLGYubmV4dEVmZmVjdD1udWxsLGYuZmlyc3RFZmZlY3Q9bnVsbCxmLmxhc3RFZmZlY3Q9bnVsbCxnPWYuYWx0ZXJuYXRlLG51bGw9PT1nPyhmLmNoaWxkTGFuZXM9MCxmLmxhbmVzPWEsZi5jaGlsZD1udWxsLGYubWVtb2l6ZWRQcm9wcz1udWxsLGYubWVtb2l6ZWRTdGF0ZT1udWxsLGYudXBkYXRlUXVldWU9bnVsbCxmLmRlcGVuZGVuY2llcz1udWxsLGYuc3RhdGVOb2RlPW51bGwpOihmLmNoaWxkTGFuZXM9Zy5jaGlsZExhbmVzLGYubGFuZXM9Zy5sYW5lcyxmLmNoaWxkPWcuY2hpbGQsZi5tZW1vaXplZFByb3BzPWcubWVtb2l6ZWRQcm9wcyxmLm1lbW9pemVkU3RhdGU9Zy5tZW1vaXplZFN0YXRlLGYudXBkYXRlUXVldWU9Zy51cGRhdGVRdWV1ZSxmLnR5cGU9Zy50eXBlLGE9Zy5kZXBlbmRlbmNpZXMsXG5mLmRlcGVuZGVuY2llcz1udWxsPT09YT9udWxsOntsYW5lczphLmxhbmVzLGZpcnN0Q29udGV4dDphLmZpcnN0Q29udGV4dH0pLGM9Yy5zaWJsaW5nO0koUCxQLmN1cnJlbnQmMXwyKTtyZXR1cm4gYi5jaGlsZH1hPWEuc2libGluZ31udWxsIT09ZC50YWlsJiZPKCk+SmkmJihiLmZsYWdzfD02NCxmPSEwLEZpKGQsITEpLGIubGFuZXM9MzM1NTQ0MzIpfWVsc2V7aWYoIWYpaWYoYT1paChnKSxudWxsIT09YSl7aWYoYi5mbGFnc3w9NjQsZj0hMCxjPWEudXBkYXRlUXVldWUsbnVsbCE9PWMmJihiLnVwZGF0ZVF1ZXVlPWMsYi5mbGFnc3w9NCksRmkoZCwhMCksbnVsbD09PWQudGFpbCYmXCJoaWRkZW5cIj09PWQudGFpbE1vZGUmJiFnLmFsdGVybmF0ZSYmIWxoKXJldHVybiBiPWIubGFzdEVmZmVjdD1kLmxhc3RFZmZlY3QsbnVsbCE9PWImJihiLm5leHRFZmZlY3Q9bnVsbCksbnVsbH1lbHNlIDIqTygpLWQucmVuZGVyaW5nU3RhcnRUaW1lPkppJiYxMDczNzQxODI0IT09YyYmKGIuZmxhZ3N8PVxuNjQsZj0hMCxGaShkLCExKSxiLmxhbmVzPTMzNTU0NDMyKTtkLmlzQmFja3dhcmRzPyhnLnNpYmxpbmc9Yi5jaGlsZCxiLmNoaWxkPWcpOihjPWQubGFzdCxudWxsIT09Yz9jLnNpYmxpbmc9ZzpiLmNoaWxkPWcsZC5sYXN0PWcpfXJldHVybiBudWxsIT09ZC50YWlsPyhjPWQudGFpbCxkLnJlbmRlcmluZz1jLGQudGFpbD1jLnNpYmxpbmcsZC5sYXN0RWZmZWN0PWIubGFzdEVmZmVjdCxkLnJlbmRlcmluZ1N0YXJ0VGltZT1PKCksYy5zaWJsaW5nPW51bGwsYj1QLmN1cnJlbnQsSShQLGY/YiYxfDI6YiYxKSxjKTpudWxsO2Nhc2UgMjM6Y2FzZSAyNDpyZXR1cm4gS2koKSxudWxsIT09YSYmbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSE9PShudWxsIT09Yi5tZW1vaXplZFN0YXRlKSYmXCJ1bnN0YWJsZS1kZWZlci13aXRob3V0LWhpZGluZ1wiIT09ZC5tb2RlJiYoYi5mbGFnc3w9NCksbnVsbH10aHJvdyBFcnJvcih5KDE1NixiLnRhZykpO31cbmZ1bmN0aW9uIExpKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSAxOkZmKGEudHlwZSkmJkdmKCk7dmFyIGI9YS5mbGFncztyZXR1cm4gYiY0MDk2PyhhLmZsYWdzPWImLTQwOTd8NjQsYSk6bnVsbDtjYXNlIDM6ZmgoKTtIKE4pO0goTSk7dWgoKTtiPWEuZmxhZ3M7aWYoMCE9PShiJjY0KSl0aHJvdyBFcnJvcih5KDI4NSkpO2EuZmxhZ3M9YiYtNDA5N3w2NDtyZXR1cm4gYTtjYXNlIDU6cmV0dXJuIGhoKGEpLG51bGw7Y2FzZSAxMzpyZXR1cm4gSChQKSxiPWEuZmxhZ3MsYiY0MDk2PyhhLmZsYWdzPWImLTQwOTd8NjQsYSk6bnVsbDtjYXNlIDE5OnJldHVybiBIKFApLG51bGw7Y2FzZSA0OnJldHVybiBmaCgpLG51bGw7Y2FzZSAxMDpyZXR1cm4gcmcoYSksbnVsbDtjYXNlIDIzOmNhc2UgMjQ6cmV0dXJuIEtpKCksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX1cbmZ1bmN0aW9uIE1pKGEsYil7dHJ5e3ZhciBjPVwiXCIsZD1iO2RvIGMrPVFhKGQpLGQ9ZC5yZXR1cm47d2hpbGUoZCk7dmFyIGU9Y31jYXRjaChmKXtlPVwiXFxuRXJyb3IgZ2VuZXJhdGluZyBzdGFjazogXCIrZi5tZXNzYWdlK1wiXFxuXCIrZi5zdGFja31yZXR1cm57dmFsdWU6YSxzb3VyY2U6YixzdGFjazplfX1mdW5jdGlvbiBOaShhLGIpe3RyeXtjb25zb2xlLmVycm9yKGIudmFsdWUpfWNhdGNoKGMpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXt0aHJvdyBjO30pfX12YXIgT2k9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXA7ZnVuY3Rpb24gUGkoYSxiLGMpe2M9emcoLTEsYyk7Yy50YWc9MztjLnBheWxvYWQ9e2VsZW1lbnQ6bnVsbH07dmFyIGQ9Yi52YWx1ZTtjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7UWl8fChRaT0hMCxSaT1kKTtOaShhLGIpfTtyZXR1cm4gY31cbmZ1bmN0aW9uIFNpKGEsYixjKXtjPXpnKC0xLGMpO2MudGFnPTM7dmFyIGQ9YS50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7dmFyIGU9Yi52YWx1ZTtjLnBheWxvYWQ9ZnVuY3Rpb24oKXtOaShhLGIpO3JldHVybiBkKGUpfX12YXIgZj1hLnN0YXRlTm9kZTtudWxsIT09ZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiIT09dHlwZW9mIGQmJihudWxsPT09VGk/VGk9bmV3IFNldChbdGhpc10pOlRpLmFkZCh0aGlzKSxOaShhLGIpKTt2YXIgYz1iLnN0YWNrO3RoaXMuY29tcG9uZW50RGlkQ2F0Y2goYi52YWx1ZSx7Y29tcG9uZW50U3RhY2s6bnVsbCE9PWM/YzpcIlwifSl9KTtyZXR1cm4gY312YXIgVWk9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtTZXQ/V2Vha1NldDpTZXQ7XG5mdW5jdGlvbiBWaShhKXt2YXIgYj1hLnJlZjtpZihudWxsIT09YilpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYil0cnl7YihudWxsKX1jYXRjaChjKXtXaShhLGMpfWVsc2UgYi5jdXJyZW50PW51bGx9ZnVuY3Rpb24gWGkoYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpyZXR1cm47Y2FzZSAxOmlmKGIuZmxhZ3MmMjU2JiZudWxsIT09YSl7dmFyIGM9YS5tZW1vaXplZFByb3BzLGQ9YS5tZW1vaXplZFN0YXRlO2E9Yi5zdGF0ZU5vZGU7Yj1hLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKGIuZWxlbWVudFR5cGU9PT1iLnR5cGU/YzpsZyhiLnR5cGUsYyksZCk7YS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT1ifXJldHVybjtjYXNlIDM6Yi5mbGFncyYyNTYmJnFmKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO3JldHVybjtjYXNlIDU6Y2FzZSA2OmNhc2UgNDpjYXNlIDE3OnJldHVybn10aHJvdyBFcnJvcih5KDE2MykpO31cbmZ1bmN0aW9uIFlpKGEsYixjKXtzd2l0Y2goYy50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpiPWMudXBkYXRlUXVldWU7Yj1udWxsIT09Yj9iLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yil7YT1iPWIubmV4dDtkb3tpZigzPT09KGEudGFnJjMpKXt2YXIgZD1hLmNyZWF0ZTthLmRlc3Ryb3k9ZCgpfWE9YS5uZXh0fXdoaWxlKGEhPT1iKX1iPWMudXBkYXRlUXVldWU7Yj1udWxsIT09Yj9iLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yil7YT1iPWIubmV4dDtkb3t2YXIgZT1hO2Q9ZS5uZXh0O2U9ZS50YWc7MCE9PShlJjQpJiYwIT09KGUmMSkmJihaaShjLGEpLCRpKGMsYSkpO2E9ZH13aGlsZShhIT09Yil9cmV0dXJuO2Nhc2UgMTphPWMuc3RhdGVOb2RlO2MuZmxhZ3MmNCYmKG51bGw9PT1iP2EuY29tcG9uZW50RGlkTW91bnQoKTooZD1jLmVsZW1lbnRUeXBlPT09Yy50eXBlP2IubWVtb2l6ZWRQcm9wczpsZyhjLnR5cGUsYi5tZW1vaXplZFByb3BzKSxhLmNvbXBvbmVudERpZFVwZGF0ZShkLFxuYi5tZW1vaXplZFN0YXRlLGEuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUpKSk7Yj1jLnVwZGF0ZVF1ZXVlO251bGwhPT1iJiZFZyhjLGIsYSk7cmV0dXJuO2Nhc2UgMzpiPWMudXBkYXRlUXVldWU7aWYobnVsbCE9PWIpe2E9bnVsbDtpZihudWxsIT09Yy5jaGlsZClzd2l0Y2goYy5jaGlsZC50YWcpe2Nhc2UgNTphPWMuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMTphPWMuY2hpbGQuc3RhdGVOb2RlfUVnKGMsYixhKX1yZXR1cm47Y2FzZSA1OmE9Yy5zdGF0ZU5vZGU7bnVsbD09PWImJmMuZmxhZ3MmNCYmbWYoYy50eXBlLGMubWVtb2l6ZWRQcm9wcykmJmEuZm9jdXMoKTtyZXR1cm47Y2FzZSA2OnJldHVybjtjYXNlIDQ6cmV0dXJuO2Nhc2UgMTI6cmV0dXJuO2Nhc2UgMTM6bnVsbD09PWMubWVtb2l6ZWRTdGF0ZSYmKGM9Yy5hbHRlcm5hdGUsbnVsbCE9PWMmJihjPWMubWVtb2l6ZWRTdGF0ZSxudWxsIT09YyYmKGM9Yy5kZWh5ZHJhdGVkLG51bGwhPT1jJiZDYyhjKSkpKTtcbnJldHVybjtjYXNlIDE5OmNhc2UgMTc6Y2FzZSAyMDpjYXNlIDIxOmNhc2UgMjM6Y2FzZSAyNDpyZXR1cm59dGhyb3cgRXJyb3IoeSgxNjMpKTt9XG5mdW5jdGlvbiBhaihhLGIpe2Zvcih2YXIgYz1hOzspe2lmKDU9PT1jLnRhZyl7dmFyIGQ9Yy5zdGF0ZU5vZGU7aWYoYilkPWQuc3R5bGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuc2V0UHJvcGVydHk/ZC5zZXRQcm9wZXJ0eShcImRpc3BsYXlcIixcIm5vbmVcIixcImltcG9ydGFudFwiKTpkLmRpc3BsYXk9XCJub25lXCI7ZWxzZXtkPWMuc3RhdGVOb2RlO3ZhciBlPWMubWVtb2l6ZWRQcm9wcy5zdHlsZTtlPXZvaWQgMCE9PWUmJm51bGwhPT1lJiZlLmhhc093blByb3BlcnR5KFwiZGlzcGxheVwiKT9lLmRpc3BsYXk6bnVsbDtkLnN0eWxlLmRpc3BsYXk9c2IoXCJkaXNwbGF5XCIsZSl9fWVsc2UgaWYoNj09PWMudGFnKWMuc3RhdGVOb2RlLm5vZGVWYWx1ZT1iP1wiXCI6Yy5tZW1vaXplZFByb3BzO2Vsc2UgaWYoKDIzIT09Yy50YWcmJjI0IT09Yy50YWd8fG51bGw9PT1jLm1lbW9pemVkU3RhdGV8fGM9PT1hKSYmbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1cbmEpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWEpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319XG5mdW5jdGlvbiBiaihhLGIpe2lmKE1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgTWYub25Db21taXRGaWJlclVubW91bnQpdHJ5e01mLm9uQ29tbWl0RmliZXJVbm1vdW50KExmLGIpfWNhdGNoKGYpe31zd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpjYXNlIDIyOmE9Yi51cGRhdGVRdWV1ZTtpZihudWxsIT09YSYmKGE9YS5sYXN0RWZmZWN0LG51bGwhPT1hKSl7dmFyIGM9YT1hLm5leHQ7ZG97dmFyIGQ9YyxlPWQuZGVzdHJveTtkPWQudGFnO2lmKHZvaWQgMCE9PWUpaWYoMCE9PShkJjQpKVppKGIsYyk7ZWxzZXtkPWI7dHJ5e2UoKX1jYXRjaChmKXtXaShkLGYpfX1jPWMubmV4dH13aGlsZShjIT09YSl9YnJlYWs7Y2FzZSAxOlZpKGIpO2E9Yi5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEuY29tcG9uZW50V2lsbFVubW91bnQpdHJ5e2EucHJvcHM9Yi5tZW1vaXplZFByb3BzLGEuc3RhdGU9Yi5tZW1vaXplZFN0YXRlLGEuY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaChmKXtXaShiLFxuZil9YnJlYWs7Y2FzZSA1OlZpKGIpO2JyZWFrO2Nhc2UgNDpjaihhLGIpfX1mdW5jdGlvbiBkaihhKXthLmFsdGVybmF0ZT1udWxsO2EuY2hpbGQ9bnVsbDthLmRlcGVuZGVuY2llcz1udWxsO2EuZmlyc3RFZmZlY3Q9bnVsbDthLmxhc3RFZmZlY3Q9bnVsbDthLm1lbW9pemVkUHJvcHM9bnVsbDthLm1lbW9pemVkU3RhdGU9bnVsbDthLnBlbmRpbmdQcm9wcz1udWxsO2EucmV0dXJuPW51bGw7YS51cGRhdGVRdWV1ZT1udWxsfWZ1bmN0aW9uIGVqKGEpe3JldHVybiA1PT09YS50YWd8fDM9PT1hLnRhZ3x8ND09PWEudGFnfVxuZnVuY3Rpb24gZmooYSl7YTp7Zm9yKHZhciBiPWEucmV0dXJuO251bGwhPT1iOyl7aWYoZWooYikpYnJlYWsgYTtiPWIucmV0dXJufXRocm93IEVycm9yKHkoMTYwKSk7fXZhciBjPWI7Yj1jLnN0YXRlTm9kZTtzd2l0Y2goYy50YWcpe2Nhc2UgNTp2YXIgZD0hMTticmVhaztjYXNlIDM6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztjYXNlIDQ6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHkoMTYxKSk7fWMuZmxhZ3MmMTYmJihwYihiLFwiXCIpLGMuZmxhZ3MmPS0xNyk7YTpiOmZvcihjPWE7Oyl7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxlaihjLnJldHVybikpe2M9bnVsbDticmVhayBhfWM9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtmb3IoYz1jLnNpYmxpbmc7NSE9PWMudGFnJiY2IT09Yy50YWcmJjE4IT09Yy50YWc7KXtpZihjLmZsYWdzJjIpY29udGludWUgYjtpZihudWxsPT09XG5jLmNoaWxkfHw0PT09Yy50YWcpY29udGludWUgYjtlbHNlIGMuY2hpbGQucmV0dXJuPWMsYz1jLmNoaWxkfWlmKCEoYy5mbGFncyYyKSl7Yz1jLnN0YXRlTm9kZTticmVhayBhfX1kP2dqKGEsYyxiKTpoaihhLGMsYil9XG5mdW5jdGlvbiBnaihhLGIsYyl7dmFyIGQ9YS50YWcsZT01PT09ZHx8Nj09PWQ7aWYoZSlhPWU/YS5zdGF0ZU5vZGU6YS5zdGF0ZU5vZGUuaW5zdGFuY2UsYj84PT09Yy5ub2RlVHlwZT9jLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGEsYik6Yy5pbnNlcnRCZWZvcmUoYSxiKTooOD09PWMubm9kZVR5cGU/KGI9Yy5wYXJlbnROb2RlLGIuaW5zZXJ0QmVmb3JlKGEsYykpOihiPWMsYi5hcHBlbmRDaGlsZChhKSksYz1jLl9yZWFjdFJvb3RDb250YWluZXIsbnVsbCE9PWMmJnZvaWQgMCE9PWN8fG51bGwhPT1iLm9uY2xpY2t8fChiLm9uY2xpY2s9amYpKTtlbHNlIGlmKDQhPT1kJiYoYT1hLmNoaWxkLG51bGwhPT1hKSlmb3IoZ2ooYSxiLGMpLGE9YS5zaWJsaW5nO251bGwhPT1hOylnaihhLGIsYyksYT1hLnNpYmxpbmd9XG5mdW5jdGlvbiBoaihhLGIsYyl7dmFyIGQ9YS50YWcsZT01PT09ZHx8Nj09PWQ7aWYoZSlhPWU/YS5zdGF0ZU5vZGU6YS5zdGF0ZU5vZGUuaW5zdGFuY2UsYj9jLmluc2VydEJlZm9yZShhLGIpOmMuYXBwZW5kQ2hpbGQoYSk7ZWxzZSBpZig0IT09ZCYmKGE9YS5jaGlsZCxudWxsIT09YSkpZm9yKGhqKGEsYixjKSxhPWEuc2libGluZztudWxsIT09YTspaGooYSxiLGMpLGE9YS5zaWJsaW5nfVxuZnVuY3Rpb24gY2ooYSxiKXtmb3IodmFyIGM9YixkPSExLGUsZjs7KXtpZighZCl7ZD1jLnJldHVybjthOmZvcig7Oyl7aWYobnVsbD09PWQpdGhyb3cgRXJyb3IoeSgxNjApKTtlPWQuc3RhdGVOb2RlO3N3aXRjaChkLnRhZyl7Y2FzZSA1OmY9ITE7YnJlYWsgYTtjYXNlIDM6ZT1lLmNvbnRhaW5lckluZm87Zj0hMDticmVhayBhO2Nhc2UgNDplPWUuY29udGFpbmVySW5mbztmPSEwO2JyZWFrIGF9ZD1kLnJldHVybn1kPSEwfWlmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKXthOmZvcih2YXIgZz1hLGg9YyxrPWg7OylpZihiaihnLGspLG51bGwhPT1rLmNoaWxkJiY0IT09ay50YWcpay5jaGlsZC5yZXR1cm49ayxrPWsuY2hpbGQ7ZWxzZXtpZihrPT09aClicmVhayBhO2Zvcig7bnVsbD09PWsuc2libGluZzspe2lmKG51bGw9PT1rLnJldHVybnx8ay5yZXR1cm49PT1oKWJyZWFrIGE7az1rLnJldHVybn1rLnNpYmxpbmcucmV0dXJuPWsucmV0dXJuO2s9ay5zaWJsaW5nfWY/KGc9ZSxoPWMuc3RhdGVOb2RlLFxuOD09PWcubm9kZVR5cGU/Zy5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGgpOmcucmVtb3ZlQ2hpbGQoaCkpOmUucmVtb3ZlQ2hpbGQoYy5zdGF0ZU5vZGUpfWVsc2UgaWYoND09PWMudGFnKXtpZihudWxsIT09Yy5jaGlsZCl7ZT1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Y9ITA7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9fWVsc2UgaWYoYmooYSxjKSxudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm47ND09PWMudGFnJiYoZD0hMSl9Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319XG5mdW5jdGlvbiBpaihhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmNhc2UgMjI6dmFyIGM9Yi51cGRhdGVRdWV1ZTtjPW51bGwhPT1jP2MubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1jKXt2YXIgZD1jPWMubmV4dDtkbyAzPT09KGQudGFnJjMpJiYoYT1kLmRlc3Ryb3ksZC5kZXN0cm95PXZvaWQgMCx2b2lkIDAhPT1hJiZhKCkpLGQ9ZC5uZXh0O3doaWxlKGQhPT1jKX1yZXR1cm47Y2FzZSAxOnJldHVybjtjYXNlIDU6Yz1iLnN0YXRlTm9kZTtpZihudWxsIT1jKXtkPWIubWVtb2l6ZWRQcm9wczt2YXIgZT1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6ZDthPWIudHlwZTt2YXIgZj1iLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9bnVsbDtpZihudWxsIT09Zil7Y1t4Zl09ZDtcImlucHV0XCI9PT1hJiZcInJhZGlvXCI9PT1kLnR5cGUmJm51bGwhPWQubmFtZSYmJGEoYyxkKTt3YihhLGUpO2I9d2IoYSxkKTtmb3IoZT0wO2U8Zi5sZW5ndGg7ZSs9XG4yKXt2YXIgZz1mW2VdLGg9ZltlKzFdO1wic3R5bGVcIj09PWc/dGIoYyxoKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1nP29iKGMsaCk6XCJjaGlsZHJlblwiPT09Zz9wYihjLGgpOnFhKGMsZyxoLGIpfXN3aXRjaChhKXtjYXNlIFwiaW5wdXRcIjphYihjLGQpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmliKGMsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmE9Yy5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlLGMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZT0hIWQubXVsdGlwbGUsZj1kLnZhbHVlLG51bGwhPWY/ZmIoYywhIWQubXVsdGlwbGUsZiwhMSk6YSE9PSEhZC5tdWx0aXBsZSYmKG51bGwhPWQuZGVmYXVsdFZhbHVlP2ZiKGMsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLCEwKTpmYihjLCEhZC5tdWx0aXBsZSxkLm11bHRpcGxlP1tdOlwiXCIsITEpKX19fXJldHVybjtjYXNlIDY6aWYobnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHkoMTYyKSk7Yi5zdGF0ZU5vZGUubm9kZVZhbHVlPVxuYi5tZW1vaXplZFByb3BzO3JldHVybjtjYXNlIDM6Yz1iLnN0YXRlTm9kZTtjLmh5ZHJhdGUmJihjLmh5ZHJhdGU9ITEsQ2MoYy5jb250YWluZXJJbmZvKSk7cmV0dXJuO2Nhc2UgMTI6cmV0dXJuO2Nhc2UgMTM6bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSYmKGpqPU8oKSxhaihiLmNoaWxkLCEwKSk7a2ooYik7cmV0dXJuO2Nhc2UgMTk6a2ooYik7cmV0dXJuO2Nhc2UgMTc6cmV0dXJuO2Nhc2UgMjM6Y2FzZSAyNDphaihiLG51bGwhPT1iLm1lbW9pemVkU3RhdGUpO3JldHVybn10aHJvdyBFcnJvcih5KDE2MykpO31mdW5jdGlvbiBraihhKXt2YXIgYj1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iKXthLnVwZGF0ZVF1ZXVlPW51bGw7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbD09PWMmJihjPWEuc3RhdGVOb2RlPW5ldyBVaSk7Yi5mb3JFYWNoKGZ1bmN0aW9uKGIpe3ZhciBkPWxqLmJpbmQobnVsbCxhLGIpO2MuaGFzKGIpfHwoYy5hZGQoYiksYi50aGVuKGQsZCkpfSl9fVxuZnVuY3Rpb24gbWooYSxiKXtyZXR1cm4gbnVsbCE9PWEmJihhPWEubWVtb2l6ZWRTdGF0ZSxudWxsPT09YXx8bnVsbCE9PWEuZGVoeWRyYXRlZCk/KGI9Yi5tZW1vaXplZFN0YXRlLG51bGwhPT1iJiZudWxsPT09Yi5kZWh5ZHJhdGVkKTohMX12YXIgbmo9TWF0aC5jZWlsLG9qPXJhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIscGo9cmEuUmVhY3RDdXJyZW50T3duZXIsWD0wLFU9bnVsbCxZPW51bGwsVz0wLHFqPTAscmo9QmYoMCksVj0wLHNqPW51bGwsdGo9MCxEZz0wLEhpPTAsdWo9MCx2aj1udWxsLGpqPTAsSmk9SW5maW5pdHk7ZnVuY3Rpb24gd2ooKXtKaT1PKCkrNTAwfXZhciBaPW51bGwsUWk9ITEsUmk9bnVsbCxUaT1udWxsLHhqPSExLHlqPW51bGwsemo9OTAsQWo9W10sQmo9W10sQ2o9bnVsbCxEaj0wLEVqPW51bGwsRmo9LTEsR2o9MCxIaj0wLElqPW51bGwsSmo9ITE7ZnVuY3Rpb24gSGcoKXtyZXR1cm4gMCE9PShYJjQ4KT9PKCk6LTEhPT1Gaj9GajpGaj1PKCl9XG5mdW5jdGlvbiBJZyhhKXthPWEubW9kZTtpZigwPT09KGEmMikpcmV0dXJuIDE7aWYoMD09PShhJjQpKXJldHVybiA5OT09PWVnKCk/MToyOzA9PT1HaiYmKEdqPXRqKTtpZigwIT09a2cudHJhbnNpdGlvbil7MCE9PUhqJiYoSGo9bnVsbCE9PXZqP3ZqLnBlbmRpbmdMYW5lczowKTthPUdqO3ZhciBiPTQxODYxMTImfkhqO2ImPS1iOzA9PT1iJiYoYT00MTg2MTEyJn5hLGI9YSYtYSwwPT09YiYmKGI9ODE5MikpO3JldHVybiBifWE9ZWcoKTswIT09KFgmNCkmJjk4PT09YT9hPVhjKDEyLEdqKTooYT1TYyhhKSxhPVhjKGEsR2opKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIEpnKGEsYixjKXtpZig1MDxEail0aHJvdyBEaj0wLEVqPW51bGwsRXJyb3IoeSgxODUpKTthPUtqKGEsYik7aWYobnVsbD09PWEpcmV0dXJuIG51bGw7JGMoYSxiLGMpO2E9PT1VJiYoSGl8PWIsND09PVYmJklpKGEsVykpO3ZhciBkPWVnKCk7MT09PWI/MCE9PShYJjgpJiYwPT09KFgmNDgpP0xqKGEpOihNaihhLGMpLDA9PT1YJiYod2ooKSxpZygpKSk6KDA9PT0oWCY0KXx8OTghPT1kJiY5OSE9PWR8fChudWxsPT09Q2o/Q2o9bmV3IFNldChbYV0pOkNqLmFkZChhKSksTWooYSxjKSk7dmo9YX1mdW5jdGlvbiBLaihhLGIpe2EubGFuZXN8PWI7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJihjLmxhbmVzfD1iKTtjPWE7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWE7KWEuY2hpbGRMYW5lc3w9YixjPWEuYWx0ZXJuYXRlLG51bGwhPT1jJiYoYy5jaGlsZExhbmVzfD1iKSxjPWEsYT1hLnJldHVybjtyZXR1cm4gMz09PWMudGFnP2Muc3RhdGVOb2RlOm51bGx9XG5mdW5jdGlvbiBNaihhLGIpe2Zvcih2YXIgYz1hLmNhbGxiYWNrTm9kZSxkPWEuc3VzcGVuZGVkTGFuZXMsZT1hLnBpbmdlZExhbmVzLGY9YS5leHBpcmF0aW9uVGltZXMsZz1hLnBlbmRpbmdMYW5lczswPGc7KXt2YXIgaD0zMS1WYyhnKSxrPTE8PGgsbD1mW2hdO2lmKC0xPT09bCl7aWYoMD09PShrJmQpfHwwIT09KGsmZSkpe2w9YjtSYyhrKTt2YXIgbj1GO2ZbaF09MTA8PW4/bCsyNTA6Njw9bj9sKzVFMzotMX19ZWxzZSBsPD1iJiYoYS5leHBpcmVkTGFuZXN8PWspO2cmPX5rfWQ9VWMoYSxhPT09VT9XOjApO2I9RjtpZigwPT09ZCludWxsIT09YyYmKGMhPT1aZiYmUGYoYyksYS5jYWxsYmFja05vZGU9bnVsbCxhLmNhbGxiYWNrUHJpb3JpdHk9MCk7ZWxzZXtpZihudWxsIT09Yyl7aWYoYS5jYWxsYmFja1ByaW9yaXR5PT09YilyZXR1cm47YyE9PVpmJiZQZihjKX0xNT09PWI/KGM9TGouYmluZChudWxsLGEpLG51bGw9PT1hZz8oYWc9W2NdLGJnPU9mKFVmLGpnKSk6YWcucHVzaChjKSxcbmM9WmYpOjE0PT09Yj9jPWhnKDk5LExqLmJpbmQobnVsbCxhKSk6KGM9VGMoYiksYz1oZyhjLE5qLmJpbmQobnVsbCxhKSkpO2EuY2FsbGJhY2tQcmlvcml0eT1iO2EuY2FsbGJhY2tOb2RlPWN9fVxuZnVuY3Rpb24gTmooYSl7Rmo9LTE7SGo9R2o9MDtpZigwIT09KFgmNDgpKXRocm93IEVycm9yKHkoMzI3KSk7dmFyIGI9YS5jYWxsYmFja05vZGU7aWYoT2ooKSYmYS5jYWxsYmFja05vZGUhPT1iKXJldHVybiBudWxsO3ZhciBjPVVjKGEsYT09PVU/VzowKTtpZigwPT09YylyZXR1cm4gbnVsbDt2YXIgZD1jO3ZhciBlPVg7WHw9MTY7dmFyIGY9UGooKTtpZihVIT09YXx8VyE9PWQpd2ooKSxRaihhLGQpO2RvIHRyeXtSaigpO2JyZWFrfWNhdGNoKGgpe1NqKGEsaCl9d2hpbGUoMSk7cWcoKTtvai5jdXJyZW50PWY7WD1lO251bGwhPT1ZP2Q9MDooVT1udWxsLFc9MCxkPVYpO2lmKDAhPT0odGomSGkpKVFqKGEsMCk7ZWxzZSBpZigwIT09ZCl7Mj09PWQmJihYfD02NCxhLmh5ZHJhdGUmJihhLmh5ZHJhdGU9ITEscWYoYS5jb250YWluZXJJbmZvKSksYz1XYyhhKSwwIT09YyYmKGQ9VGooYSxjKSkpO2lmKDE9PT1kKXRocm93IGI9c2osUWooYSwwKSxJaShhLGMpLE1qKGEsTygpKSxiO2EuZmluaXNoZWRXb3JrPVxuYS5jdXJyZW50LmFsdGVybmF0ZTthLmZpbmlzaGVkTGFuZXM9Yztzd2l0Y2goZCl7Y2FzZSAwOmNhc2UgMTp0aHJvdyBFcnJvcih5KDM0NSkpO2Nhc2UgMjpVaihhKTticmVhaztjYXNlIDM6SWkoYSxjKTtpZigoYyY2MjkxNDU2MCk9PT1jJiYoZD1qais1MDAtTygpLDEwPGQpKXtpZigwIT09VWMoYSwwKSlicmVhaztlPWEuc3VzcGVuZGVkTGFuZXM7aWYoKGUmYykhPT1jKXtIZygpO2EucGluZ2VkTGFuZXN8PWEuc3VzcGVuZGVkTGFuZXMmZTticmVha31hLnRpbWVvdXRIYW5kbGU9b2YoVWouYmluZChudWxsLGEpLGQpO2JyZWFrfVVqKGEpO2JyZWFrO2Nhc2UgNDpJaShhLGMpO2lmKChjJjQxODYxMTIpPT09YylicmVhaztkPWEuZXZlbnRUaW1lcztmb3IoZT0tMTswPGM7KXt2YXIgZz0zMS1WYyhjKTtmPTE8PGc7Zz1kW2ddO2c+ZSYmKGU9Zyk7YyY9fmZ9Yz1lO2M9TygpLWM7Yz0oMTIwPmM/MTIwOjQ4MD5jPzQ4MDoxMDgwPmM/MTA4MDoxOTIwPmM/MTkyMDozRTM+Yz8zRTM6NDMyMD5cbmM/NDMyMDoxOTYwKm5qKGMvMTk2MCkpLWM7aWYoMTA8Yyl7YS50aW1lb3V0SGFuZGxlPW9mKFVqLmJpbmQobnVsbCxhKSxjKTticmVha31VaihhKTticmVhaztjYXNlIDU6VWooYSk7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih5KDMyOSkpO319TWooYSxPKCkpO3JldHVybiBhLmNhbGxiYWNrTm9kZT09PWI/TmouYmluZChudWxsLGEpOm51bGx9ZnVuY3Rpb24gSWkoYSxiKXtiJj1+dWo7YiY9fkhpO2Euc3VzcGVuZGVkTGFuZXN8PWI7YS5waW5nZWRMYW5lcyY9fmI7Zm9yKGE9YS5leHBpcmF0aW9uVGltZXM7MDxiOyl7dmFyIGM9MzEtVmMoYiksZD0xPDxjO2FbY109LTE7YiY9fmR9fVxuZnVuY3Rpb24gTGooYSl7aWYoMCE9PShYJjQ4KSl0aHJvdyBFcnJvcih5KDMyNykpO09qKCk7aWYoYT09PVUmJjAhPT0oYS5leHBpcmVkTGFuZXMmVykpe3ZhciBiPVc7dmFyIGM9VGooYSxiKTswIT09KHRqJkhpKSYmKGI9VWMoYSxiKSxjPVRqKGEsYikpfWVsc2UgYj1VYyhhLDApLGM9VGooYSxiKTswIT09YS50YWcmJjI9PT1jJiYoWHw9NjQsYS5oeWRyYXRlJiYoYS5oeWRyYXRlPSExLHFmKGEuY29udGFpbmVySW5mbykpLGI9V2MoYSksMCE9PWImJihjPVRqKGEsYikpKTtpZigxPT09Yyl0aHJvdyBjPXNqLFFqKGEsMCksSWkoYSxiKSxNaihhLE8oKSksYzthLmZpbmlzaGVkV29yaz1hLmN1cnJlbnQuYWx0ZXJuYXRlO2EuZmluaXNoZWRMYW5lcz1iO1VqKGEpO01qKGEsTygpKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIFZqKCl7aWYobnVsbCE9PUNqKXt2YXIgYT1DajtDaj1udWxsO2EuZm9yRWFjaChmdW5jdGlvbihhKXthLmV4cGlyZWRMYW5lc3w9MjQmYS5wZW5kaW5nTGFuZXM7TWooYSxPKCkpfSl9aWcoKX1mdW5jdGlvbiBXaihhLGIpe3ZhciBjPVg7WHw9MTt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtYPWMsMD09PVgmJih3aigpLGlnKCkpfX1mdW5jdGlvbiBYaihhLGIpe3ZhciBjPVg7WCY9LTI7WHw9ODt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtYPWMsMD09PVgmJih3aigpLGlnKCkpfX1mdW5jdGlvbiBuaShhLGIpe0kocmoscWopO3FqfD1iO3RqfD1ifWZ1bmN0aW9uIEtpKCl7cWo9cmouY3VycmVudDtIKHJqKX1cbmZ1bmN0aW9uIFFqKGEsYil7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkTGFuZXM9MDt2YXIgYz1hLnRpbWVvdXRIYW5kbGU7LTEhPT1jJiYoYS50aW1lb3V0SGFuZGxlPS0xLHBmKGMpKTtpZihudWxsIT09WSlmb3IoYz1ZLnJldHVybjtudWxsIT09Yzspe3ZhciBkPWM7c3dpdGNoKGQudGFnKXtjYXNlIDE6ZD1kLnR5cGUuY2hpbGRDb250ZXh0VHlwZXM7bnVsbCE9PWQmJnZvaWQgMCE9PWQmJkdmKCk7YnJlYWs7Y2FzZSAzOmZoKCk7SChOKTtIKE0pO3VoKCk7YnJlYWs7Y2FzZSA1OmhoKGQpO2JyZWFrO2Nhc2UgNDpmaCgpO2JyZWFrO2Nhc2UgMTM6SChQKTticmVhaztjYXNlIDE5OkgoUCk7YnJlYWs7Y2FzZSAxMDpyZyhkKTticmVhaztjYXNlIDIzOmNhc2UgMjQ6S2koKX1jPWMucmV0dXJufVU9YTtZPVRnKGEuY3VycmVudCxudWxsKTtXPXFqPXRqPWI7Vj0wO3NqPW51bGw7dWo9SGk9RGc9MH1cbmZ1bmN0aW9uIFNqKGEsYil7ZG97dmFyIGM9WTt0cnl7cWcoKTt2aC5jdXJyZW50PUdoO2lmKHloKXtmb3IodmFyIGQ9Ui5tZW1vaXplZFN0YXRlO251bGwhPT1kOyl7dmFyIGU9ZC5xdWV1ZTtudWxsIT09ZSYmKGUucGVuZGluZz1udWxsKTtkPWQubmV4dH15aD0hMX14aD0wO1Q9Uz1SPW51bGw7emg9ITE7cGouY3VycmVudD1udWxsO2lmKG51bGw9PT1jfHxudWxsPT09Yy5yZXR1cm4pe1Y9MTtzaj1iO1k9bnVsbDticmVha31hOnt2YXIgZj1hLGc9Yy5yZXR1cm4saD1jLGs9YjtiPVc7aC5mbGFnc3w9MjA0ODtoLmZpcnN0RWZmZWN0PWgubGFzdEVmZmVjdD1udWxsO2lmKG51bGwhPT1rJiZcIm9iamVjdFwiPT09dHlwZW9mIGsmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBrLnRoZW4pe3ZhciBsPWs7aWYoMD09PShoLm1vZGUmMikpe3ZhciBuPWguYWx0ZXJuYXRlO24/KGgudXBkYXRlUXVldWU9bi51cGRhdGVRdWV1ZSxoLm1lbW9pemVkU3RhdGU9bi5tZW1vaXplZFN0YXRlLGgubGFuZXM9bi5sYW5lcyk6XG4oaC51cGRhdGVRdWV1ZT1udWxsLGgubWVtb2l6ZWRTdGF0ZT1udWxsKX12YXIgQT0wIT09KFAuY3VycmVudCYxKSxwPWc7ZG97dmFyIEM7aWYoQz0xMz09PXAudGFnKXt2YXIgeD1wLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PXgpQz1udWxsIT09eC5kZWh5ZHJhdGVkPyEwOiExO2Vsc2V7dmFyIHc9cC5tZW1vaXplZFByb3BzO0M9dm9pZCAwPT09dy5mYWxsYmFjaz8hMTohMCE9PXcudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2s/ITA6QT8hMTohMH19aWYoQyl7dmFyIHo9cC51cGRhdGVRdWV1ZTtpZihudWxsPT09eil7dmFyIHU9bmV3IFNldDt1LmFkZChsKTtwLnVwZGF0ZVF1ZXVlPXV9ZWxzZSB6LmFkZChsKTtpZigwPT09KHAubW9kZSYyKSl7cC5mbGFnc3w9NjQ7aC5mbGFnc3w9MTYzODQ7aC5mbGFncyY9LTI5ODE7aWYoMT09PWgudGFnKWlmKG51bGw9PT1oLmFsdGVybmF0ZSloLnRhZz0xNztlbHNle3ZhciB0PXpnKC0xLDEpO3QudGFnPTI7QWcoaCx0KX1oLmxhbmVzfD0xO2JyZWFrIGF9az1cbnZvaWQgMDtoPWI7dmFyIHE9Zi5waW5nQ2FjaGU7bnVsbD09PXE/KHE9Zi5waW5nQ2FjaGU9bmV3IE9pLGs9bmV3IFNldCxxLnNldChsLGspKTooaz1xLmdldChsKSx2b2lkIDA9PT1rJiYoaz1uZXcgU2V0LHEuc2V0KGwsaykpKTtpZighay5oYXMoaCkpe2suYWRkKGgpO3ZhciB2PVlqLmJpbmQobnVsbCxmLGwsaCk7bC50aGVuKHYsdil9cC5mbGFnc3w9NDA5NjtwLmxhbmVzPWI7YnJlYWsgYX1wPXAucmV0dXJufXdoaWxlKG51bGwhPT1wKTtrPUVycm9yKChSYShoLnR5cGUpfHxcIkEgUmVhY3QgY29tcG9uZW50XCIpK1wiIHN1c3BlbmRlZCB3aGlsZSByZW5kZXJpbmcsIGJ1dCBubyBmYWxsYmFjayBVSSB3YXMgc3BlY2lmaWVkLlxcblxcbkFkZCBhIDxTdXNwZW5zZSBmYWxsYmFjaz0uLi4+IGNvbXBvbmVudCBoaWdoZXIgaW4gdGhlIHRyZWUgdG8gcHJvdmlkZSBhIGxvYWRpbmcgaW5kaWNhdG9yIG9yIHBsYWNlaG9sZGVyIHRvIGRpc3BsYXkuXCIpfTUhPT1WJiYoVj0yKTtrPU1pKGssaCk7cD1cbmc7ZG97c3dpdGNoKHAudGFnKXtjYXNlIDM6Zj1rO3AuZmxhZ3N8PTQwOTY7YiY9LWI7cC5sYW5lc3w9Yjt2YXIgSj1QaShwLGYsYik7QmcocCxKKTticmVhayBhO2Nhc2UgMTpmPWs7dmFyIEs9cC50eXBlLFE9cC5zdGF0ZU5vZGU7aWYoMD09PShwLmZsYWdzJjY0KSYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBLLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8bnVsbCE9PVEmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBRLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PVRpfHwhVGkuaGFzKFEpKSkpe3AuZmxhZ3N8PTQwOTY7YiY9LWI7cC5sYW5lc3w9Yjt2YXIgTD1TaShwLGYsYik7QmcocCxMKTticmVhayBhfX1wPXAucmV0dXJufXdoaWxlKG51bGwhPT1wKX1aaihjKX1jYXRjaCh2YSl7Yj12YTtZPT09YyYmbnVsbCE9PWMmJihZPWM9Yy5yZXR1cm4pO2NvbnRpbnVlfWJyZWFrfXdoaWxlKDEpfVxuZnVuY3Rpb24gUGooKXt2YXIgYT1vai5jdXJyZW50O29qLmN1cnJlbnQ9R2g7cmV0dXJuIG51bGw9PT1hP0doOmF9ZnVuY3Rpb24gVGooYSxiKXt2YXIgYz1YO1h8PTE2O3ZhciBkPVBqKCk7VT09PWEmJlc9PT1ifHxRaihhLGIpO2RvIHRyeXthaygpO2JyZWFrfWNhdGNoKGUpe1NqKGEsZSl9d2hpbGUoMSk7cWcoKTtYPWM7b2ouY3VycmVudD1kO2lmKG51bGwhPT1ZKXRocm93IEVycm9yKHkoMjYxKSk7VT1udWxsO1c9MDtyZXR1cm4gVn1mdW5jdGlvbiBhaygpe2Zvcig7bnVsbCE9PVk7KWJrKFkpfWZ1bmN0aW9uIFJqKCl7Zm9yKDtudWxsIT09WSYmIVFmKCk7KWJrKFkpfWZ1bmN0aW9uIGJrKGEpe3ZhciBiPWNrKGEuYWx0ZXJuYXRlLGEscWopO2EubWVtb2l6ZWRQcm9wcz1hLnBlbmRpbmdQcm9wcztudWxsPT09Yj9aaihhKTpZPWI7cGouY3VycmVudD1udWxsfVxuZnVuY3Rpb24gWmooYSl7dmFyIGI9YTtkb3t2YXIgYz1iLmFsdGVybmF0ZTthPWIucmV0dXJuO2lmKDA9PT0oYi5mbGFncyYyMDQ4KSl7Yz1HaShjLGIscWopO2lmKG51bGwhPT1jKXtZPWM7cmV0dXJufWM9YjtpZigyNCE9PWMudGFnJiYyMyE9PWMudGFnfHxudWxsPT09Yy5tZW1vaXplZFN0YXRlfHwwIT09KHFqJjEwNzM3NDE4MjQpfHwwPT09KGMubW9kZSY0KSl7Zm9yKHZhciBkPTAsZT1jLmNoaWxkO251bGwhPT1lOylkfD1lLmxhbmVzfGUuY2hpbGRMYW5lcyxlPWUuc2libGluZztjLmNoaWxkTGFuZXM9ZH1udWxsIT09YSYmMD09PShhLmZsYWdzJjIwNDgpJiYobnVsbD09PWEuZmlyc3RFZmZlY3QmJihhLmZpcnN0RWZmZWN0PWIuZmlyc3RFZmZlY3QpLG51bGwhPT1iLmxhc3RFZmZlY3QmJihudWxsIT09YS5sYXN0RWZmZWN0JiYoYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9Yi5maXJzdEVmZmVjdCksYS5sYXN0RWZmZWN0PWIubGFzdEVmZmVjdCksMTxiLmZsYWdzJiYobnVsbCE9PVxuYS5sYXN0RWZmZWN0P2EubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWI6YS5maXJzdEVmZmVjdD1iLGEubGFzdEVmZmVjdD1iKSl9ZWxzZXtjPUxpKGIpO2lmKG51bGwhPT1jKXtjLmZsYWdzJj0yMDQ3O1k9YztyZXR1cm59bnVsbCE9PWEmJihhLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1udWxsLGEuZmxhZ3N8PTIwNDgpfWI9Yi5zaWJsaW5nO2lmKG51bGwhPT1iKXtZPWI7cmV0dXJufVk9Yj1hfXdoaWxlKG51bGwhPT1iKTswPT09ViYmKFY9NSl9ZnVuY3Rpb24gVWooYSl7dmFyIGI9ZWcoKTtnZyg5OSxkay5iaW5kKG51bGwsYSxiKSk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBkayhhLGIpe2RvIE9qKCk7d2hpbGUobnVsbCE9PXlqKTtpZigwIT09KFgmNDgpKXRocm93IEVycm9yKHkoMzI3KSk7dmFyIGM9YS5maW5pc2hlZFdvcms7aWYobnVsbD09PWMpcmV0dXJuIG51bGw7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkTGFuZXM9MDtpZihjPT09YS5jdXJyZW50KXRocm93IEVycm9yKHkoMTc3KSk7YS5jYWxsYmFja05vZGU9bnVsbDt2YXIgZD1jLmxhbmVzfGMuY2hpbGRMYW5lcyxlPWQsZj1hLnBlbmRpbmdMYW5lcyZ+ZTthLnBlbmRpbmdMYW5lcz1lO2Euc3VzcGVuZGVkTGFuZXM9MDthLnBpbmdlZExhbmVzPTA7YS5leHBpcmVkTGFuZXMmPWU7YS5tdXRhYmxlUmVhZExhbmVzJj1lO2EuZW50YW5nbGVkTGFuZXMmPWU7ZT1hLmVudGFuZ2xlbWVudHM7Zm9yKHZhciBnPWEuZXZlbnRUaW1lcyxoPWEuZXhwaXJhdGlvblRpbWVzOzA8Zjspe3ZhciBrPTMxLVZjKGYpLGw9MTw8aztlW2tdPTA7Z1trXT0tMTtoW2tdPS0xO2YmPX5sfW51bGwhPT1cbkNqJiYwPT09KGQmMjQpJiZDai5oYXMoYSkmJkNqLmRlbGV0ZShhKTthPT09VSYmKFk9VT1udWxsLFc9MCk7MTxjLmZsYWdzP251bGwhPT1jLmxhc3RFZmZlY3Q/KGMubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsZD1jLmZpcnN0RWZmZWN0KTpkPWM6ZD1jLmZpcnN0RWZmZWN0O2lmKG51bGwhPT1kKXtlPVg7WHw9MzI7cGouY3VycmVudD1udWxsO2tmPWZkO2c9TmUoKTtpZihPZShnKSl7aWYoXCJzZWxlY3Rpb25TdGFydFwiaW4gZyloPXtzdGFydDpnLnNlbGVjdGlvblN0YXJ0LGVuZDpnLnNlbGVjdGlvbkVuZH07ZWxzZSBhOmlmKGg9KGg9Zy5vd25lckRvY3VtZW50KSYmaC5kZWZhdWx0Vmlld3x8d2luZG93LChsPWguZ2V0U2VsZWN0aW9uJiZoLmdldFNlbGVjdGlvbigpKSYmMCE9PWwucmFuZ2VDb3VudCl7aD1sLmFuY2hvck5vZGU7Zj1sLmFuY2hvck9mZnNldDtrPWwuZm9jdXNOb2RlO2w9bC5mb2N1c09mZnNldDt0cnl7aC5ub2RlVHlwZSxrLm5vZGVUeXBlfWNhdGNoKHZhKXtoPW51bGw7XG5icmVhayBhfXZhciBuPTAsQT0tMSxwPS0xLEM9MCx4PTAsdz1nLHo9bnVsbDtiOmZvcig7Oyl7Zm9yKHZhciB1Ozspe3chPT1ofHwwIT09ZiYmMyE9PXcubm9kZVR5cGV8fChBPW4rZik7dyE9PWt8fDAhPT1sJiYzIT09dy5ub2RlVHlwZXx8KHA9bitsKTszPT09dy5ub2RlVHlwZSYmKG4rPXcubm9kZVZhbHVlLmxlbmd0aCk7aWYobnVsbD09PSh1PXcuZmlyc3RDaGlsZCkpYnJlYWs7ej13O3c9dX1mb3IoOzspe2lmKHc9PT1nKWJyZWFrIGI7ej09PWgmJisrQz09PWYmJihBPW4pO3o9PT1rJiYrK3g9PT1sJiYocD1uKTtpZihudWxsIT09KHU9dy5uZXh0U2libGluZykpYnJlYWs7dz16O3o9dy5wYXJlbnROb2RlfXc9dX1oPS0xPT09QXx8LTE9PT1wP251bGw6e3N0YXJ0OkEsZW5kOnB9fWVsc2UgaD1udWxsO2g9aHx8e3N0YXJ0OjAsZW5kOjB9fWVsc2UgaD1udWxsO2xmPXtmb2N1c2VkRWxlbTpnLHNlbGVjdGlvblJhbmdlOmh9O2ZkPSExO0lqPW51bGw7Smo9ITE7Wj1kO2RvIHRyeXtlaygpfWNhdGNoKHZhKXtpZihudWxsPT09XG5aKXRocm93IEVycm9yKHkoMzMwKSk7V2koWix2YSk7Wj1aLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVopO0lqPW51bGw7Wj1kO2RvIHRyeXtmb3IoZz1hO251bGwhPT1aOyl7dmFyIHQ9Wi5mbGFnczt0JjE2JiZwYihaLnN0YXRlTm9kZSxcIlwiKTtpZih0JjEyOCl7dmFyIHE9Wi5hbHRlcm5hdGU7aWYobnVsbCE9PXEpe3ZhciB2PXEucmVmO251bGwhPT12JiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHY/dihudWxsKTp2LmN1cnJlbnQ9bnVsbCl9fXN3aXRjaCh0JjEwMzgpe2Nhc2UgMjpmaihaKTtaLmZsYWdzJj0tMzticmVhaztjYXNlIDY6ZmooWik7Wi5mbGFncyY9LTM7aWooWi5hbHRlcm5hdGUsWik7YnJlYWs7Y2FzZSAxMDI0OlouZmxhZ3MmPS0xMDI1O2JyZWFrO2Nhc2UgMTAyODpaLmZsYWdzJj0tMTAyNTtpaihaLmFsdGVybmF0ZSxaKTticmVhaztjYXNlIDQ6aWooWi5hbHRlcm5hdGUsWik7YnJlYWs7Y2FzZSA4Omg9WjtjaihnLGgpO3ZhciBKPWguYWx0ZXJuYXRlO2RqKGgpO251bGwhPT1cbkomJmRqKEopfVo9Wi5uZXh0RWZmZWN0fX1jYXRjaCh2YSl7aWYobnVsbD09PVopdGhyb3cgRXJyb3IoeSgzMzApKTtXaShaLHZhKTtaPVoubmV4dEVmZmVjdH13aGlsZShudWxsIT09Wik7dj1sZjtxPU5lKCk7dD12LmZvY3VzZWRFbGVtO2c9di5zZWxlY3Rpb25SYW5nZTtpZihxIT09dCYmdCYmdC5vd25lckRvY3VtZW50JiZNZSh0Lm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LHQpKXtudWxsIT09ZyYmT2UodCkmJihxPWcuc3RhcnQsdj1nLmVuZCx2b2lkIDA9PT12JiYodj1xKSxcInNlbGVjdGlvblN0YXJ0XCJpbiB0Pyh0LnNlbGVjdGlvblN0YXJ0PXEsdC5zZWxlY3Rpb25FbmQ9TWF0aC5taW4odix0LnZhbHVlLmxlbmd0aCkpOih2PShxPXQub3duZXJEb2N1bWVudHx8ZG9jdW1lbnQpJiZxLmRlZmF1bHRWaWV3fHx3aW5kb3csdi5nZXRTZWxlY3Rpb24mJih2PXYuZ2V0U2VsZWN0aW9uKCksaD10LnRleHRDb250ZW50Lmxlbmd0aCxKPU1hdGgubWluKGcuc3RhcnQsaCksZz12b2lkIDA9PT1cbmcuZW5kP0o6TWF0aC5taW4oZy5lbmQsaCksIXYuZXh0ZW5kJiZKPmcmJihoPWcsZz1KLEo9aCksaD1MZSh0LEopLGY9TGUodCxnKSxoJiZmJiYoMSE9PXYucmFuZ2VDb3VudHx8di5hbmNob3JOb2RlIT09aC5ub2RlfHx2LmFuY2hvck9mZnNldCE9PWgub2Zmc2V0fHx2LmZvY3VzTm9kZSE9PWYubm9kZXx8di5mb2N1c09mZnNldCE9PWYub2Zmc2V0KSYmKHE9cS5jcmVhdGVSYW5nZSgpLHEuc2V0U3RhcnQoaC5ub2RlLGgub2Zmc2V0KSx2LnJlbW92ZUFsbFJhbmdlcygpLEo+Zz8odi5hZGRSYW5nZShxKSx2LmV4dGVuZChmLm5vZGUsZi5vZmZzZXQpKToocS5zZXRFbmQoZi5ub2RlLGYub2Zmc2V0KSx2LmFkZFJhbmdlKHEpKSkpKSk7cT1bXTtmb3Iodj10O3Y9di5wYXJlbnROb2RlOykxPT09di5ub2RlVHlwZSYmcS5wdXNoKHtlbGVtZW50OnYsbGVmdDp2LnNjcm9sbExlZnQsdG9wOnYuc2Nyb2xsVG9wfSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIHQuZm9jdXMmJnQuZm9jdXMoKTtmb3IodD1cbjA7dDxxLmxlbmd0aDt0Kyspdj1xW3RdLHYuZWxlbWVudC5zY3JvbGxMZWZ0PXYubGVmdCx2LmVsZW1lbnQuc2Nyb2xsVG9wPXYudG9wfWZkPSEha2Y7bGY9a2Y9bnVsbDthLmN1cnJlbnQ9YztaPWQ7ZG8gdHJ5e2Zvcih0PWE7bnVsbCE9PVo7KXt2YXIgSz1aLmZsYWdzO0smMzYmJllpKHQsWi5hbHRlcm5hdGUsWik7aWYoSyYxMjgpe3E9dm9pZCAwO3ZhciBRPVoucmVmO2lmKG51bGwhPT1RKXt2YXIgTD1aLnN0YXRlTm9kZTtzd2l0Y2goWi50YWcpe2Nhc2UgNTpxPUw7YnJlYWs7ZGVmYXVsdDpxPUx9XCJmdW5jdGlvblwiPT09dHlwZW9mIFE/UShxKTpRLmN1cnJlbnQ9cX19Wj1aLm5leHRFZmZlY3R9fWNhdGNoKHZhKXtpZihudWxsPT09Wil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKFosdmEpO1o9Wi5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1aKTtaPW51bGw7JGYoKTtYPWV9ZWxzZSBhLmN1cnJlbnQ9YztpZih4ail4aj0hMSx5aj1hLHpqPWI7ZWxzZSBmb3IoWj1kO251bGwhPT1aOyliPVxuWi5uZXh0RWZmZWN0LFoubmV4dEVmZmVjdD1udWxsLFouZmxhZ3MmOCYmKEs9WixLLnNpYmxpbmc9bnVsbCxLLnN0YXRlTm9kZT1udWxsKSxaPWI7ZD1hLnBlbmRpbmdMYW5lczswPT09ZCYmKFRpPW51bGwpOzE9PT1kP2E9PT1Faj9EaisrOihEaj0wLEVqPWEpOkRqPTA7Yz1jLnN0YXRlTm9kZTtpZihNZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIE1mLm9uQ29tbWl0RmliZXJSb290KXRyeXtNZi5vbkNvbW1pdEZpYmVyUm9vdChMZixjLHZvaWQgMCw2ND09PShjLmN1cnJlbnQuZmxhZ3MmNjQpKX1jYXRjaCh2YSl7fU1qKGEsTygpKTtpZihRaSl0aHJvdyBRaT0hMSxhPVJpLFJpPW51bGwsYTtpZigwIT09KFgmOCkpcmV0dXJuIG51bGw7aWcoKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGVrKCl7Zm9yKDtudWxsIT09Wjspe3ZhciBhPVouYWx0ZXJuYXRlO0pqfHxudWxsPT09SWp8fCgwIT09KFouZmxhZ3MmOCk/ZGMoWixJaikmJihKaj0hMCk6MTM9PT1aLnRhZyYmbWooYSxaKSYmZGMoWixJaikmJihKaj0hMCkpO3ZhciBiPVouZmxhZ3M7MCE9PShiJjI1NikmJlhpKGEsWik7MD09PShiJjUxMil8fHhqfHwoeGo9ITAsaGcoOTcsZnVuY3Rpb24oKXtPaigpO3JldHVybiBudWxsfSkpO1o9Wi5uZXh0RWZmZWN0fX1mdW5jdGlvbiBPaigpe2lmKDkwIT09emope3ZhciBhPTk3PHpqPzk3OnpqO3pqPTkwO3JldHVybiBnZyhhLGZrKX1yZXR1cm4hMX1mdW5jdGlvbiAkaShhLGIpe0FqLnB1c2goYixhKTt4anx8KHhqPSEwLGhnKDk3LGZ1bmN0aW9uKCl7T2ooKTtyZXR1cm4gbnVsbH0pKX1mdW5jdGlvbiBaaShhLGIpe0JqLnB1c2goYixhKTt4anx8KHhqPSEwLGhnKDk3LGZ1bmN0aW9uKCl7T2ooKTtyZXR1cm4gbnVsbH0pKX1cbmZ1bmN0aW9uIGZrKCl7aWYobnVsbD09PXlqKXJldHVybiExO3ZhciBhPXlqO3lqPW51bGw7aWYoMCE9PShYJjQ4KSl0aHJvdyBFcnJvcih5KDMzMSkpO3ZhciBiPVg7WHw9MzI7dmFyIGM9Qmo7Qmo9W107Zm9yKHZhciBkPTA7ZDxjLmxlbmd0aDtkKz0yKXt2YXIgZT1jW2RdLGY9Y1tkKzFdLGc9ZS5kZXN0cm95O2UuZGVzdHJveT12b2lkIDA7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcpdHJ5e2coKX1jYXRjaChrKXtpZihudWxsPT09Zil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKGYsayl9fWM9QWo7QWo9W107Zm9yKGQ9MDtkPGMubGVuZ3RoO2QrPTIpe2U9Y1tkXTtmPWNbZCsxXTt0cnl7dmFyIGg9ZS5jcmVhdGU7ZS5kZXN0cm95PWgoKX1jYXRjaChrKXtpZihudWxsPT09Zil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKGYsayl9fWZvcihoPWEuY3VycmVudC5maXJzdEVmZmVjdDtudWxsIT09aDspYT1oLm5leHRFZmZlY3QsaC5uZXh0RWZmZWN0PW51bGwsaC5mbGFncyY4JiYoaC5zaWJsaW5nPVxubnVsbCxoLnN0YXRlTm9kZT1udWxsKSxoPWE7WD1iO2lnKCk7cmV0dXJuITB9ZnVuY3Rpb24gZ2soYSxiLGMpe2I9TWkoYyxiKTtiPVBpKGEsYiwxKTtBZyhhLGIpO2I9SGcoKTthPUtqKGEsMSk7bnVsbCE9PWEmJigkYyhhLDEsYiksTWooYSxiKSl9XG5mdW5jdGlvbiBXaShhLGIpe2lmKDM9PT1hLnRhZylnayhhLGEsYik7ZWxzZSBmb3IodmFyIGM9YS5yZXR1cm47bnVsbCE9PWM7KXtpZigzPT09Yy50YWcpe2drKGMsYSxiKTticmVha31lbHNlIGlmKDE9PT1jLnRhZyl7dmFyIGQ9Yy5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGMudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PVRpfHwhVGkuaGFzKGQpKSl7YT1NaShiLGEpO3ZhciBlPVNpKGMsYSwxKTtBZyhjLGUpO2U9SGcoKTtjPUtqKGMsMSk7aWYobnVsbCE9PWMpJGMoYywxLGUpLE1qKGMsZSk7ZWxzZSBpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1UaXx8IVRpLmhhcyhkKSkpdHJ5e2QuY29tcG9uZW50RGlkQ2F0Y2goYixhKX1jYXRjaChmKXt9YnJlYWt9fWM9Yy5yZXR1cm59fVxuZnVuY3Rpb24gWWooYSxiLGMpe3ZhciBkPWEucGluZ0NhY2hlO251bGwhPT1kJiZkLmRlbGV0ZShiKTtiPUhnKCk7YS5waW5nZWRMYW5lc3w9YS5zdXNwZW5kZWRMYW5lcyZjO1U9PT1hJiYoVyZjKT09PWMmJig0PT09Vnx8Mz09PVYmJihXJjYyOTE0NTYwKT09PVcmJjUwMD5PKCktamo/UWooYSwwKTp1anw9Yyk7TWooYSxiKX1mdW5jdGlvbiBsaihhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO251bGwhPT1jJiZjLmRlbGV0ZShiKTtiPTA7MD09PWImJihiPWEubW9kZSwwPT09KGImMik/Yj0xOjA9PT0oYiY0KT9iPTk5PT09ZWcoKT8xOjI6KDA9PT1HaiYmKEdqPXRqKSxiPVljKDYyOTE0NTYwJn5HaiksMD09PWImJihiPTQxOTQzMDQpKSk7Yz1IZygpO2E9S2ooYSxiKTtudWxsIT09YSYmKCRjKGEsYixjKSxNaihhLGMpKX12YXIgY2s7XG5jaz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9Yi5sYW5lcztpZihudWxsIT09YSlpZihhLm1lbW9pemVkUHJvcHMhPT1iLnBlbmRpbmdQcm9wc3x8Ti5jdXJyZW50KXVnPSEwO2Vsc2UgaWYoMCE9PShjJmQpKXVnPTAhPT0oYS5mbGFncyYxNjM4NCk/ITA6ITE7ZWxzZXt1Zz0hMTtzd2l0Y2goYi50YWcpe2Nhc2UgMzpyaShiKTtzaCgpO2JyZWFrO2Nhc2UgNTpnaChiKTticmVhaztjYXNlIDE6RmYoYi50eXBlKSYmSmYoYik7YnJlYWs7Y2FzZSA0OmVoKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7YnJlYWs7Y2FzZSAxMDpkPWIubWVtb2l6ZWRQcm9wcy52YWx1ZTt2YXIgZT1iLnR5cGUuX2NvbnRleHQ7SShtZyxlLl9jdXJyZW50VmFsdWUpO2UuX2N1cnJlbnRWYWx1ZT1kO2JyZWFrO2Nhc2UgMTM6aWYobnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSl7aWYoMCE9PShjJmIuY2hpbGQuY2hpbGRMYW5lcykpcmV0dXJuIHRpKGEsYixjKTtJKFAsUC5jdXJyZW50JjEpO2I9aGkoYSxiLGMpO3JldHVybiBudWxsIT09XG5iP2Iuc2libGluZzpudWxsfUkoUCxQLmN1cnJlbnQmMSk7YnJlYWs7Y2FzZSAxOTpkPTAhPT0oYyZiLmNoaWxkTGFuZXMpO2lmKDAhPT0oYS5mbGFncyY2NCkpe2lmKGQpcmV0dXJuIEFpKGEsYixjKTtiLmZsYWdzfD02NH1lPWIubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZSYmKGUucmVuZGVyaW5nPW51bGwsZS50YWlsPW51bGwsZS5sYXN0RWZmZWN0PW51bGwpO0koUCxQLmN1cnJlbnQpO2lmKGQpYnJlYWs7ZWxzZSByZXR1cm4gbnVsbDtjYXNlIDIzOmNhc2UgMjQ6cmV0dXJuIGIubGFuZXM9MCxtaShhLGIsYyl9cmV0dXJuIGhpKGEsYixjKX1lbHNlIHVnPSExO2IubGFuZXM9MDtzd2l0Y2goYi50YWcpe2Nhc2UgMjpkPWIudHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmZsYWdzfD0yKTthPWIucGVuZGluZ1Byb3BzO2U9RWYoYixNLmN1cnJlbnQpO3RnKGIsYyk7ZT1DaChudWxsLGIsZCxhLGUsYyk7Yi5mbGFnc3w9MTtpZihcIm9iamVjdFwiPT09XG50eXBlb2YgZSYmbnVsbCE9PWUmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLnJlbmRlciYmdm9pZCAwPT09ZS4kJHR5cGVvZil7Yi50YWc9MTtiLm1lbW9pemVkU3RhdGU9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7aWYoRmYoZCkpe3ZhciBmPSEwO0pmKGIpfWVsc2UgZj0hMTtiLm1lbW9pemVkU3RhdGU9bnVsbCE9PWUuc3RhdGUmJnZvaWQgMCE9PWUuc3RhdGU/ZS5zdGF0ZTpudWxsO3hnKGIpO3ZhciBnPWQuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiZHZyhiLGQsZyxhKTtlLnVwZGF0ZXI9S2c7Yi5zdGF0ZU5vZGU9ZTtlLl9yZWFjdEludGVybmFscz1iO09nKGIsZCxhLGMpO2I9cWkobnVsbCxiLGQsITAsZixjKX1lbHNlIGIudGFnPTAsZmkobnVsbCxiLGUsYyksYj1iLmNoaWxkO3JldHVybiBiO2Nhc2UgMTY6ZT1iLmVsZW1lbnRUeXBlO2E6e251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZmxhZ3N8PTIpO1xuYT1iLnBlbmRpbmdQcm9wcztmPWUuX2luaXQ7ZT1mKGUuX3BheWxvYWQpO2IudHlwZT1lO2Y9Yi50YWc9aGsoZSk7YT1sZyhlLGEpO3N3aXRjaChmKXtjYXNlIDA6Yj1saShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxOmI9cGkobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTE6Yj1naShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxNDpiPWlpKG51bGwsYixlLGxnKGUudHlwZSxhKSxkLGMpO2JyZWFrIGF9dGhyb3cgRXJyb3IoeSgzMDYsZSxcIlwiKSk7fXJldHVybiBiO2Nhc2UgMDpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6bGcoZCxlKSxsaShhLGIsZCxlLGMpO2Nhc2UgMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6bGcoZCxlKSxwaShhLGIsZCxlLGMpO2Nhc2UgMzpyaShiKTtkPWIudXBkYXRlUXVldWU7aWYobnVsbD09PWF8fG51bGw9PT1kKXRocm93IEVycm9yKHkoMjgyKSk7XG5kPWIucGVuZGluZ1Byb3BzO2U9Yi5tZW1vaXplZFN0YXRlO2U9bnVsbCE9PWU/ZS5lbGVtZW50Om51bGw7eWcoYSxiKTtDZyhiLGQsbnVsbCxjKTtkPWIubWVtb2l6ZWRTdGF0ZS5lbGVtZW50O2lmKGQ9PT1lKXNoKCksYj1oaShhLGIsYyk7ZWxzZXtlPWIuc3RhdGVOb2RlO2lmKGY9ZS5oeWRyYXRlKWtoPXJmKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8uZmlyc3RDaGlsZCksamg9YixmPWxoPSEwO2lmKGYpe2E9ZS5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhO2lmKG51bGwhPWEpZm9yKGU9MDtlPGEubGVuZ3RoO2UrPTIpZj1hW2VdLGYuX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnk9YVtlKzFdLHRoLnB1c2goZik7Yz1aZyhiLG51bGwsZCxjKTtmb3IoYi5jaGlsZD1jO2M7KWMuZmxhZ3M9Yy5mbGFncyYtM3wxMDI0LGM9Yy5zaWJsaW5nfWVsc2UgZmkoYSxiLGQsYyksc2goKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA1OnJldHVybiBnaChiKSxudWxsPT09YSYmXG5waChiKSxkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGY9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOm51bGwsZz1lLmNoaWxkcmVuLG5mKGQsZSk/Zz1udWxsOm51bGwhPT1mJiZuZihkLGYpJiYoYi5mbGFnc3w9MTYpLG9pKGEsYiksZmkoYSxiLGcsYyksYi5jaGlsZDtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZwaChiKSxudWxsO2Nhc2UgMTM6cmV0dXJuIHRpKGEsYixjKTtjYXNlIDQ6cmV0dXJuIGVoKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksZD1iLnBlbmRpbmdQcm9wcyxudWxsPT09YT9iLmNoaWxkPVlnKGIsbnVsbCxkLGMpOmZpKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6bGcoZCxlKSxnaShhLGIsZCxlLGMpO2Nhc2UgNzpyZXR1cm4gZmkoYSxiLGIucGVuZGluZ1Byb3BzLGMpLGIuY2hpbGQ7Y2FzZSA4OnJldHVybiBmaShhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sXG5jKSxiLmNoaWxkO2Nhc2UgMTI6cmV0dXJuIGZpKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTA6YTp7ZD1iLnR5cGUuX2NvbnRleHQ7ZT1iLnBlbmRpbmdQcm9wcztnPWIubWVtb2l6ZWRQcm9wcztmPWUudmFsdWU7dmFyIGg9Yi50eXBlLl9jb250ZXh0O0kobWcsaC5fY3VycmVudFZhbHVlKTtoLl9jdXJyZW50VmFsdWU9ZjtpZihudWxsIT09ZylpZihoPWcudmFsdWUsZj1IZShoLGYpPzA6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLl9jYWxjdWxhdGVDaGFuZ2VkQml0cz9kLl9jYWxjdWxhdGVDaGFuZ2VkQml0cyhoLGYpOjEwNzM3NDE4MjMpfDAsMD09PWYpe2lmKGcuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiYhTi5jdXJyZW50KXtiPWhpKGEsYixjKTticmVhayBhfX1lbHNlIGZvcihoPWIuY2hpbGQsbnVsbCE9PWgmJihoLnJldHVybj1iKTtudWxsIT09aDspe3ZhciBrPWguZGVwZW5kZW5jaWVzO2lmKG51bGwhPT1rKXtnPWguY2hpbGQ7Zm9yKHZhciBsPVxuay5maXJzdENvbnRleHQ7bnVsbCE9PWw7KXtpZihsLmNvbnRleHQ9PT1kJiYwIT09KGwub2JzZXJ2ZWRCaXRzJmYpKXsxPT09aC50YWcmJihsPXpnKC0xLGMmLWMpLGwudGFnPTIsQWcoaCxsKSk7aC5sYW5lc3w9YztsPWguYWx0ZXJuYXRlO251bGwhPT1sJiYobC5sYW5lc3w9Yyk7c2coaC5yZXR1cm4sYyk7ay5sYW5lc3w9YzticmVha31sPWwubmV4dH19ZWxzZSBnPTEwPT09aC50YWc/aC50eXBlPT09Yi50eXBlP251bGw6aC5jaGlsZDpoLmNoaWxkO2lmKG51bGwhPT1nKWcucmV0dXJuPWg7ZWxzZSBmb3IoZz1oO251bGwhPT1nOyl7aWYoZz09PWIpe2c9bnVsbDticmVha31oPWcuc2libGluZztpZihudWxsIT09aCl7aC5yZXR1cm49Zy5yZXR1cm47Zz1oO2JyZWFrfWc9Zy5yZXR1cm59aD1nfWZpKGEsYixlLmNoaWxkcmVuLGMpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDk6cmV0dXJuIGU9Yi50eXBlLGY9Yi5wZW5kaW5nUHJvcHMsZD1mLmNoaWxkcmVuLHRnKGIsYyksZT12ZyhlLFxuZi51bnN0YWJsZV9vYnNlcnZlZEJpdHMpLGQ9ZChlKSxiLmZsYWdzfD0xLGZpKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxNDpyZXR1cm4gZT1iLnR5cGUsZj1sZyhlLGIucGVuZGluZ1Byb3BzKSxmPWxnKGUudHlwZSxmKSxpaShhLGIsZSxmLGQsYyk7Y2FzZSAxNTpyZXR1cm4ga2koYSxiLGIudHlwZSxiLnBlbmRpbmdQcm9wcyxkLGMpO2Nhc2UgMTc6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmxnKGQsZSksbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5mbGFnc3w9MiksYi50YWc9MSxGZihkKT8oYT0hMCxKZihiKSk6YT0hMSx0ZyhiLGMpLE1nKGIsZCxlKSxPZyhiLGQsZSxjKSxxaShudWxsLGIsZCwhMCxhLGMpO2Nhc2UgMTk6cmV0dXJuIEFpKGEsYixjKTtjYXNlIDIzOnJldHVybiBtaShhLGIsYyk7Y2FzZSAyNDpyZXR1cm4gbWkoYSxiLGMpfXRocm93IEVycm9yKHkoMTU2LGIudGFnKSk7XG59O2Z1bmN0aW9uIGlrKGEsYixjLGQpe3RoaXMudGFnPWE7dGhpcy5rZXk9Yzt0aGlzLnNpYmxpbmc9dGhpcy5jaGlsZD10aGlzLnJldHVybj10aGlzLnN0YXRlTm9kZT10aGlzLnR5cGU9dGhpcy5lbGVtZW50VHlwZT1udWxsO3RoaXMuaW5kZXg9MDt0aGlzLnJlZj1udWxsO3RoaXMucGVuZGluZ1Byb3BzPWI7dGhpcy5kZXBlbmRlbmNpZXM9dGhpcy5tZW1vaXplZFN0YXRlPXRoaXMudXBkYXRlUXVldWU9dGhpcy5tZW1vaXplZFByb3BzPW51bGw7dGhpcy5tb2RlPWQ7dGhpcy5mbGFncz0wO3RoaXMubGFzdEVmZmVjdD10aGlzLmZpcnN0RWZmZWN0PXRoaXMubmV4dEVmZmVjdD1udWxsO3RoaXMuY2hpbGRMYW5lcz10aGlzLmxhbmVzPTA7dGhpcy5hbHRlcm5hdGU9bnVsbH1mdW5jdGlvbiBuaChhLGIsYyxkKXtyZXR1cm4gbmV3IGlrKGEsYixjLGQpfWZ1bmN0aW9uIGppKGEpe2E9YS5wcm90b3R5cGU7cmV0dXJuISghYXx8IWEuaXNSZWFjdENvbXBvbmVudCl9XG5mdW5jdGlvbiBoayhhKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gamkoYSk/MTowO2lmKHZvaWQgMCE9PWEmJm51bGwhPT1hKXthPWEuJCR0eXBlb2Y7aWYoYT09PUFhKXJldHVybiAxMTtpZihhPT09RGEpcmV0dXJuIDE0fXJldHVybiAyfVxuZnVuY3Rpb24gVGcoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsPT09Yz8oYz1uaChhLnRhZyxiLGEua2V5LGEubW9kZSksYy5lbGVtZW50VHlwZT1hLmVsZW1lbnRUeXBlLGMudHlwZT1hLnR5cGUsYy5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGUsYy5hbHRlcm5hdGU9YSxhLmFsdGVybmF0ZT1jKTooYy5wZW5kaW5nUHJvcHM9YixjLnR5cGU9YS50eXBlLGMuZmxhZ3M9MCxjLm5leHRFZmZlY3Q9bnVsbCxjLmZpcnN0RWZmZWN0PW51bGwsYy5sYXN0RWZmZWN0PW51bGwpO2MuY2hpbGRMYW5lcz1hLmNoaWxkTGFuZXM7Yy5sYW5lcz1hLmxhbmVzO2MuY2hpbGQ9YS5jaGlsZDtjLm1lbW9pemVkUHJvcHM9YS5tZW1vaXplZFByb3BzO2MubWVtb2l6ZWRTdGF0ZT1hLm1lbW9pemVkU3RhdGU7Yy51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlO2I9YS5kZXBlbmRlbmNpZXM7Yy5kZXBlbmRlbmNpZXM9bnVsbD09PWI/bnVsbDp7bGFuZXM6Yi5sYW5lcyxmaXJzdENvbnRleHQ6Yi5maXJzdENvbnRleHR9O1xuYy5zaWJsaW5nPWEuc2libGluZztjLmluZGV4PWEuaW5kZXg7Yy5yZWY9YS5yZWY7cmV0dXJuIGN9XG5mdW5jdGlvbiBWZyhhLGIsYyxkLGUsZil7dmFyIGc9MjtkPWE7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpamkoYSkmJihnPTEpO2Vsc2UgaWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKWc9NTtlbHNlIGE6c3dpdGNoKGEpe2Nhc2UgdWE6cmV0dXJuIFhnKGMuY2hpbGRyZW4sZSxmLGIpO2Nhc2UgSGE6Zz04O2V8PTE2O2JyZWFrO2Nhc2Ugd2E6Zz04O2V8PTE7YnJlYWs7Y2FzZSB4YTpyZXR1cm4gYT1uaCgxMixjLGIsZXw4KSxhLmVsZW1lbnRUeXBlPXhhLGEudHlwZT14YSxhLmxhbmVzPWYsYTtjYXNlIEJhOnJldHVybiBhPW5oKDEzLGMsYixlKSxhLnR5cGU9QmEsYS5lbGVtZW50VHlwZT1CYSxhLmxhbmVzPWYsYTtjYXNlIENhOnJldHVybiBhPW5oKDE5LGMsYixlKSxhLmVsZW1lbnRUeXBlPUNhLGEubGFuZXM9ZixhO2Nhc2UgSWE6cmV0dXJuIHZpKGMsZSxmLGIpO2Nhc2UgSmE6cmV0dXJuIGE9bmgoMjQsYyxiLGUpLGEuZWxlbWVudFR5cGU9SmEsYS5sYW5lcz1mLGE7ZGVmYXVsdDppZihcIm9iamVjdFwiPT09XG50eXBlb2YgYSYmbnVsbCE9PWEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgeWE6Zz0xMDticmVhayBhO2Nhc2UgemE6Zz05O2JyZWFrIGE7Y2FzZSBBYTpnPTExO2JyZWFrIGE7Y2FzZSBEYTpnPTE0O2JyZWFrIGE7Y2FzZSBFYTpnPTE2O2Q9bnVsbDticmVhayBhO2Nhc2UgRmE6Zz0yMjticmVhayBhfXRocm93IEVycm9yKHkoMTMwLG51bGw9PWE/YTp0eXBlb2YgYSxcIlwiKSk7fWI9bmgoZyxjLGIsZSk7Yi5lbGVtZW50VHlwZT1hO2IudHlwZT1kO2IubGFuZXM9ZjtyZXR1cm4gYn1mdW5jdGlvbiBYZyhhLGIsYyxkKXthPW5oKDcsYSxkLGIpO2EubGFuZXM9YztyZXR1cm4gYX1mdW5jdGlvbiB2aShhLGIsYyxkKXthPW5oKDIzLGEsZCxiKTthLmVsZW1lbnRUeXBlPUlhO2EubGFuZXM9YztyZXR1cm4gYX1mdW5jdGlvbiBVZyhhLGIsYyl7YT1uaCg2LGEsbnVsbCxiKTthLmxhbmVzPWM7cmV0dXJuIGF9XG5mdW5jdGlvbiBXZyhhLGIsYyl7Yj1uaCg0LG51bGwhPT1hLmNoaWxkcmVuP2EuY2hpbGRyZW46W10sYS5rZXksYik7Yi5sYW5lcz1jO2Iuc3RhdGVOb2RlPXtjb250YWluZXJJbmZvOmEuY29udGFpbmVySW5mbyxwZW5kaW5nQ2hpbGRyZW46bnVsbCxpbXBsZW1lbnRhdGlvbjphLmltcGxlbWVudGF0aW9ufTtyZXR1cm4gYn1cbmZ1bmN0aW9uIGprKGEsYixjKXt0aGlzLnRhZz1iO3RoaXMuY29udGFpbmVySW5mbz1hO3RoaXMuZmluaXNoZWRXb3JrPXRoaXMucGluZ0NhY2hlPXRoaXMuY3VycmVudD10aGlzLnBlbmRpbmdDaGlsZHJlbj1udWxsO3RoaXMudGltZW91dEhhbmRsZT0tMTt0aGlzLnBlbmRpbmdDb250ZXh0PXRoaXMuY29udGV4dD1udWxsO3RoaXMuaHlkcmF0ZT1jO3RoaXMuY2FsbGJhY2tOb2RlPW51bGw7dGhpcy5jYWxsYmFja1ByaW9yaXR5PTA7dGhpcy5ldmVudFRpbWVzPVpjKDApO3RoaXMuZXhwaXJhdGlvblRpbWVzPVpjKC0xKTt0aGlzLmVudGFuZ2xlZExhbmVzPXRoaXMuZmluaXNoZWRMYW5lcz10aGlzLm11dGFibGVSZWFkTGFuZXM9dGhpcy5leHBpcmVkTGFuZXM9dGhpcy5waW5nZWRMYW5lcz10aGlzLnN1c3BlbmRlZExhbmVzPXRoaXMucGVuZGluZ0xhbmVzPTA7dGhpcy5lbnRhbmdsZW1lbnRzPVpjKDApO3RoaXMubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YT1udWxsfVxuZnVuY3Rpb24ga2soYSxiLGMpe3ZhciBkPTM8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpudWxsO3JldHVybnskJHR5cGVvZjp0YSxrZXk6bnVsbD09ZD9udWxsOlwiXCIrZCxjaGlsZHJlbjphLGNvbnRhaW5lckluZm86YixpbXBsZW1lbnRhdGlvbjpjfX1cbmZ1bmN0aW9uIGxrKGEsYixjLGQpe3ZhciBlPWIuY3VycmVudCxmPUhnKCksZz1JZyhlKTthOmlmKGMpe2M9Yy5fcmVhY3RJbnRlcm5hbHM7Yjp7aWYoWmIoYykhPT1jfHwxIT09Yy50YWcpdGhyb3cgRXJyb3IoeSgxNzApKTt2YXIgaD1jO2Rve3N3aXRjaChoLnRhZyl7Y2FzZSAzOmg9aC5zdGF0ZU5vZGUuY29udGV4dDticmVhayBiO2Nhc2UgMTppZihGZihoLnR5cGUpKXtoPWguc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGJ9fWg9aC5yZXR1cm59d2hpbGUobnVsbCE9PWgpO3Rocm93IEVycm9yKHkoMTcxKSk7fWlmKDE9PT1jLnRhZyl7dmFyIGs9Yy50eXBlO2lmKEZmKGspKXtjPUlmKGMsayxoKTticmVhayBhfX1jPWh9ZWxzZSBjPUNmO251bGw9PT1iLmNvbnRleHQ/Yi5jb250ZXh0PWM6Yi5wZW5kaW5nQ29udGV4dD1jO2I9emcoZixnKTtiLnBheWxvYWQ9e2VsZW1lbnQ6YX07ZD12b2lkIDA9PT1kP251bGw6ZDtudWxsIT09XG5kJiYoYi5jYWxsYmFjaz1kKTtBZyhlLGIpO0pnKGUsZyxmKTtyZXR1cm4gZ31mdW5jdGlvbiBtayhhKXthPWEuY3VycmVudDtpZighYS5jaGlsZClyZXR1cm4gbnVsbDtzd2l0Y2goYS5jaGlsZC50YWcpe2Nhc2UgNTpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGU7ZGVmYXVsdDpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGV9fWZ1bmN0aW9uIG5rKGEsYil7YT1hLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWEmJm51bGwhPT1hLmRlaHlkcmF0ZWQpe3ZhciBjPWEucmV0cnlMYW5lO2EucmV0cnlMYW5lPTAhPT1jJiZjPGI/YzpifX1mdW5jdGlvbiBvayhhLGIpe25rKGEsYik7KGE9YS5hbHRlcm5hdGUpJiZuayhhLGIpfWZ1bmN0aW9uIHBrKCl7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBxayhhLGIsYyl7dmFyIGQ9bnVsbCE9YyYmbnVsbCE9Yy5oeWRyYXRpb25PcHRpb25zJiZjLmh5ZHJhdGlvbk9wdGlvbnMubXV0YWJsZVNvdXJjZXN8fG51bGw7Yz1uZXcgamsoYSxiLG51bGwhPWMmJiEwPT09Yy5oeWRyYXRlKTtiPW5oKDMsbnVsbCxudWxsLDI9PT1iPzc6MT09PWI/MzowKTtjLmN1cnJlbnQ9YjtiLnN0YXRlTm9kZT1jO3hnKGIpO2FbZmZdPWMuY3VycmVudDtjZig4PT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YSk7aWYoZClmb3IoYT0wO2E8ZC5sZW5ndGg7YSsrKXtiPWRbYV07dmFyIGU9Yi5fZ2V0VmVyc2lvbjtlPWUoYi5fc291cmNlKTtudWxsPT1jLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE/Yy5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhPVtiLGVdOmMubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YS5wdXNoKGIsZSl9dGhpcy5faW50ZXJuYWxSb290PWN9XG5xay5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEpe2xrKGEsdGhpcy5faW50ZXJuYWxSb290LG51bGwsbnVsbCl9O3FrLnByb3RvdHlwZS51bm1vdW50PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5faW50ZXJuYWxSb290LGI9YS5jb250YWluZXJJbmZvO2xrKG51bGwsYSxudWxsLGZ1bmN0aW9uKCl7YltmZl09bnVsbH0pfTtmdW5jdGlvbiByayhhKXtyZXR1cm4hKCFhfHwxIT09YS5ub2RlVHlwZSYmOSE9PWEubm9kZVR5cGUmJjExIT09YS5ub2RlVHlwZSYmKDghPT1hLm5vZGVUeXBlfHxcIiByZWFjdC1tb3VudC1wb2ludC11bnN0YWJsZSBcIiE9PWEubm9kZVZhbHVlKSl9XG5mdW5jdGlvbiBzayhhLGIpe2J8fChiPWE/OT09PWEubm9kZVR5cGU/YS5kb2N1bWVudEVsZW1lbnQ6YS5maXJzdENoaWxkOm51bGwsYj0hKCFifHwxIT09Yi5ub2RlVHlwZXx8IWIuaGFzQXR0cmlidXRlKFwiZGF0YS1yZWFjdHJvb3RcIikpKTtpZighYilmb3IodmFyIGM7Yz1hLmxhc3RDaGlsZDspYS5yZW1vdmVDaGlsZChjKTtyZXR1cm4gbmV3IHFrKGEsMCxiP3toeWRyYXRlOiEwfTp2b2lkIDApfVxuZnVuY3Rpb24gdGsoYSxiLGMsZCxlKXt2YXIgZj1jLl9yZWFjdFJvb3RDb250YWluZXI7aWYoZil7dmFyIGc9Zi5faW50ZXJuYWxSb290O2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaD1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1tayhnKTtoLmNhbGwoYSl9fWxrKGIsZyxhLGUpfWVsc2V7Zj1jLl9yZWFjdFJvb3RDb250YWluZXI9c2soYyxkKTtnPWYuX2ludGVybmFsUm9vdDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGs9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9bWsoZyk7ay5jYWxsKGEpfX1YaihmdW5jdGlvbigpe2xrKGIsZyxhLGUpfSl9cmV0dXJuIG1rKGcpfWVjPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPUhnKCk7SmcoYSw0LGIpO29rKGEsNCl9fTtmYz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1IZygpO0pnKGEsNjcxMDg4NjQsYik7b2soYSw2NzEwODg2NCl9fTtcbmdjPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPUhnKCksYz1JZyhhKTtKZyhhLGMsYik7b2soYSxjKX19O2hjPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGIoKX07XG55Yj1mdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOmFiKGEsYyk7Yj1jLm5hbWU7aWYoXCJyYWRpb1wiPT09Yy50eXBlJiZudWxsIT1iKXtmb3IoYz1hO2MucGFyZW50Tm9kZTspYz1jLnBhcmVudE5vZGU7Yz1jLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lPVwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZT1cInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1EYihkKTtpZighZSl0aHJvdyBFcnJvcih5KDkwKSk7V2EoZCk7YWIoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmliKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZmYihhLCEhYy5tdWx0aXBsZSxiLCExKX19O0diPVdqO1xuSGI9ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1YO1h8PTQ7dHJ5e3JldHVybiBnZyg5OCxhLmJpbmQobnVsbCxiLGMsZCxlKSl9ZmluYWxseXtYPWYsMD09PVgmJih3aigpLGlnKCkpfX07SWI9ZnVuY3Rpb24oKXswPT09KFgmNDkpJiYoVmooKSxPaigpKX07SmI9ZnVuY3Rpb24oYSxiKXt2YXIgYz1YO1h8PTI7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7WD1jLDA9PT1YJiYod2ooKSxpZygpKX19O2Z1bmN0aW9uIHVrKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7aWYoIXJrKGIpKXRocm93IEVycm9yKHkoMjAwKSk7cmV0dXJuIGtrKGEsYixudWxsLGMpfXZhciB2az17RXZlbnRzOltDYix1ZSxEYixFYixGYixPaix7Y3VycmVudDohMX1dfSx3az17ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6d2MsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNy4wLjJcIixyZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9O1xudmFyIHhrPXtidW5kbGVUeXBlOndrLmJ1bmRsZVR5cGUsdmVyc2lvbjp3ay52ZXJzaW9uLHJlbmRlcmVyUGFja2FnZU5hbWU6d2sucmVuZGVyZXJQYWNrYWdlTmFtZSxyZW5kZXJlckNvbmZpZzp3ay5yZW5kZXJlckNvbmZpZyxvdmVycmlkZUhvb2tTdGF0ZTpudWxsLG92ZXJyaWRlSG9va1N0YXRlRGVsZXRlUGF0aDpudWxsLG92ZXJyaWRlSG9va1N0YXRlUmVuYW1lUGF0aDpudWxsLG92ZXJyaWRlUHJvcHM6bnVsbCxvdmVycmlkZVByb3BzRGVsZXRlUGF0aDpudWxsLG92ZXJyaWRlUHJvcHNSZW5hbWVQYXRoOm51bGwsc2V0U3VzcGVuc2VIYW5kbGVyOm51bGwsc2NoZWR1bGVVcGRhdGU6bnVsbCxjdXJyZW50RGlzcGF0Y2hlclJlZjpyYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOmZ1bmN0aW9uKGEpe2E9Y2MoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOndrLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlfHxcbnBrLGZpbmRIb3N0SW5zdGFuY2VzRm9yUmVmcmVzaDpudWxsLHNjaGVkdWxlUmVmcmVzaDpudWxsLHNjaGVkdWxlUm9vdDpudWxsLHNldFJlZnJlc2hIYW5kbGVyOm51bGwsZ2V0Q3VycmVudEZpYmVyOm51bGx9O2lmKFwidW5kZWZpbmVkXCIhPT10eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKXt2YXIgeWs9X19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fO2lmKCF5ay5pc0Rpc2FibGVkJiZ5ay5zdXBwb3J0c0ZpYmVyKXRyeXtMZj15ay5pbmplY3QoeGspLE1mPXlrfWNhdGNoKGEpe319ZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRD12aztleHBvcnRzLmNyZWF0ZVBvcnRhbD11aztcbmV4cG9ydHMuZmluZERPTU5vZGU9ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFscztpZih2b2lkIDA9PT1iKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5yZW5kZXIpdGhyb3cgRXJyb3IoeSgxODgpKTt0aHJvdyBFcnJvcih5KDI2OCxPYmplY3Qua2V5cyhhKSkpO31hPWNjKGIpO2E9bnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZTtyZXR1cm4gYX07ZXhwb3J0cy5mbHVzaFN5bmM9ZnVuY3Rpb24oYSxiKXt2YXIgYz1YO2lmKDAhPT0oYyY0OCkpcmV0dXJuIGEoYik7WHw9MTt0cnl7aWYoYSlyZXR1cm4gZ2coOTksYS5iaW5kKG51bGwsYikpfWZpbmFsbHl7WD1jLGlnKCl9fTtleHBvcnRzLmh5ZHJhdGU9ZnVuY3Rpb24oYSxiLGMpe2lmKCFyayhiKSl0aHJvdyBFcnJvcih5KDIwMCkpO3JldHVybiB0ayhudWxsLGEsYiwhMCxjKX07XG5leHBvcnRzLnJlbmRlcj1mdW5jdGlvbihhLGIsYyl7aWYoIXJrKGIpKXRocm93IEVycm9yKHkoMjAwKSk7cmV0dXJuIHRrKG51bGwsYSxiLCExLGMpfTtleHBvcnRzLnVubW91bnRDb21wb25lbnRBdE5vZGU9ZnVuY3Rpb24oYSl7aWYoIXJrKGEpKXRocm93IEVycm9yKHkoNDApKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhYaihmdW5jdGlvbigpe3RrKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGw7YVtmZl09bnVsbH0pfSksITApOiExfTtleHBvcnRzLnVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzPVdqO2V4cG9ydHMudW5zdGFibGVfY3JlYXRlUG9ydGFsPWZ1bmN0aW9uKGEsYil7cmV0dXJuIHVrKGEsYiwyPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbCl9O1xuZXhwb3J0cy51bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihhLGIsYyxkKXtpZighcmsoYykpdGhyb3cgRXJyb3IoeSgyMDApKTtpZihudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFscyl0aHJvdyBFcnJvcih5KDM4KSk7cmV0dXJuIHRrKGEsYixjLCExLGQpfTtleHBvcnRzLnZlcnNpb249XCIxNy4wLjJcIjtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjAuMjAuMlxuICogc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbid1c2Ugc3RyaWN0Jzt2YXIgZixnLGgsaztpZihcIm9iamVjdFwiPT09dHlwZW9mIHBlcmZvcm1hbmNlJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgcGVyZm9ybWFuY2Uubm93KXt2YXIgbD1wZXJmb3JtYW5jZTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBsLm5vdygpfX1lbHNle3ZhciBwPURhdGUscT1wLm5vdygpO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIHAubm93KCktcX19XG5pZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8XCJmdW5jdGlvblwiIT09dHlwZW9mIE1lc3NhZ2VDaGFubmVsKXt2YXIgdD1udWxsLHU9bnVsbCx3PWZ1bmN0aW9uKCl7aWYobnVsbCE9PXQpdHJ5e3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7dCghMCxhKTt0PW51bGx9Y2F0Y2goYil7dGhyb3cgc2V0VGltZW91dCh3LDApLGI7fX07Zj1mdW5jdGlvbihhKXtudWxsIT09dD9zZXRUaW1lb3V0KGYsMCxhKToodD1hLHNldFRpbWVvdXQodywwKSl9O2c9ZnVuY3Rpb24oYSxiKXt1PXNldFRpbWVvdXQoYSxiKX07aD1mdW5jdGlvbigpe2NsZWFyVGltZW91dCh1KX07ZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZD1mdW5jdGlvbigpe3JldHVybiExfTtrPWV4cG9ydHMudW5zdGFibGVfZm9yY2VGcmFtZVJhdGU9ZnVuY3Rpb24oKXt9fWVsc2V7dmFyIHg9d2luZG93LnNldFRpbWVvdXQseT13aW5kb3cuY2xlYXJUaW1lb3V0O2lmKFwidW5kZWZpbmVkXCIhPT10eXBlb2YgY29uc29sZSl7dmFyIHo9XG53aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWU7XCJmdW5jdGlvblwiIT09dHlwZW9mIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUmJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IHJlcXVlc3RBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9yZWFjdGpzLm9yZy9saW5rL3JlYWN0LXBvbHlmaWxsc1wiKTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgeiYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgY2FuY2VsQW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vcmVhY3Rqcy5vcmcvbGluay9yZWFjdC1wb2x5ZmlsbHNcIil9dmFyIEE9ITEsQj1udWxsLEM9LTEsRD01LEU9MDtleHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPWZ1bmN0aW9uKCl7cmV0dXJuIGV4cG9ydHMudW5zdGFibGVfbm93KCk+PVxuRX07az1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZT1mdW5jdGlvbihhKXswPmF8fDEyNTxhP2NvbnNvbGUuZXJyb3IoXCJmb3JjZUZyYW1lUmF0ZSB0YWtlcyBhIHBvc2l0aXZlIGludCBiZXR3ZWVuIDAgYW5kIDEyNSwgZm9yY2luZyBmcmFtZSByYXRlcyBoaWdoZXIgdGhhbiAxMjUgZnBzIGlzIG5vdCBzdXBwb3J0ZWRcIik6RD0wPGE/TWF0aC5mbG9vcigxRTMvYSk6NX07dmFyIEY9bmV3IE1lc3NhZ2VDaGFubmVsLEc9Ri5wb3J0MjtGLnBvcnQxLm9ubWVzc2FnZT1mdW5jdGlvbigpe2lmKG51bGwhPT1CKXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO0U9YStEO3RyeXtCKCEwLGEpP0cucG9zdE1lc3NhZ2UobnVsbCk6KEE9ITEsQj1udWxsKX1jYXRjaChiKXt0aHJvdyBHLnBvc3RNZXNzYWdlKG51bGwpLGI7fX1lbHNlIEE9ITF9O2Y9ZnVuY3Rpb24oYSl7Qj1hO0F8fChBPSEwLEcucG9zdE1lc3NhZ2UobnVsbCkpfTtnPWZ1bmN0aW9uKGEsYil7Qz1cbngoZnVuY3Rpb24oKXthKGV4cG9ydHMudW5zdGFibGVfbm93KCkpfSxiKX07aD1mdW5jdGlvbigpe3koQyk7Qz0tMX19ZnVuY3Rpb24gSChhLGIpe3ZhciBjPWEubGVuZ3RoO2EucHVzaChiKTthOmZvcig7Oyl7dmFyIGQ9Yy0xPj4+MSxlPWFbZF07aWYodm9pZCAwIT09ZSYmMDxJKGUsYikpYVtkXT1iLGFbY109ZSxjPWQ7ZWxzZSBicmVhayBhfX1mdW5jdGlvbiBKKGEpe2E9YVswXTtyZXR1cm4gdm9pZCAwPT09YT9udWxsOmF9XG5mdW5jdGlvbiBLKGEpe3ZhciBiPWFbMF07aWYodm9pZCAwIT09Yil7dmFyIGM9YS5wb3AoKTtpZihjIT09Yil7YVswXT1jO2E6Zm9yKHZhciBkPTAsZT1hLmxlbmd0aDtkPGU7KXt2YXIgbT0yKihkKzEpLTEsbj1hW21dLHY9bSsxLHI9YVt2XTtpZih2b2lkIDAhPT1uJiYwPkkobixjKSl2b2lkIDAhPT1yJiYwPkkocixuKT8oYVtkXT1yLGFbdl09YyxkPXYpOihhW2RdPW4sYVttXT1jLGQ9bSk7ZWxzZSBpZih2b2lkIDAhPT1yJiYwPkkocixjKSlhW2RdPXIsYVt2XT1jLGQ9djtlbHNlIGJyZWFrIGF9fXJldHVybiBifXJldHVybiBudWxsfWZ1bmN0aW9uIEkoYSxiKXt2YXIgYz1hLnNvcnRJbmRleC1iLnNvcnRJbmRleDtyZXR1cm4gMCE9PWM/YzphLmlkLWIuaWR9dmFyIEw9W10sTT1bXSxOPTEsTz1udWxsLFA9MyxRPSExLFI9ITEsUz0hMTtcbmZ1bmN0aW9uIFQoYSl7Zm9yKHZhciBiPUooTSk7bnVsbCE9PWI7KXtpZihudWxsPT09Yi5jYWxsYmFjaylLKE0pO2Vsc2UgaWYoYi5zdGFydFRpbWU8PWEpSyhNKSxiLnNvcnRJbmRleD1iLmV4cGlyYXRpb25UaW1lLEgoTCxiKTtlbHNlIGJyZWFrO2I9SihNKX19ZnVuY3Rpb24gVShhKXtTPSExO1QoYSk7aWYoIVIpaWYobnVsbCE9PUooTCkpUj0hMCxmKFYpO2Vsc2V7dmFyIGI9SihNKTtudWxsIT09YiYmZyhVLGIuc3RhcnRUaW1lLWEpfX1cbmZ1bmN0aW9uIFYoYSxiKXtSPSExO1MmJihTPSExLGgoKSk7UT0hMDt2YXIgYz1QO3RyeXtUKGIpO2ZvcihPPUooTCk7bnVsbCE9PU8mJighKE8uZXhwaXJhdGlvblRpbWU+Yil8fGEmJiFleHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkKCkpOyl7dmFyIGQ9Ty5jYWxsYmFjaztpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7Ty5jYWxsYmFjaz1udWxsO1A9Ty5wcmlvcml0eUxldmVsO3ZhciBlPWQoTy5leHBpcmF0aW9uVGltZTw9Yik7Yj1leHBvcnRzLnVuc3RhYmxlX25vdygpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlP08uY2FsbGJhY2s9ZTpPPT09SihMKSYmSyhMKTtUKGIpfWVsc2UgSyhMKTtPPUooTCl9aWYobnVsbCE9PU8pdmFyIG09ITA7ZWxzZXt2YXIgbj1KKE0pO251bGwhPT1uJiZnKFUsbi5zdGFydFRpbWUtYik7bT0hMX1yZXR1cm4gbX1maW5hbGx5e089bnVsbCxQPWMsUT0hMX19dmFyIFc9aztleHBvcnRzLnVuc3RhYmxlX0lkbGVQcmlvcml0eT01O1xuZXhwb3J0cy51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eT0xO2V4cG9ydHMudW5zdGFibGVfTG93UHJpb3JpdHk9NDtleHBvcnRzLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5PTM7ZXhwb3J0cy51bnN0YWJsZV9Qcm9maWxpbmc9bnVsbDtleHBvcnRzLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5PTI7ZXhwb3J0cy51bnN0YWJsZV9jYW5jZWxDYWxsYmFjaz1mdW5jdGlvbihhKXthLmNhbGxiYWNrPW51bGx9O2V4cG9ydHMudW5zdGFibGVfY29udGludWVFeGVjdXRpb249ZnVuY3Rpb24oKXtSfHxRfHwoUj0hMCxmKFYpKX07ZXhwb3J0cy51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbD1mdW5jdGlvbigpe3JldHVybiBQfTtleHBvcnRzLnVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIEooTCl9O1xuZXhwb3J0cy51bnN0YWJsZV9uZXh0PWZ1bmN0aW9uKGEpe3N3aXRjaChQKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzp2YXIgYj0zO2JyZWFrO2RlZmF1bHQ6Yj1QfXZhciBjPVA7UD1iO3RyeXtyZXR1cm4gYSgpfWZpbmFsbHl7UD1jfX07ZXhwb3J0cy51bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbj1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9yZXF1ZXN0UGFpbnQ9VztleHBvcnRzLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eT1mdW5jdGlvbihhLGIpe3N3aXRjaChhKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzpjYXNlIDQ6Y2FzZSA1OmJyZWFrO2RlZmF1bHQ6YT0zfXZhciBjPVA7UD1hO3RyeXtyZXR1cm4gYigpfWZpbmFsbHl7UD1jfX07XG5leHBvcnRzLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWV4cG9ydHMudW5zdGFibGVfbm93KCk7XCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yz8oYz1jLmRlbGF5LGM9XCJudW1iZXJcIj09PXR5cGVvZiBjJiYwPGM/ZCtjOmQpOmM9ZDtzd2l0Y2goYSl7Y2FzZSAxOnZhciBlPS0xO2JyZWFrO2Nhc2UgMjplPTI1MDticmVhaztjYXNlIDU6ZT0xMDczNzQxODIzO2JyZWFrO2Nhc2UgNDplPTFFNDticmVhaztkZWZhdWx0OmU9NUUzfWU9YytlO2E9e2lkOk4rKyxjYWxsYmFjazpiLHByaW9yaXR5TGV2ZWw6YSxzdGFydFRpbWU6YyxleHBpcmF0aW9uVGltZTplLHNvcnRJbmRleDotMX07Yz5kPyhhLnNvcnRJbmRleD1jLEgoTSxhKSxudWxsPT09SihMKSYmYT09PUooTSkmJihTP2goKTpTPSEwLGcoVSxjLWQpKSk6KGEuc29ydEluZGV4PWUsSChMLGEpLFJ8fFF8fChSPSEwLGYoVikpKTtyZXR1cm4gYX07XG5leHBvcnRzLnVuc3RhYmxlX3dyYXBDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj1QO3JldHVybiBmdW5jdGlvbigpe3ZhciBjPVA7UD1iO3RyeXtyZXR1cm4gYS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZmluYWxseXtQPWN9fX07XG4iLCJpbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuY29uc3QgX2V4Y2x1ZGVkID0gW1wiY2xhc3NOYW1lXCIsIFwiY29tcG9uZW50XCIsIFwiZWxldmF0aW9uXCIsIFwic3F1YXJlXCIsIFwidmFyaWFudFwiXTtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcbmltcG9ydCB7IGNoYWluUHJvcFR5cGVzLCBpbnRlZ2VyUHJvcFR5cGUgfSBmcm9tICdAbXVpL3V0aWxzJztcbmltcG9ydCB7IHVuc3RhYmxlX2NvbXBvc2VDbGFzc2VzIGFzIGNvbXBvc2VDbGFzc2VzIH0gZnJvbSAnQG11aS9iYXNlJztcbmltcG9ydCB7IGFscGhhIH0gZnJvbSAnQG11aS9zeXN0ZW0nO1xuaW1wb3J0IHN0eWxlZCBmcm9tICcuLi9zdHlsZXMvc3R5bGVkJztcbmltcG9ydCB1c2VUaGVtZVByb3BzIGZyb20gJy4uL3N0eWxlcy91c2VUaGVtZVByb3BzJztcbmltcG9ydCB1c2VUaGVtZSBmcm9tICcuLi9zdHlsZXMvdXNlVGhlbWUnO1xuaW1wb3J0IHsgZ2V0UGFwZXJVdGlsaXR5Q2xhc3MgfSBmcm9tICcuL3BhcGVyQ2xhc3Nlcyc7IC8vIEluc3BpcmVkIGJ5IGh0dHBzOi8vZ2l0aHViLmNvbS9tYXRlcmlhbC1jb21wb25lbnRzL21hdGVyaWFsLWNvbXBvbmVudHMtaW9zL2Jsb2IvYmNhMzYxMDc0MDU1OTRkNWI3YjE2MjY1YTViMGVkNjk4Zjg1YTVlZS9jb21wb25lbnRzL0VsZXZhdGlvbi9zcmMvVUlDb2xvciUyQk1hdGVyaWFsRWxldmF0aW9uLm0jTDYxXG5cbmltcG9ydCB7IGpzeCBhcyBfanN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5cbmNvbnN0IGdldE92ZXJsYXlBbHBoYSA9IGVsZXZhdGlvbiA9PiB7XG4gIGxldCBhbHBoYVZhbHVlO1xuXG4gIGlmIChlbGV2YXRpb24gPCAxKSB7XG4gICAgYWxwaGFWYWx1ZSA9IDUuMTE5MTYgKiBlbGV2YXRpb24gKiogMjtcbiAgfSBlbHNlIHtcbiAgICBhbHBoYVZhbHVlID0gNC41ICogTWF0aC5sb2coZWxldmF0aW9uICsgMSkgKyAyO1xuICB9XG5cbiAgcmV0dXJuIChhbHBoYVZhbHVlIC8gMTAwKS50b0ZpeGVkKDIpO1xufTtcblxuY29uc3QgdXNlVXRpbGl0eUNsYXNzZXMgPSBvd25lclN0YXRlID0+IHtcbiAgY29uc3Qge1xuICAgIHNxdWFyZSxcbiAgICBlbGV2YXRpb24sXG4gICAgdmFyaWFudCxcbiAgICBjbGFzc2VzXG4gIH0gPSBvd25lclN0YXRlO1xuICBjb25zdCBzbG90cyA9IHtcbiAgICByb290OiBbJ3Jvb3QnLCB2YXJpYW50LCAhc3F1YXJlICYmICdyb3VuZGVkJywgdmFyaWFudCA9PT0gJ2VsZXZhdGlvbicgJiYgYGVsZXZhdGlvbiR7ZWxldmF0aW9ufWBdXG4gIH07XG4gIHJldHVybiBjb21wb3NlQ2xhc3NlcyhzbG90cywgZ2V0UGFwZXJVdGlsaXR5Q2xhc3MsIGNsYXNzZXMpO1xufTtcblxuY29uc3QgUGFwZXJSb290ID0gc3R5bGVkKCdkaXYnLCB7XG4gIG5hbWU6ICdNdWlQYXBlcicsXG4gIHNsb3Q6ICdSb290JyxcbiAgb3ZlcnJpZGVzUmVzb2x2ZXI6IChwcm9wcywgc3R5bGVzKSA9PiB7XG4gICAgY29uc3Qge1xuICAgICAgb3duZXJTdGF0ZVxuICAgIH0gPSBwcm9wcztcbiAgICByZXR1cm4gW3N0eWxlcy5yb290LCBzdHlsZXNbb3duZXJTdGF0ZS52YXJpYW50XSwgIW93bmVyU3RhdGUuc3F1YXJlICYmIHN0eWxlcy5yb3VuZGVkLCBvd25lclN0YXRlLnZhcmlhbnQgPT09ICdlbGV2YXRpb24nICYmIHN0eWxlc1tgZWxldmF0aW9uJHtvd25lclN0YXRlLmVsZXZhdGlvbn1gXV07XG4gIH1cbn0pKCh7XG4gIHRoZW1lLFxuICBvd25lclN0YXRlXG59KSA9PiBfZXh0ZW5kcyh7XG4gIGJhY2tncm91bmRDb2xvcjogdGhlbWUucGFsZXR0ZS5iYWNrZ3JvdW5kLnBhcGVyLFxuICBjb2xvcjogdGhlbWUucGFsZXR0ZS50ZXh0LnByaW1hcnksXG4gIHRyYW5zaXRpb246IHRoZW1lLnRyYW5zaXRpb25zLmNyZWF0ZSgnYm94LXNoYWRvdycpXG59LCAhb3duZXJTdGF0ZS5zcXVhcmUgJiYge1xuICBib3JkZXJSYWRpdXM6IHRoZW1lLnNoYXBlLmJvcmRlclJhZGl1c1xufSwgb3duZXJTdGF0ZS52YXJpYW50ID09PSAnb3V0bGluZWQnICYmIHtcbiAgYm9yZGVyOiBgMXB4IHNvbGlkICR7dGhlbWUucGFsZXR0ZS5kaXZpZGVyfWBcbn0sIG93bmVyU3RhdGUudmFyaWFudCA9PT0gJ2VsZXZhdGlvbicgJiYgX2V4dGVuZHMoe1xuICBib3hTaGFkb3c6IHRoZW1lLnNoYWRvd3Nbb3duZXJTdGF0ZS5lbGV2YXRpb25dXG59LCB0aGVtZS5wYWxldHRlLm1vZGUgPT09ICdkYXJrJyAmJiB7XG4gIGJhY2tncm91bmRJbWFnZTogYGxpbmVhci1ncmFkaWVudCgke2FscGhhKCcjZmZmJywgZ2V0T3ZlcmxheUFscGhhKG93bmVyU3RhdGUuZWxldmF0aW9uKSl9LCAke2FscGhhKCcjZmZmJywgZ2V0T3ZlcmxheUFscGhhKG93bmVyU3RhdGUuZWxldmF0aW9uKSl9KWBcbn0pKSk7XG5jb25zdCBQYXBlciA9IC8qI19fUFVSRV9fKi9SZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIFBhcGVyKGluUHJvcHMsIHJlZikge1xuICBjb25zdCBwcm9wcyA9IHVzZVRoZW1lUHJvcHMoe1xuICAgIHByb3BzOiBpblByb3BzLFxuICAgIG5hbWU6ICdNdWlQYXBlcidcbiAgfSk7XG5cbiAgY29uc3Qge1xuICAgIGNsYXNzTmFtZSxcbiAgICBjb21wb25lbnQgPSAnZGl2JyxcbiAgICBlbGV2YXRpb24gPSAxLFxuICAgIHNxdWFyZSA9IGZhbHNlLFxuICAgIHZhcmlhbnQgPSAnZWxldmF0aW9uJ1xuICB9ID0gcHJvcHMsXG4gICAgICAgIG90aGVyID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UocHJvcHMsIF9leGNsdWRlZCk7XG5cbiAgY29uc3Qgb3duZXJTdGF0ZSA9IF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgIGNvbXBvbmVudCxcbiAgICBlbGV2YXRpb24sXG4gICAgc3F1YXJlLFxuICAgIHZhcmlhbnRcbiAgfSk7XG5cbiAgY29uc3QgY2xhc3NlcyA9IHVzZVV0aWxpdHlDbGFzc2VzKG93bmVyU3RhdGUpO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWhvb2tzL3J1bGVzLW9mLWhvb2tzXG4gICAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuXG4gICAgaWYgKHRoZW1lLnNoYWRvd3NbZWxldmF0aW9uXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFtgTVVJOiBUaGUgZWxldmF0aW9uIHByb3ZpZGVkIDxQYXBlciBlbGV2YXRpb249eyR7ZWxldmF0aW9ufX0+IGlzIG5vdCBhdmFpbGFibGUgaW4gdGhlIHRoZW1lLmAsIGBQbGVhc2UgbWFrZSBzdXJlIHRoYXQgXFxgdGhlbWUuc2hhZG93c1ske2VsZXZhdGlvbn1dXFxgIGlzIGRlZmluZWQuYF0uam9pbignXFxuJykpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiAvKiNfX1BVUkVfXyovX2pzeChQYXBlclJvb3QsIF9leHRlbmRzKHtcbiAgICBhczogY29tcG9uZW50LFxuICAgIG93bmVyU3RhdGU6IG93bmVyU3RhdGUsXG4gICAgY2xhc3NOYW1lOiBjbHN4KGNsYXNzZXMucm9vdCwgY2xhc3NOYW1lKSxcbiAgICByZWY6IHJlZlxuICB9LCBvdGhlcikpO1xufSk7XG5wcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBQYXBlci5wcm9wVHlwZXNcbi8qIHJlbW92ZS1wcm9wdHlwZXMgKi9cbj0ge1xuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBXYXJuaW5nIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIHwgVGhlc2UgUHJvcFR5cGVzIGFyZSBnZW5lcmF0ZWQgZnJvbSB0aGUgVHlwZVNjcmlwdCB0eXBlIGRlZmluaXRpb25zIHxcbiAgLy8gfCAgICAgVG8gdXBkYXRlIHRoZW0gZWRpdCB0aGUgZC50cyBmaWxlIGFuZCBydW4gXCJ5YXJuIHByb3B0eXBlc1wiICAgICB8XG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICAvKipcbiAgICogVGhlIGNvbnRlbnQgb2YgdGhlIGNvbXBvbmVudC5cbiAgICovXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcblxuICAvKipcbiAgICogT3ZlcnJpZGUgb3IgZXh0ZW5kIHRoZSBzdHlsZXMgYXBwbGllZCB0byB0aGUgY29tcG9uZW50LlxuICAgKi9cbiAgY2xhc3NlczogUHJvcFR5cGVzLm9iamVjdCxcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuXG4gIC8qKlxuICAgKiBUaGUgY29tcG9uZW50IHVzZWQgZm9yIHRoZSByb290IG5vZGUuXG4gICAqIEVpdGhlciBhIHN0cmluZyB0byB1c2UgYSBIVE1MIGVsZW1lbnQgb3IgYSBjb21wb25lbnQuXG4gICAqL1xuICBjb21wb25lbnQ6IFByb3BUeXBlcy5lbGVtZW50VHlwZSxcblxuICAvKipcbiAgICogU2hhZG93IGRlcHRoLCBjb3JyZXNwb25kcyB0byBgZHBgIGluIHRoZSBzcGVjLlxuICAgKiBJdCBhY2NlcHRzIHZhbHVlcyBiZXR3ZWVuIDAgYW5kIDI0IGluY2x1c2l2ZS5cbiAgICogQGRlZmF1bHQgMVxuICAgKi9cbiAgZWxldmF0aW9uOiBjaGFpblByb3BUeXBlcyhpbnRlZ2VyUHJvcFR5cGUsIHByb3BzID0+IHtcbiAgICBjb25zdCB7XG4gICAgICBlbGV2YXRpb24sXG4gICAgICB2YXJpYW50XG4gICAgfSA9IHByb3BzO1xuXG4gICAgaWYgKGVsZXZhdGlvbiA+IDAgJiYgdmFyaWFudCA9PT0gJ291dGxpbmVkJykge1xuICAgICAgcmV0dXJuIG5ldyBFcnJvcihgTVVJOiBDb21iaW5pbmcgXFxgZWxldmF0aW9uPXske2VsZXZhdGlvbn19XFxgIHdpdGggXFxgdmFyaWFudD1cIiR7dmFyaWFudH1cIlxcYCBoYXMgbm8gZWZmZWN0LiBFaXRoZXIgdXNlIFxcYGVsZXZhdGlvbj17MH1cXGAgb3IgdXNlIGEgZGlmZmVyZW50IFxcYHZhcmlhbnRcXGAuYCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG51bGw7XG4gIH0pLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHJvdW5kZWQgY29ybmVycyBhcmUgZGlzYWJsZWQuXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBzcXVhcmU6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBUaGUgc3lzdGVtIHByb3AgdGhhdCBhbGxvd3MgZGVmaW5pbmcgc3lzdGVtIG92ZXJyaWRlcyBhcyB3ZWxsIGFzIGFkZGl0aW9uYWwgQ1NTIHN0eWxlcy5cbiAgICovXG4gIHN4OiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm9iamVjdCwgUHJvcFR5cGVzLmJvb2xdKSksIFByb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMub2JqZWN0XSksXG5cbiAgLyoqXG4gICAqIFRoZSB2YXJpYW50IHRvIHVzZS5cbiAgICogQGRlZmF1bHQgJ2VsZXZhdGlvbidcbiAgICovXG4gIHZhcmlhbnQ6IFByb3BUeXBlc1xuICAvKiBAdHlwZXNjcmlwdC10by1wcm9wdHlwZXMtaWdub3JlICovXG4gIC5vbmVPZlR5cGUoW1Byb3BUeXBlcy5vbmVPZihbJ2VsZXZhdGlvbicsICdvdXRsaW5lZCddKSwgUHJvcFR5cGVzLnN0cmluZ10pXG59IDogdm9pZCAwO1xuZXhwb3J0IGRlZmF1bHQgUGFwZXI7IiwiaW1wb3J0IHsgY3JlYXRlVW5hcnlTcGFjaW5nIH0gZnJvbSAnLi4vc3BhY2luZyc7XG5cbi8qIHRzbGludDplbmFibGU6dW5pZmllZC1zaWduYXR1cmVzICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVTcGFjaW5nKHNwYWNpbmdJbnB1dCA9IDgpIHtcbiAgLy8gQWxyZWFkeSB0cmFuc2Zvcm1lZC5cbiAgaWYgKHNwYWNpbmdJbnB1dC5tdWkpIHtcbiAgICByZXR1cm4gc3BhY2luZ0lucHV0O1xuICB9IC8vIE1hdGVyaWFsIERlc2lnbiBsYXlvdXRzIGFyZSB2aXN1YWxseSBiYWxhbmNlZC4gTW9zdCBtZWFzdXJlbWVudHMgYWxpZ24gdG8gYW4gOGRwIGdyaWQsIHdoaWNoIGFsaWducyBib3RoIHNwYWNpbmcgYW5kIHRoZSBvdmVyYWxsIGxheW91dC5cbiAgLy8gU21hbGxlciBjb21wb25lbnRzLCBzdWNoIGFzIGljb25zLCBjYW4gYWxpZ24gdG8gYSA0ZHAgZ3JpZC5cbiAgLy8gaHR0cHM6Ly9tYXRlcmlhbC5pby9kZXNpZ24vbGF5b3V0L3VuZGVyc3RhbmRpbmctbGF5b3V0Lmh0bWwjdXNhZ2VcblxuXG4gIGNvbnN0IHRyYW5zZm9ybSA9IGNyZWF0ZVVuYXJ5U3BhY2luZyh7XG4gICAgc3BhY2luZzogc3BhY2luZ0lucHV0XG4gIH0pO1xuXG4gIGNvbnN0IHNwYWNpbmcgPSAoLi4uYXJnc0lucHV0KSA9PiB7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIGlmICghKGFyZ3NJbnB1dC5sZW5ndGggPD0gNCkpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihgTVVJOiBUb28gbWFueSBhcmd1bWVudHMgcHJvdmlkZWQsIGV4cGVjdGVkIGJldHdlZW4gMCBhbmQgNCwgZ290ICR7YXJnc0lucHV0Lmxlbmd0aH1gKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBhcmdzID0gYXJnc0lucHV0Lmxlbmd0aCA9PT0gMCA/IFsxXSA6IGFyZ3NJbnB1dDtcbiAgICByZXR1cm4gYXJncy5tYXAoYXJndW1lbnQgPT4ge1xuICAgICAgY29uc3Qgb3V0cHV0ID0gdHJhbnNmb3JtKGFyZ3VtZW50KTtcbiAgICAgIHJldHVybiB0eXBlb2Ygb3V0cHV0ID09PSAnbnVtYmVyJyA/IGAke291dHB1dH1weGAgOiBvdXRwdXQ7XG4gICAgfSkuam9pbignICcpO1xuICB9O1xuXG4gIHNwYWNpbmcubXVpID0gdHJ1ZTtcbiAgcmV0dXJuIHNwYWNpbmc7XG59IiwiaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmNvbnN0IF9leGNsdWRlZCA9IFtcInZhbHVlc1wiLCBcInVuaXRcIiwgXCJzdGVwXCJdO1xuLy8gU29ydGVkIEFTQyBieSBzaXplLiBUaGF0J3MgaW1wb3J0YW50LlxuLy8gSXQgY2FuJ3QgYmUgY29uZmlndXJlZCBhcyBpdCdzIHVzZWQgc3RhdGljYWxseSBmb3IgcHJvcFR5cGVzLlxuZXhwb3J0IGNvbnN0IGJyZWFrcG9pbnRLZXlzID0gWyd4cycsICdzbScsICdtZCcsICdsZycsICd4bCddO1xuXG5jb25zdCBzb3J0QnJlYWtwb2ludHNWYWx1ZXMgPSB2YWx1ZXMgPT4ge1xuICBjb25zdCBicmVha3BvaW50c0FzQXJyYXkgPSBPYmplY3Qua2V5cyh2YWx1ZXMpLm1hcChrZXkgPT4gKHtcbiAgICBrZXksXG4gICAgdmFsOiB2YWx1ZXNba2V5XVxuICB9KSkgfHwgW107IC8vIFNvcnQgaW4gYXNjZW5kaW5nIG9yZGVyXG5cbiAgYnJlYWtwb2ludHNBc0FycmF5LnNvcnQoKGJyZWFrcG9pbnQxLCBicmVha3BvaW50MikgPT4gYnJlYWtwb2ludDEudmFsIC0gYnJlYWtwb2ludDIudmFsKTtcbiAgcmV0dXJuIGJyZWFrcG9pbnRzQXNBcnJheS5yZWR1Y2UoKGFjYywgb2JqKSA9PiB7XG4gICAgcmV0dXJuIF9leHRlbmRzKHt9LCBhY2MsIHtcbiAgICAgIFtvYmoua2V5XTogb2JqLnZhbFxuICAgIH0pO1xuICB9LCB7fSk7XG59OyAvLyBLZWVwIGluIG1pbmQgdGhhdCBAbWVkaWEgaXMgaW5jbHVzaXZlIGJ5IHRoZSBDU1Mgc3BlY2lmaWNhdGlvbi5cblxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVCcmVha3BvaW50cyhicmVha3BvaW50cykge1xuICBjb25zdCB7XG4gICAgLy8gVGhlIGJyZWFrcG9pbnQgKipzdGFydCoqIGF0IHRoaXMgdmFsdWUuXG4gICAgLy8gRm9yIGluc3RhbmNlIHdpdGggdGhlIGZpcnN0IGJyZWFrcG9pbnQgeHM6IFt4cywgc20pLlxuICAgIHZhbHVlcyA9IHtcbiAgICAgIHhzOiAwLFxuICAgICAgLy8gcGhvbmVcbiAgICAgIHNtOiA2MDAsXG4gICAgICAvLyB0YWJsZXRcbiAgICAgIG1kOiA5MDAsXG4gICAgICAvLyBzbWFsbCBsYXB0b3BcbiAgICAgIGxnOiAxMjAwLFxuICAgICAgLy8gZGVza3RvcFxuICAgICAgeGw6IDE1MzYgLy8gbGFyZ2Ugc2NyZWVuXG5cbiAgICB9LFxuICAgIHVuaXQgPSAncHgnLFxuICAgIHN0ZXAgPSA1XG4gIH0gPSBicmVha3BvaW50cyxcbiAgICAgICAgb3RoZXIgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShicmVha3BvaW50cywgX2V4Y2x1ZGVkKTtcblxuICBjb25zdCBzb3J0ZWRWYWx1ZXMgPSBzb3J0QnJlYWtwb2ludHNWYWx1ZXModmFsdWVzKTtcbiAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKHNvcnRlZFZhbHVlcyk7XG5cbiAgZnVuY3Rpb24gdXAoa2V5KSB7XG4gICAgY29uc3QgdmFsdWUgPSB0eXBlb2YgdmFsdWVzW2tleV0gPT09ICdudW1iZXInID8gdmFsdWVzW2tleV0gOiBrZXk7XG4gICAgcmV0dXJuIGBAbWVkaWEgKG1pbi13aWR0aDoke3ZhbHVlfSR7dW5pdH0pYDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGRvd24oa2V5KSB7XG4gICAgY29uc3QgdmFsdWUgPSB0eXBlb2YgdmFsdWVzW2tleV0gPT09ICdudW1iZXInID8gdmFsdWVzW2tleV0gOiBrZXk7XG4gICAgcmV0dXJuIGBAbWVkaWEgKG1heC13aWR0aDoke3ZhbHVlIC0gc3RlcCAvIDEwMH0ke3VuaXR9KWA7XG4gIH1cblxuICBmdW5jdGlvbiBiZXR3ZWVuKHN0YXJ0LCBlbmQpIHtcbiAgICBjb25zdCBlbmRJbmRleCA9IGtleXMuaW5kZXhPZihlbmQpO1xuICAgIHJldHVybiBgQG1lZGlhIChtaW4td2lkdGg6JHt0eXBlb2YgdmFsdWVzW3N0YXJ0XSA9PT0gJ251bWJlcicgPyB2YWx1ZXNbc3RhcnRdIDogc3RhcnR9JHt1bml0fSkgYW5kIGAgKyBgKG1heC13aWR0aDokeyhlbmRJbmRleCAhPT0gLTEgJiYgdHlwZW9mIHZhbHVlc1trZXlzW2VuZEluZGV4XV0gPT09ICdudW1iZXInID8gdmFsdWVzW2tleXNbZW5kSW5kZXhdXSA6IGVuZCkgLSBzdGVwIC8gMTAwfSR7dW5pdH0pYDtcbiAgfVxuXG4gIGZ1bmN0aW9uIG9ubHkoa2V5KSB7XG4gICAgaWYgKGtleXMuaW5kZXhPZihrZXkpICsgMSA8IGtleXMubGVuZ3RoKSB7XG4gICAgICByZXR1cm4gYmV0d2VlbihrZXksIGtleXNba2V5cy5pbmRleE9mKGtleSkgKyAxXSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHVwKGtleSk7XG4gIH1cblxuICBmdW5jdGlvbiBub3Qoa2V5KSB7XG4gICAgLy8gaGFuZGxlIGZpcnN0IGFuZCBsYXN0IGtleSBzZXBhcmF0ZWx5LCBmb3IgYmV0dGVyIHJlYWRhYmlsaXR5XG4gICAgY29uc3Qga2V5SW5kZXggPSBrZXlzLmluZGV4T2Yoa2V5KTtcblxuICAgIGlmIChrZXlJbmRleCA9PT0gMCkge1xuICAgICAgcmV0dXJuIHVwKGtleXNbMV0pO1xuICAgIH1cblxuICAgIGlmIChrZXlJbmRleCA9PT0ga2V5cy5sZW5ndGggLSAxKSB7XG4gICAgICByZXR1cm4gZG93bihrZXlzW2tleUluZGV4XSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGJldHdlZW4oa2V5LCBrZXlzW2tleXMuaW5kZXhPZihrZXkpICsgMV0pLnJlcGxhY2UoJ0BtZWRpYScsICdAbWVkaWEgbm90IGFsbCBhbmQnKTtcbiAgfVxuXG4gIHJldHVybiBfZXh0ZW5kcyh7XG4gICAga2V5cyxcbiAgICB2YWx1ZXM6IHNvcnRlZFZhbHVlcyxcbiAgICB1cCxcbiAgICBkb3duLFxuICAgIGJldHdlZW4sXG4gICAgb25seSxcbiAgICBub3QsXG4gICAgdW5pdFxuICB9LCBvdGhlcik7XG59IiwiaW1wb3J0IHsgdXNlVGhlbWUgYXMgbXVpVXNlVGhlbWUgfSBmcm9tICdAbXVpL3ByaXZhdGUtdGhlbWluZyc7XG5cbmZ1bmN0aW9uIGlzT2JqZWN0RW1wdHkob2JqKSB7XG4gIHJldHVybiBPYmplY3Qua2V5cyhvYmopLmxlbmd0aCA9PT0gMDtcbn1cblxuZnVuY3Rpb24gdXNlVGhlbWUoZGVmYXVsdFRoZW1lID0gbnVsbCkge1xuICBjb25zdCBjb250ZXh0VGhlbWUgPSBtdWlVc2VUaGVtZSgpO1xuICByZXR1cm4gIWNvbnRleHRUaGVtZSB8fCBpc09iamVjdEVtcHR5KGNvbnRleHRUaGVtZSkgPyBkZWZhdWx0VGhlbWUgOiBjb250ZXh0VGhlbWU7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHVzZVRoZW1lOyIsImltcG9ydCB7IGludGVybmFsX3Jlc29sdmVQcm9wcyBhcyByZXNvbHZlUHJvcHMgfSBmcm9tICdAbXVpL3V0aWxzJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldFRoZW1lUHJvcHMocGFyYW1zKSB7XG4gIGNvbnN0IHtcbiAgICB0aGVtZSxcbiAgICBuYW1lLFxuICAgIHByb3BzXG4gIH0gPSBwYXJhbXM7XG5cbiAgaWYgKCF0aGVtZSB8fCAhdGhlbWUuY29tcG9uZW50cyB8fCAhdGhlbWUuY29tcG9uZW50c1tuYW1lXSB8fCAhdGhlbWUuY29tcG9uZW50c1tuYW1lXS5kZWZhdWx0UHJvcHMpIHtcbiAgICByZXR1cm4gcHJvcHM7XG4gIH1cblxuICByZXR1cm4gcmVzb2x2ZVByb3BzKHRoZW1lLmNvbXBvbmVudHNbbmFtZV0uZGVmYXVsdFByb3BzLCBwcm9wcyk7XG59IiwiaW1wb3J0IHsgZm9ybWF0TXVpRXJyb3JNZXNzYWdlIGFzIF9mb3JtYXRNdWlFcnJvck1lc3NhZ2UgfSBmcm9tIFwiQG11aS91dGlsc1wiO1xuXG4vKipcbiAqIFJldHVybnMgYSBudW1iZXIgd2hvc2UgdmFsdWUgaXMgbGltaXRlZCB0byB0aGUgZ2l2ZW4gcmFuZ2UuXG4gKiBAcGFyYW0ge251bWJlcn0gdmFsdWUgVGhlIHZhbHVlIHRvIGJlIGNsYW1wZWRcbiAqIEBwYXJhbSB7bnVtYmVyfSBtaW4gVGhlIGxvd2VyIGJvdW5kYXJ5IG9mIHRoZSBvdXRwdXQgcmFuZ2VcbiAqIEBwYXJhbSB7bnVtYmVyfSBtYXggVGhlIHVwcGVyIGJvdW5kYXJ5IG9mIHRoZSBvdXRwdXQgcmFuZ2VcbiAqIEByZXR1cm5zIHtudW1iZXJ9IEEgbnVtYmVyIGluIHRoZSByYW5nZSBbbWluLCBtYXhdXG4gKi9cbmZ1bmN0aW9uIGNsYW1wKHZhbHVlLCBtaW4gPSAwLCBtYXggPSAxKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgaWYgKHZhbHVlIDwgbWluIHx8IHZhbHVlID4gbWF4KSB7XG4gICAgICBjb25zb2xlLmVycm9yKGBNVUk6IFRoZSB2YWx1ZSBwcm92aWRlZCAke3ZhbHVlfSBpcyBvdXQgb2YgcmFuZ2UgWyR7bWlufSwgJHttYXh9XS5gKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gTWF0aC5taW4oTWF0aC5tYXgobWluLCB2YWx1ZSksIG1heCk7XG59XG4vKipcbiAqIENvbnZlcnRzIGEgY29sb3IgZnJvbSBDU1MgaGV4IGZvcm1hdCB0byBDU1MgcmdiIGZvcm1hdC5cbiAqIEBwYXJhbSB7c3RyaW5nfSBjb2xvciAtIEhleCBjb2xvciwgaS5lLiAjbm5uIG9yICNubm5ubm5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IEEgQ1NTIHJnYiBjb2xvciBzdHJpbmdcbiAqL1xuXG5cbmV4cG9ydCBmdW5jdGlvbiBoZXhUb1JnYihjb2xvcikge1xuICBjb2xvciA9IGNvbG9yLnNsaWNlKDEpO1xuICBjb25zdCByZSA9IG5ldyBSZWdFeHAoYC57MSwke2NvbG9yLmxlbmd0aCA+PSA2ID8gMiA6IDF9fWAsICdnJyk7XG4gIGxldCBjb2xvcnMgPSBjb2xvci5tYXRjaChyZSk7XG5cbiAgaWYgKGNvbG9ycyAmJiBjb2xvcnNbMF0ubGVuZ3RoID09PSAxKSB7XG4gICAgY29sb3JzID0gY29sb3JzLm1hcChuID0+IG4gKyBuKTtcbiAgfVxuXG4gIHJldHVybiBjb2xvcnMgPyBgcmdiJHtjb2xvcnMubGVuZ3RoID09PSA0ID8gJ2EnIDogJyd9KCR7Y29sb3JzLm1hcCgobiwgaW5kZXgpID0+IHtcbiAgICByZXR1cm4gaW5kZXggPCAzID8gcGFyc2VJbnQobiwgMTYpIDogTWF0aC5yb3VuZChwYXJzZUludChuLCAxNikgLyAyNTUgKiAxMDAwKSAvIDEwMDA7XG4gIH0pLmpvaW4oJywgJyl9KWAgOiAnJztcbn1cblxuZnVuY3Rpb24gaW50VG9IZXgoaW50KSB7XG4gIGNvbnN0IGhleCA9IGludC50b1N0cmluZygxNik7XG4gIHJldHVybiBoZXgubGVuZ3RoID09PSAxID8gYDAke2hleH1gIDogaGV4O1xufVxuLyoqXG4gKiBSZXR1cm5zIGFuIG9iamVjdCB3aXRoIHRoZSB0eXBlIGFuZCB2YWx1ZXMgb2YgYSBjb2xvci5cbiAqXG4gKiBOb3RlOiBEb2VzIG5vdCBzdXBwb3J0IHJnYiAlIHZhbHVlcy5cbiAqIEBwYXJhbSB7c3RyaW5nfSBjb2xvciAtIENTUyBjb2xvciwgaS5lLiBvbmUgb2Y6ICNubm4sICNubm5ubm4sIHJnYigpLCByZ2JhKCksIGhzbCgpLCBoc2xhKClcbiAqIEByZXR1cm5zIHtvYmplY3R9IC0gQSBNVUkgY29sb3Igb2JqZWN0OiB7dHlwZTogc3RyaW5nLCB2YWx1ZXM6IG51bWJlcltdfVxuICovXG5cblxuZXhwb3J0IGZ1bmN0aW9uIGRlY29tcG9zZUNvbG9yKGNvbG9yKSB7XG4gIC8vIElkZW1wb3RlbnRcbiAgaWYgKGNvbG9yLnR5cGUpIHtcbiAgICByZXR1cm4gY29sb3I7XG4gIH1cblxuICBpZiAoY29sb3IuY2hhckF0KDApID09PSAnIycpIHtcbiAgICByZXR1cm4gZGVjb21wb3NlQ29sb3IoaGV4VG9SZ2IoY29sb3IpKTtcbiAgfVxuXG4gIGNvbnN0IG1hcmtlciA9IGNvbG9yLmluZGV4T2YoJygnKTtcbiAgY29uc3QgdHlwZSA9IGNvbG9yLnN1YnN0cmluZygwLCBtYXJrZXIpO1xuXG4gIGlmIChbJ3JnYicsICdyZ2JhJywgJ2hzbCcsICdoc2xhJywgJ2NvbG9yJ10uaW5kZXhPZih0eXBlKSA9PT0gLTEpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gYE1VSTogVW5zdXBwb3J0ZWQgXFxgJHtjb2xvcn1cXGAgY29sb3IuXG5UaGUgZm9sbG93aW5nIGZvcm1hdHMgYXJlIHN1cHBvcnRlZDogI25ubiwgI25ubm5ubiwgcmdiKCksIHJnYmEoKSwgaHNsKCksIGhzbGEoKSwgY29sb3IoKS5gIDogX2Zvcm1hdE11aUVycm9yTWVzc2FnZSg5LCBjb2xvcikpO1xuICB9XG5cbiAgbGV0IHZhbHVlcyA9IGNvbG9yLnN1YnN0cmluZyhtYXJrZXIgKyAxLCBjb2xvci5sZW5ndGggLSAxKTtcbiAgbGV0IGNvbG9yU3BhY2U7XG5cbiAgaWYgKHR5cGUgPT09ICdjb2xvcicpIHtcbiAgICB2YWx1ZXMgPSB2YWx1ZXMuc3BsaXQoJyAnKTtcbiAgICBjb2xvclNwYWNlID0gdmFsdWVzLnNoaWZ0KCk7XG5cbiAgICBpZiAodmFsdWVzLmxlbmd0aCA9PT0gNCAmJiB2YWx1ZXNbM10uY2hhckF0KDApID09PSAnLycpIHtcbiAgICAgIHZhbHVlc1szXSA9IHZhbHVlc1szXS5zbGljZSgxKTtcbiAgICB9XG5cbiAgICBpZiAoWydzcmdiJywgJ2Rpc3BsYXktcDMnLCAnYTk4LXJnYicsICdwcm9waG90by1yZ2InLCAncmVjLTIwMjAnXS5pbmRleE9mKGNvbG9yU3BhY2UpID09PSAtMSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGBNVUk6IHVuc3VwcG9ydGVkIFxcYCR7Y29sb3JTcGFjZX1cXGAgY29sb3Igc3BhY2UuXG5UaGUgZm9sbG93aW5nIGNvbG9yIHNwYWNlcyBhcmUgc3VwcG9ydGVkOiBzcmdiLCBkaXNwbGF5LXAzLCBhOTgtcmdiLCBwcm9waG90by1yZ2IsIHJlYy0yMDIwLmAgOiBfZm9ybWF0TXVpRXJyb3JNZXNzYWdlKDEwLCBjb2xvclNwYWNlKSk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHZhbHVlcyA9IHZhbHVlcy5zcGxpdCgnLCcpO1xuICB9XG5cbiAgdmFsdWVzID0gdmFsdWVzLm1hcCh2YWx1ZSA9PiBwYXJzZUZsb2F0KHZhbHVlKSk7XG4gIHJldHVybiB7XG4gICAgdHlwZSxcbiAgICB2YWx1ZXMsXG4gICAgY29sb3JTcGFjZVxuICB9O1xufVxuLyoqXG4gKiBSZXR1cm5zIGEgY2hhbm5lbCBjcmVhdGVkIGZyb20gdGhlIGlucHV0IGNvbG9yLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBjb2xvciAtIENTUyBjb2xvciwgaS5lLiBvbmUgb2Y6ICNubm4sICNubm5ubm4sIHJnYigpLCByZ2JhKCksIGhzbCgpLCBoc2xhKClcbiAqIEByZXR1cm5zIHtzdHJpbmd9IC0gVGhlIGNoYW5uZWwgZm9yIHRoZSBjb2xvciwgdGhhdCBjYW4gYmUgdXNlZCBpbiByZ2JhIG9yIGhzbGEgY29sb3JzXG4gKi9cblxuZXhwb3J0IGNvbnN0IGNvbG9yQ2hhbm5lbCA9IGNvbG9yID0+IHtcbiAgY29uc3QgZGVjb21wb3NlZENvbG9yID0gZGVjb21wb3NlQ29sb3IoY29sb3IpO1xuICByZXR1cm4gZGVjb21wb3NlZENvbG9yLnZhbHVlcy5zbGljZSgwLCAzKS5tYXAoKHZhbCwgaWR4KSA9PiBkZWNvbXBvc2VkQ29sb3IudHlwZS5pbmRleE9mKCdoc2wnKSAhPT0gLTEgJiYgaWR4ICE9PSAwID8gYCR7dmFsfSVgIDogdmFsKS5qb2luKCcgJyk7XG59O1xuLyoqXG4gKiBDb252ZXJ0cyBhIGNvbG9yIG9iamVjdCB3aXRoIHR5cGUgYW5kIHZhbHVlcyB0byBhIHN0cmluZy5cbiAqIEBwYXJhbSB7b2JqZWN0fSBjb2xvciAtIERlY29tcG9zZWQgY29sb3JcbiAqIEBwYXJhbSB7c3RyaW5nfSBjb2xvci50eXBlIC0gT25lIG9mOiAncmdiJywgJ3JnYmEnLCAnaHNsJywgJ2hzbGEnXG4gKiBAcGFyYW0ge2FycmF5fSBjb2xvci52YWx1ZXMgLSBbbixuLG5dIG9yIFtuLG4sbixuXVxuICogQHJldHVybnMge3N0cmluZ30gQSBDU1MgY29sb3Igc3RyaW5nXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIHJlY29tcG9zZUNvbG9yKGNvbG9yKSB7XG4gIGNvbnN0IHtcbiAgICB0eXBlLFxuICAgIGNvbG9yU3BhY2VcbiAgfSA9IGNvbG9yO1xuICBsZXQge1xuICAgIHZhbHVlc1xuICB9ID0gY29sb3I7XG5cbiAgaWYgKHR5cGUuaW5kZXhPZigncmdiJykgIT09IC0xKSB7XG4gICAgLy8gT25seSBjb252ZXJ0IHRoZSBmaXJzdCAzIHZhbHVlcyB0byBpbnQgKGkuZS4gbm90IGFscGhhKVxuICAgIHZhbHVlcyA9IHZhbHVlcy5tYXAoKG4sIGkpID0+IGkgPCAzID8gcGFyc2VJbnQobiwgMTApIDogbik7XG4gIH0gZWxzZSBpZiAodHlwZS5pbmRleE9mKCdoc2wnKSAhPT0gLTEpIHtcbiAgICB2YWx1ZXNbMV0gPSBgJHt2YWx1ZXNbMV19JWA7XG4gICAgdmFsdWVzWzJdID0gYCR7dmFsdWVzWzJdfSVgO1xuICB9XG5cbiAgaWYgKHR5cGUuaW5kZXhPZignY29sb3InKSAhPT0gLTEpIHtcbiAgICB2YWx1ZXMgPSBgJHtjb2xvclNwYWNlfSAke3ZhbHVlcy5qb2luKCcgJyl9YDtcbiAgfSBlbHNlIHtcbiAgICB2YWx1ZXMgPSBgJHt2YWx1ZXMuam9pbignLCAnKX1gO1xuICB9XG5cbiAgcmV0dXJuIGAke3R5cGV9KCR7dmFsdWVzfSlgO1xufVxuLyoqXG4gKiBDb252ZXJ0cyBhIGNvbG9yIGZyb20gQ1NTIHJnYiBmb3JtYXQgdG8gQ1NTIGhleCBmb3JtYXQuXG4gKiBAcGFyYW0ge3N0cmluZ30gY29sb3IgLSBSR0IgY29sb3IsIGkuZS4gcmdiKG4sIG4sIG4pXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBBIENTUyByZ2IgY29sb3Igc3RyaW5nLCBpLmUuICNubm5ubm5cbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gcmdiVG9IZXgoY29sb3IpIHtcbiAgLy8gSWRlbXBvdGVudFxuICBpZiAoY29sb3IuaW5kZXhPZignIycpID09PSAwKSB7XG4gICAgcmV0dXJuIGNvbG9yO1xuICB9XG5cbiAgY29uc3Qge1xuICAgIHZhbHVlc1xuICB9ID0gZGVjb21wb3NlQ29sb3IoY29sb3IpO1xuICByZXR1cm4gYCMke3ZhbHVlcy5tYXAoKG4sIGkpID0+IGludFRvSGV4KGkgPT09IDMgPyBNYXRoLnJvdW5kKDI1NSAqIG4pIDogbikpLmpvaW4oJycpfWA7XG59XG4vKipcbiAqIENvbnZlcnRzIGEgY29sb3IgZnJvbSBoc2wgZm9ybWF0IHRvIHJnYiBmb3JtYXQuXG4gKiBAcGFyYW0ge3N0cmluZ30gY29sb3IgLSBIU0wgY29sb3IgdmFsdWVzXG4gKiBAcmV0dXJucyB7c3RyaW5nfSByZ2IgY29sb3IgdmFsdWVzXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGhzbFRvUmdiKGNvbG9yKSB7XG4gIGNvbG9yID0gZGVjb21wb3NlQ29sb3IoY29sb3IpO1xuICBjb25zdCB7XG4gICAgdmFsdWVzXG4gIH0gPSBjb2xvcjtcbiAgY29uc3QgaCA9IHZhbHVlc1swXTtcbiAgY29uc3QgcyA9IHZhbHVlc1sxXSAvIDEwMDtcbiAgY29uc3QgbCA9IHZhbHVlc1syXSAvIDEwMDtcbiAgY29uc3QgYSA9IHMgKiBNYXRoLm1pbihsLCAxIC0gbCk7XG5cbiAgY29uc3QgZiA9IChuLCBrID0gKG4gKyBoIC8gMzApICUgMTIpID0+IGwgLSBhICogTWF0aC5tYXgoTWF0aC5taW4oayAtIDMsIDkgLSBrLCAxKSwgLTEpO1xuXG4gIGxldCB0eXBlID0gJ3JnYic7XG4gIGNvbnN0IHJnYiA9IFtNYXRoLnJvdW5kKGYoMCkgKiAyNTUpLCBNYXRoLnJvdW5kKGYoOCkgKiAyNTUpLCBNYXRoLnJvdW5kKGYoNCkgKiAyNTUpXTtcblxuICBpZiAoY29sb3IudHlwZSA9PT0gJ2hzbGEnKSB7XG4gICAgdHlwZSArPSAnYSc7XG4gICAgcmdiLnB1c2godmFsdWVzWzNdKTtcbiAgfVxuXG4gIHJldHVybiByZWNvbXBvc2VDb2xvcih7XG4gICAgdHlwZSxcbiAgICB2YWx1ZXM6IHJnYlxuICB9KTtcbn1cbi8qKlxuICogVGhlIHJlbGF0aXZlIGJyaWdodG5lc3Mgb2YgYW55IHBvaW50IGluIGEgY29sb3Igc3BhY2UsXG4gKiBub3JtYWxpemVkIHRvIDAgZm9yIGRhcmtlc3QgYmxhY2sgYW5kIDEgZm9yIGxpZ2h0ZXN0IHdoaXRlLlxuICpcbiAqIEZvcm11bGE6IGh0dHBzOi8vd3d3LnczLm9yZy9UUi9XQ0FHMjAtVEVDSFMvRzE3Lmh0bWwjRzE3LXRlc3RzXG4gKiBAcGFyYW0ge3N0cmluZ30gY29sb3IgLSBDU1MgY29sb3IsIGkuZS4gb25lIG9mOiAjbm5uLCAjbm5ubm5uLCByZ2IoKSwgcmdiYSgpLCBoc2woKSwgaHNsYSgpLCBjb2xvcigpXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBUaGUgcmVsYXRpdmUgYnJpZ2h0bmVzcyBvZiB0aGUgY29sb3IgaW4gdGhlIHJhbmdlIDAgLSAxXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEx1bWluYW5jZShjb2xvcikge1xuICBjb2xvciA9IGRlY29tcG9zZUNvbG9yKGNvbG9yKTtcbiAgbGV0IHJnYiA9IGNvbG9yLnR5cGUgPT09ICdoc2wnID8gZGVjb21wb3NlQ29sb3IoaHNsVG9SZ2IoY29sb3IpKS52YWx1ZXMgOiBjb2xvci52YWx1ZXM7XG4gIHJnYiA9IHJnYi5tYXAodmFsID0+IHtcbiAgICBpZiAoY29sb3IudHlwZSAhPT0gJ2NvbG9yJykge1xuICAgICAgdmFsIC89IDI1NTsgLy8gbm9ybWFsaXplZFxuICAgIH1cblxuICAgIHJldHVybiB2YWwgPD0gMC4wMzkyOCA/IHZhbCAvIDEyLjkyIDogKCh2YWwgKyAwLjA1NSkgLyAxLjA1NSkgKiogMi40O1xuICB9KTsgLy8gVHJ1bmNhdGUgYXQgMyBkaWdpdHNcblxuICByZXR1cm4gTnVtYmVyKCgwLjIxMjYgKiByZ2JbMF0gKyAwLjcxNTIgKiByZ2JbMV0gKyAwLjA3MjIgKiByZ2JbMl0pLnRvRml4ZWQoMykpO1xufVxuLyoqXG4gKiBDYWxjdWxhdGVzIHRoZSBjb250cmFzdCByYXRpbyBiZXR3ZWVuIHR3byBjb2xvcnMuXG4gKlxuICogRm9ybXVsYTogaHR0cHM6Ly93d3cudzMub3JnL1RSL1dDQUcyMC1URUNIUy9HMTcuaHRtbCNHMTctdGVzdHNcbiAqIEBwYXJhbSB7c3RyaW5nfSBmb3JlZ3JvdW5kIC0gQ1NTIGNvbG9yLCBpLmUuIG9uZSBvZjogI25ubiwgI25ubm5ubiwgcmdiKCksIHJnYmEoKSwgaHNsKCksIGhzbGEoKVxuICogQHBhcmFtIHtzdHJpbmd9IGJhY2tncm91bmQgLSBDU1MgY29sb3IsIGkuZS4gb25lIG9mOiAjbm5uLCAjbm5ubm5uLCByZ2IoKSwgcmdiYSgpLCBoc2woKSwgaHNsYSgpXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBBIGNvbnRyYXN0IHJhdGlvIHZhbHVlIGluIHRoZSByYW5nZSAwIC0gMjEuXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGdldENvbnRyYXN0UmF0aW8oZm9yZWdyb3VuZCwgYmFja2dyb3VuZCkge1xuICBjb25zdCBsdW1BID0gZ2V0THVtaW5hbmNlKGZvcmVncm91bmQpO1xuICBjb25zdCBsdW1CID0gZ2V0THVtaW5hbmNlKGJhY2tncm91bmQpO1xuICByZXR1cm4gKE1hdGgubWF4KGx1bUEsIGx1bUIpICsgMC4wNSkgLyAoTWF0aC5taW4obHVtQSwgbHVtQikgKyAwLjA1KTtcbn1cbi8qKlxuICogU2V0cyB0aGUgYWJzb2x1dGUgdHJhbnNwYXJlbmN5IG9mIGEgY29sb3IuXG4gKiBBbnkgZXhpc3RpbmcgYWxwaGEgdmFsdWVzIGFyZSBvdmVyd3JpdHRlbi5cbiAqIEBwYXJhbSB7c3RyaW5nfSBjb2xvciAtIENTUyBjb2xvciwgaS5lLiBvbmUgb2Y6ICNubm4sICNubm5ubm4sIHJnYigpLCByZ2JhKCksIGhzbCgpLCBoc2xhKCksIGNvbG9yKClcbiAqIEBwYXJhbSB7bnVtYmVyfSB2YWx1ZSAtIHZhbHVlIHRvIHNldCB0aGUgYWxwaGEgY2hhbm5lbCB0byBpbiB0aGUgcmFuZ2UgMCAtIDFcbiAqIEByZXR1cm5zIHtzdHJpbmd9IEEgQ1NTIGNvbG9yIHN0cmluZy4gSGV4IGlucHV0IHZhbHVlcyBhcmUgcmV0dXJuZWQgYXMgcmdiXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGFscGhhKGNvbG9yLCB2YWx1ZSkge1xuICBjb2xvciA9IGRlY29tcG9zZUNvbG9yKGNvbG9yKTtcbiAgdmFsdWUgPSBjbGFtcCh2YWx1ZSk7XG5cbiAgaWYgKGNvbG9yLnR5cGUgPT09ICdyZ2InIHx8IGNvbG9yLnR5cGUgPT09ICdoc2wnKSB7XG4gICAgY29sb3IudHlwZSArPSAnYSc7XG4gIH1cblxuICBpZiAoY29sb3IudHlwZSA9PT0gJ2NvbG9yJykge1xuICAgIGNvbG9yLnZhbHVlc1szXSA9IGAvJHt2YWx1ZX1gO1xuICB9IGVsc2Uge1xuICAgIGNvbG9yLnZhbHVlc1szXSA9IHZhbHVlO1xuICB9XG5cbiAgcmV0dXJuIHJlY29tcG9zZUNvbG9yKGNvbG9yKTtcbn1cbi8qKlxuICogRGFya2VucyBhIGNvbG9yLlxuICogQHBhcmFtIHtzdHJpbmd9IGNvbG9yIC0gQ1NTIGNvbG9yLCBpLmUuIG9uZSBvZjogI25ubiwgI25ubm5ubiwgcmdiKCksIHJnYmEoKSwgaHNsKCksIGhzbGEoKSwgY29sb3IoKVxuICogQHBhcmFtIHtudW1iZXJ9IGNvZWZmaWNpZW50IC0gbXVsdGlwbGllciBpbiB0aGUgcmFuZ2UgMCAtIDFcbiAqIEByZXR1cm5zIHtzdHJpbmd9IEEgQ1NTIGNvbG9yIHN0cmluZy4gSGV4IGlucHV0IHZhbHVlcyBhcmUgcmV0dXJuZWQgYXMgcmdiXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGRhcmtlbihjb2xvciwgY29lZmZpY2llbnQpIHtcbiAgY29sb3IgPSBkZWNvbXBvc2VDb2xvcihjb2xvcik7XG4gIGNvZWZmaWNpZW50ID0gY2xhbXAoY29lZmZpY2llbnQpO1xuXG4gIGlmIChjb2xvci50eXBlLmluZGV4T2YoJ2hzbCcpICE9PSAtMSkge1xuICAgIGNvbG9yLnZhbHVlc1syXSAqPSAxIC0gY29lZmZpY2llbnQ7XG4gIH0gZWxzZSBpZiAoY29sb3IudHlwZS5pbmRleE9mKCdyZ2InKSAhPT0gLTEgfHwgY29sb3IudHlwZS5pbmRleE9mKCdjb2xvcicpICE9PSAtMSkge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMzsgaSArPSAxKSB7XG4gICAgICBjb2xvci52YWx1ZXNbaV0gKj0gMSAtIGNvZWZmaWNpZW50O1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZWNvbXBvc2VDb2xvcihjb2xvcik7XG59XG4vKipcbiAqIExpZ2h0ZW5zIGEgY29sb3IuXG4gKiBAcGFyYW0ge3N0cmluZ30gY29sb3IgLSBDU1MgY29sb3IsIGkuZS4gb25lIG9mOiAjbm5uLCAjbm5ubm5uLCByZ2IoKSwgcmdiYSgpLCBoc2woKSwgaHNsYSgpLCBjb2xvcigpXG4gKiBAcGFyYW0ge251bWJlcn0gY29lZmZpY2llbnQgLSBtdWx0aXBsaWVyIGluIHRoZSByYW5nZSAwIC0gMVxuICogQHJldHVybnMge3N0cmluZ30gQSBDU1MgY29sb3Igc3RyaW5nLiBIZXggaW5wdXQgdmFsdWVzIGFyZSByZXR1cm5lZCBhcyByZ2JcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gbGlnaHRlbihjb2xvciwgY29lZmZpY2llbnQpIHtcbiAgY29sb3IgPSBkZWNvbXBvc2VDb2xvcihjb2xvcik7XG4gIGNvZWZmaWNpZW50ID0gY2xhbXAoY29lZmZpY2llbnQpO1xuXG4gIGlmIChjb2xvci50eXBlLmluZGV4T2YoJ2hzbCcpICE9PSAtMSkge1xuICAgIGNvbG9yLnZhbHVlc1syXSArPSAoMTAwIC0gY29sb3IudmFsdWVzWzJdKSAqIGNvZWZmaWNpZW50O1xuICB9IGVsc2UgaWYgKGNvbG9yLnR5cGUuaW5kZXhPZigncmdiJykgIT09IC0xKSB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCAzOyBpICs9IDEpIHtcbiAgICAgIGNvbG9yLnZhbHVlc1tpXSArPSAoMjU1IC0gY29sb3IudmFsdWVzW2ldKSAqIGNvZWZmaWNpZW50O1xuICAgIH1cbiAgfSBlbHNlIGlmIChjb2xvci50eXBlLmluZGV4T2YoJ2NvbG9yJykgIT09IC0xKSB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCAzOyBpICs9IDEpIHtcbiAgICAgIGNvbG9yLnZhbHVlc1tpXSArPSAoMSAtIGNvbG9yLnZhbHVlc1tpXSkgKiBjb2VmZmljaWVudDtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVjb21wb3NlQ29sb3IoY29sb3IpO1xufVxuLyoqXG4gKiBEYXJrZW4gb3IgbGlnaHRlbiBhIGNvbG9yLCBkZXBlbmRpbmcgb24gaXRzIGx1bWluYW5jZS5cbiAqIExpZ2h0IGNvbG9ycyBhcmUgZGFya2VuZWQsIGRhcmsgY29sb3JzIGFyZSBsaWdodGVuZWQuXG4gKiBAcGFyYW0ge3N0cmluZ30gY29sb3IgLSBDU1MgY29sb3IsIGkuZS4gb25lIG9mOiAjbm5uLCAjbm5ubm5uLCByZ2IoKSwgcmdiYSgpLCBoc2woKSwgaHNsYSgpLCBjb2xvcigpXG4gKiBAcGFyYW0ge251bWJlcn0gY29lZmZpY2llbnQ9MC4xNSAtIG11bHRpcGxpZXIgaW4gdGhlIHJhbmdlIDAgLSAxXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBBIENTUyBjb2xvciBzdHJpbmcuIEhleCBpbnB1dCB2YWx1ZXMgYXJlIHJldHVybmVkIGFzIHJnYlxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBlbXBoYXNpemUoY29sb3IsIGNvZWZmaWNpZW50ID0gMC4xNSkge1xuICByZXR1cm4gZ2V0THVtaW5hbmNlKGNvbG9yKSA+IDAuNSA/IGRhcmtlbihjb2xvciwgY29lZmZpY2llbnQpIDogbGlnaHRlbihjb2xvciwgY29lZmZpY2llbnQpO1xufSIsImltcG9ydCBDbGFzc05hbWVHZW5lcmF0b3IgZnJvbSAnLi4vQ2xhc3NOYW1lR2VuZXJhdG9yJztcbmNvbnN0IGdsb2JhbFN0YXRlQ2xhc3Nlc01hcHBpbmcgPSB7XG4gIGFjdGl2ZTogJ011aS1hY3RpdmUnLFxuICBjaGVja2VkOiAnTXVpLWNoZWNrZWQnLFxuICBjb21wbGV0ZWQ6ICdNdWktY29tcGxldGVkJyxcbiAgZGlzYWJsZWQ6ICdNdWktZGlzYWJsZWQnLFxuICBlcnJvcjogJ011aS1lcnJvcicsXG4gIGV4cGFuZGVkOiAnTXVpLWV4cGFuZGVkJyxcbiAgZm9jdXNlZDogJ011aS1mb2N1c2VkJyxcbiAgZm9jdXNWaXNpYmxlOiAnTXVpLWZvY3VzVmlzaWJsZScsXG4gIHJlcXVpcmVkOiAnTXVpLXJlcXVpcmVkJyxcbiAgc2VsZWN0ZWQ6ICdNdWktc2VsZWN0ZWQnXG59O1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2VuZXJhdGVVdGlsaXR5Q2xhc3MoY29tcG9uZW50TmFtZSwgc2xvdCkge1xuICBjb25zdCBnbG9iYWxTdGF0ZUNsYXNzID0gZ2xvYmFsU3RhdGVDbGFzc2VzTWFwcGluZ1tzbG90XTtcbiAgcmV0dXJuIGdsb2JhbFN0YXRlQ2xhc3MgfHwgYCR7Q2xhc3NOYW1lR2VuZXJhdG9yLmdlbmVyYXRlKGNvbXBvbmVudE5hbWUpfS0ke3Nsb3R9YDtcbn0iLCJmdW5jdGlvbiBfZXh0ZW5kcygpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkge1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuXG4gICAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7XG4gICAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXQ7XG4gIH0sIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0cztcbiAgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2V4dGVuZHMsIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0czsiLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMTMuMVxuICogcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGI9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixjPWI/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMsZD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsZT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxmPWI/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LGc9Yj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsaD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxrPWI/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAsbD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5hc3luY19tb2RlXCIpOjYwMTExLG09Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29uY3VycmVudF9tb2RlXCIpOjYwMTExLG49Yj9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIscD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxxPWI/XG5TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKTo2MDEyMCxyPWI/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6NjAxMTUsdD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LHY9Yj9TeW1ib2wuZm9yKFwicmVhY3QuYmxvY2tcIik6NjAxMjEsdz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mdW5kYW1lbnRhbFwiKTo2MDExNyx4PWI/U3ltYm9sLmZvcihcInJlYWN0LnJlc3BvbmRlclwiKTo2MDExOCx5PWI/U3ltYm9sLmZvcihcInJlYWN0LnNjb3BlXCIpOjYwMTE5O1xuZnVuY3Rpb24geihhKXtpZihcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hKXt2YXIgdT1hLiQkdHlwZW9mO3N3aXRjaCh1KXtjYXNlIGM6c3dpdGNoKGE9YS50eXBlLGEpe2Nhc2UgbDpjYXNlIG06Y2FzZSBlOmNhc2UgZzpjYXNlIGY6Y2FzZSBwOnJldHVybiBhO2RlZmF1bHQ6c3dpdGNoKGE9YSYmYS4kJHR5cGVvZixhKXtjYXNlIGs6Y2FzZSBuOmNhc2UgdDpjYXNlIHI6Y2FzZSBoOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuIHV9fWNhc2UgZDpyZXR1cm4gdX19fWZ1bmN0aW9uIEEoYSl7cmV0dXJuIHooYSk9PT1tfWV4cG9ydHMuQXN5bmNNb2RlPWw7ZXhwb3J0cy5Db25jdXJyZW50TW9kZT1tO2V4cG9ydHMuQ29udGV4dENvbnN1bWVyPWs7ZXhwb3J0cy5Db250ZXh0UHJvdmlkZXI9aDtleHBvcnRzLkVsZW1lbnQ9YztleHBvcnRzLkZvcndhcmRSZWY9bjtleHBvcnRzLkZyYWdtZW50PWU7ZXhwb3J0cy5MYXp5PXQ7ZXhwb3J0cy5NZW1vPXI7ZXhwb3J0cy5Qb3J0YWw9ZDtcbmV4cG9ydHMuUHJvZmlsZXI9ZztleHBvcnRzLlN0cmljdE1vZGU9ZjtleHBvcnRzLlN1c3BlbnNlPXA7ZXhwb3J0cy5pc0FzeW5jTW9kZT1mdW5jdGlvbihhKXtyZXR1cm4gQShhKXx8eihhKT09PWx9O2V4cG9ydHMuaXNDb25jdXJyZW50TW9kZT1BO2V4cG9ydHMuaXNDb250ZXh0Q29uc3VtZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1rfTtleHBvcnRzLmlzQ29udGV4dFByb3ZpZGVyPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09aH07ZXhwb3J0cy5pc0VsZW1lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PWN9O2V4cG9ydHMuaXNGb3J3YXJkUmVmPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09bn07ZXhwb3J0cy5pc0ZyYWdtZW50PWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09ZX07ZXhwb3J0cy5pc0xhenk9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT10fTtcbmV4cG9ydHMuaXNNZW1vPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09cn07ZXhwb3J0cy5pc1BvcnRhbD1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWR9O2V4cG9ydHMuaXNQcm9maWxlcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWd9O2V4cG9ydHMuaXNTdHJpY3RNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09Zn07ZXhwb3J0cy5pc1N1c3BlbnNlPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09cH07XG5leHBvcnRzLmlzVmFsaWRFbGVtZW50VHlwZT1mdW5jdGlvbihhKXtyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGF8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhfHxhPT09ZXx8YT09PW18fGE9PT1nfHxhPT09Znx8YT09PXB8fGE9PT1xfHxcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiYoYS4kJHR5cGVvZj09PXR8fGEuJCR0eXBlb2Y9PT1yfHxhLiQkdHlwZW9mPT09aHx8YS4kJHR5cGVvZj09PWt8fGEuJCR0eXBlb2Y9PT1ufHxhLiQkdHlwZW9mPT09d3x8YS4kJHR5cGVvZj09PXh8fGEuJCR0eXBlb2Y9PT15fHxhLiQkdHlwZW9mPT09dil9O2V4cG9ydHMudHlwZU9mPXo7XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE3LjAuMlxuICogcmVhY3QtanN4LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuJ3VzZSBzdHJpY3QnO3JlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpO3ZhciBmPXJlcXVpcmUoXCJyZWFjdFwiKSxnPTYwMTAzO2V4cG9ydHMuRnJhZ21lbnQ9NjAxMDc7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcil7dmFyIGg9U3ltYm9sLmZvcjtnPWgoXCJyZWFjdC5lbGVtZW50XCIpO2V4cG9ydHMuRnJhZ21lbnQ9aChcInJlYWN0LmZyYWdtZW50XCIpfXZhciBtPWYuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQuUmVhY3RDdXJyZW50T3duZXIsbj1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LHA9e2tleTohMCxyZWY6ITAsX19zZWxmOiEwLF9fc291cmNlOiEwfTtcbmZ1bmN0aW9uIHEoYyxhLGspe3ZhciBiLGQ9e30sZT1udWxsLGw9bnVsbDt2b2lkIDAhPT1rJiYoZT1cIlwiK2spO3ZvaWQgMCE9PWEua2V5JiYoZT1cIlwiK2Eua2V5KTt2b2lkIDAhPT1hLnJlZiYmKGw9YS5yZWYpO2ZvcihiIGluIGEpbi5jYWxsKGEsYikmJiFwLmhhc093blByb3BlcnR5KGIpJiYoZFtiXT1hW2JdKTtpZihjJiZjLmRlZmF1bHRQcm9wcylmb3IoYiBpbiBhPWMuZGVmYXVsdFByb3BzLGEpdm9pZCAwPT09ZFtiXSYmKGRbYl09YVtiXSk7cmV0dXJueyQkdHlwZW9mOmcsdHlwZTpjLGtleTplLHJlZjpsLHByb3BzOmQsX293bmVyOm0uY3VycmVudH19ZXhwb3J0cy5qc3g9cTtleHBvcnRzLmpzeHM9cTtcbiIsImltcG9ydCB7IFNldHRpbmdzIH0gZnJvbSBcImJhY2tncm91bmRcIjtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgZ2V0U3RvcmFnZSwgc2V0U3RvcmFnZSwgZ2V0U3RvcmFnZUFsbCB9IGZyb20gXCIuLi9tb2R1bGVzL3N0b3JhZ2VcIjtcbmltcG9ydCB7IFJlZGlyZWN0RW51bSB9IGZyb20gXCIuLi9iYWNrZ3JvdW5kL2luZGV4XCI7XG5cbmNvbnN0IENvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KHtcbiAgaXNMb2FkZWQ6IGZhbHNlLFxuICBkYXRhU3RvcmFnZToge30gYXMgU2V0dGluZ3MsXG4gIGRlbGV0ZUxpbms6ICh1cmw6IHN0cmluZykgPT4ge30sXG4gIGRlbGV0ZVdoaXRlTGlzdExpbms6ICh1cmw6IHN0cmluZykgPT4ge30sXG4gIHNldFRvZ2dsZXM6IChmaWVsZHM6IHsgaXNCbG9ja2luZzogYm9vbGVhbjsgaXNXaGl0ZUxpc3Rpbmc6IGJvb2xlYW4gfSkgPT4ge30sXG4gIGFkZFNpdGU6ICh1cmw6IHN0cmluZykgPT4ge30sXG4gIGFkZFdoaXRlTGlzdFNpdGU6IGFzeW5jICh1cmw6IHN0cmluZykgPT4gbmV3IFByb21pc2UobnVsbCksXG4gIHVwZGF0ZVJlZGlyZWN0TGluazogYXN5bmMgKHVybDogc3RyaW5nKSA9PiB7fSxcbiAgdXBkYXRlUmVkaXJlY3RPcHRpb246IChyZWRpcmVjdE9wdGlvbjogc3RyaW5nKSA9PiB7fSxcbn0pO1xuXG50eXBlIFN0b3JhZ2VDb250ZXh0UHJvcHMgPSB7XG4gIGNoaWxkcmVuOiBhbnk7XG59O1xuXG5lbnVtIEZpZWxkVXBkYXRlRW51bSB7XG4gIFVQREFURV9SRURJUkVDVF9PUFRJT04gPSBcInVwZGF0ZSByZWRpcmVjdE9wdGlvblwiLFxuICBVUERBVEVfUkVESVJFQ1RfTElOSyA9IFwidXBkYXRlIHJlZGlyZWN0TGlua1wiLFxuICBBRERfVE9fU0lURUxJU1QgPSBcImFkZCB0byBzaXRlTGlzdFwiLFxuICBVUERBVEVfSVNfQkxPQ0tJTkcgPSBcInVwZGF0ZSBpc0Jsb2NraW5nXCIsXG4gIFVQREFURV9JU19XSElURUxJU1RJTkcgPSBcInVwZGF0ZSBpc1doaXRlTGlzdGluZ1wiLFxuICBSRU1PVkVfRlJPTV9XSElURUxJU1QgPSBcInJlbW92ZSBmcm9tIHdoaXRlbGlzdFwiLFxufVxuXG5leHBvcnQgY29uc3QgU3RvcmFnZVByb3ZpZGVyID0gKHsgY2hpbGRyZW4gfTogU3RvcmFnZUNvbnRleHRQcm9wcykgPT4ge1xuICBjb25zdCBbaXNMb2FkZWQsIHNldElzTG9hZGVkXSA9IFJlYWN0LnVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2RhdGFTdG9yYWdlLCBzZXREYXRhU3RvcmFnZV0gPSBSZWFjdC51c2VTdGF0ZSh7fSBhcyBTZXR0aW5ncyk7XG5cbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBnZXRTdG9yYWdlQWxsKFtcInNldHRpbmdzXCJdKS50aGVuKChkYXRhKSA9PiB7XG4gICAgICBjb25zdCB7IHNldHRpbmdzIH0gPSBkYXRhIGFzIGFueTtcbiAgICAgIGNvbnN0IHsgaXNCbG9ja2luZywgc2l0ZUxpc3QsIGlzV2hpdGVMaXN0aW5nLCB3aGl0ZUxpc3RTaXRlcywgcmVkaXJlY3RMaW5rLCByZWRpcmVjdE9wdGlvbiB9ID1cbiAgICAgICAgc2V0dGluZ3M7XG4gICAgICBzZXREYXRhU3RvcmFnZSh7XG4gICAgICAgIGlzQmxvY2tpbmcsXG4gICAgICAgIHNpdGVMaXN0LFxuICAgICAgICBpc1doaXRlTGlzdGluZyxcbiAgICAgICAgd2hpdGVMaXN0U2l0ZXMsXG4gICAgICAgIHJlZGlyZWN0TGluayxcbiAgICAgICAgcmVkaXJlY3RPcHRpb24sXG4gICAgICB9KTtcbiAgICAgIHNldElzTG9hZGVkKHRydWUpO1xuICAgIH0pO1xuICB9LCBbXSk7XG5cbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBsaXN0ZW5lckZ1bmMgPSAoY2hhbmdlczogYW55KSA9PiB7XG4gICAgICBpZiAoY2hhbmdlc1tcInNldHRpbmdzXCJdKSB7XG4gICAgICAgIGNvbnN0IHsgb2xkVmFsdWUsIG5ld1ZhbHVlIH0gPSBjaGFuZ2VzLnNldHRpbmdzO1xuICAgICAgICBjb25zdCBmaWVsZHMgPSBbXG4gICAgICAgICAgXCJpc0Jsb2NraW5nXCIsXG4gICAgICAgICAgXCJzaXRlTGlzdFwiLFxuICAgICAgICAgIFwiaXNXaGl0ZUxpc3RpbmdcIixcbiAgICAgICAgICBcIndoaXRlTGlzdFNpdGVzXCIsXG4gICAgICAgICAgXCJyZWRpcmVjdExpbmtcIixcbiAgICAgICAgICBcInJlZGlyZWN0T3B0aW9uXCIsXG4gICAgICAgIF07XG4gICAgICAgIHdoaWxlIChKU09OLnN0cmluZ2lmeShvbGRWYWx1ZVtmaWVsZHNbMF1dKSA9PT0gSlNPTi5zdHJpbmdpZnkobmV3VmFsdWVbZmllbGRzWzBdXSkpIHtcbiAgICAgICAgICBmaWVsZHMuc2hpZnQoKTtcbiAgICAgICAgfVxuICAgICAgICBzZXREYXRhU3RvcmFnZSh7IC4uLmRhdGFTdG9yYWdlLCBbZmllbGRzWzBdXTogbmV3VmFsdWVbZmllbGRzWzBdXSB9KTtcbiAgICAgIH1cbiAgICB9O1xuICAgIGNocm9tZS5zdG9yYWdlLm9uQ2hhbmdlZC5hZGRMaXN0ZW5lcihsaXN0ZW5lckZ1bmMpO1xuXG4gICAgcmV0dXJuICgpID0+IGNocm9tZS5zdG9yYWdlLm9uQ2hhbmdlZC5yZW1vdmVMaXN0ZW5lcihsaXN0ZW5lckZ1bmMpO1xuICB9LCBbZGF0YVN0b3JhZ2VdKTtcblxuICBjb25zdCBzZXRUb2dnbGVzID0gYXN5bmMgKGZpZWxkczogeyBpc0Jsb2NraW5nOiBib29sZWFuOyBpc1doaXRlTGlzdGluZzogYm9vbGVhbiB9KSA9PiB7XG4gICAgZm9yIChsZXQgcHJvcCBpbiBmaWVsZHMpIHtcbiAgICAgIGxldCBmaWVsZFVwZGF0ZSA9XG4gICAgICAgIHByb3AgPT09IFwiaXNCbG9ja2luZ1wiXG4gICAgICAgICAgPyBGaWVsZFVwZGF0ZUVudW0uVVBEQVRFX0lTX0JMT0NLSU5HXG4gICAgICAgICAgOiBGaWVsZFVwZGF0ZUVudW0uVVBEQVRFX0lTX1dISVRFTElTVElORztcbiAgICAgIGlmIChwcm9wID09PSBcImlzQmxvY2tpbmdcIiB8fCBwcm9wID09PSBcImlzV2hpdGVMaXN0aW5nXCIpIHtcbiAgICAgICAgYXdhaXQgY29uZmxpY3RIYW5kbGVyKGZpZWxkVXBkYXRlLCBmaWVsZHNbcHJvcF0pO1xuICAgICAgfVxuICAgIH1cbiAgICBnZXRTdG9yYWdlKFwic2V0dGluZ3NcIiwgKGRhdGE6IGFueSkgPT4ge1xuICAgICAgY29uc3Qgc2V0dGluZ3MgPSB7IC4uLmRhdGEuc2V0dGluZ3MsIC4uLmZpZWxkcyB9O1xuICAgICAgY29uc29sZS5sb2coXCLwn5qAIH4gZmlsZTogc3RvcmFnZS5jb250ZXh0LnRzeCB+IGxpbmUgODcgfiBnZXRTdG9yYWdlIH4gc2V0dGluZ3NcIiwgc2V0dGluZ3MpO1xuICAgICAgc2V0U3RvcmFnZShcInNldHRpbmdzXCIsIHsgc2V0dGluZ3MgfSwgKCkgPT4ge1xuICAgICAgICBzZXREYXRhU3RvcmFnZShzZXR0aW5ncyk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfTtcblxuICBjb25zdCBhZGRTaXRlID0gYXN5bmMgKHVybDogc3RyaW5nKSA9PiB7XG4gICAgYXdhaXQgY29uZmxpY3RIYW5kbGVyKEZpZWxkVXBkYXRlRW51bS5BRERfVE9fU0lURUxJU1QsIHVybCk7XG4gICAgZ2V0U3RvcmFnZShcInNldHRpbmdzXCIsIChkYXRhOiBhbnkpID0+IHtcbiAgICAgIGNvbnN0IG9sZFNpdGVMaXN0ID0gZGF0YS5zZXR0aW5ncy5zaXRlTGlzdDtcbiAgICAgIGlmICghb2xkU2l0ZUxpc3QuaW5jbHVkZXModXJsKSkge1xuICAgICAgICBjb25zdCBzZXR0aW5ncyA9IHsgLi4uZGF0YS5zZXR0aW5ncywgc2l0ZUxpc3Q6IGRhdGEuc2V0dGluZ3Muc2l0ZUxpc3QuY29uY2F0KHVybCkgfTtcbiAgICAgICAgc2V0U3RvcmFnZShcInNldHRpbmdzXCIsIHsgc2V0dGluZ3MgfSwgKCkgPT4ge1xuICAgICAgICAgIHNldERhdGFTdG9yYWdlKHNldHRpbmdzKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG5cbiAgY29uc3QgYWRkV2hpdGVMaXN0U2l0ZSA9IGFzeW5jICh1cmw6IHN0cmluZykgPT4ge1xuICAgIHJldHVybiBnZXRTdG9yYWdlKFwic2V0dGluZ3NcIiwgKGRhdGE6IGFueSkgPT4ge1xuICAgICAgY29uc3Qgd2hpdGVMaXN0U2l0ZXMgPSBkYXRhLnNldHRpbmdzLndoaXRlTGlzdFNpdGVzO1xuICAgICAgaWYgKCF3aGl0ZUxpc3RTaXRlcy5pbmNsdWRlcyh1cmwpKSB7XG4gICAgICAgIGNvbnN0IHNldHRpbmdzID0ge1xuICAgICAgICAgIC4uLmRhdGEuc2V0dGluZ3MsXG4gICAgICAgICAgd2hpdGVMaXN0U2l0ZXM6IGRhdGEuc2V0dGluZ3Mud2hpdGVMaXN0U2l0ZXMuY29uY2F0KHVybCksXG4gICAgICAgIH07XG4gICAgICAgIHNldFN0b3JhZ2UoXCJzZXR0aW5nc1wiLCB7IHNldHRpbmdzIH0sICgpID0+IHtcbiAgICAgICAgICBzZXREYXRhU3RvcmFnZShzZXR0aW5ncyk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gIGNvbnN0IHVwZGF0ZVJlZGlyZWN0TGluayA9IGFzeW5jICh1cmw6IHN0cmluZykgPT4ge1xuICAgIGF3YWl0IGNvbmZsaWN0SGFuZGxlcihGaWVsZFVwZGF0ZUVudW0uVVBEQVRFX1JFRElSRUNUX0xJTkssIHVybCk7XG4gICAgZ2V0U3RvcmFnZShcInNldHRpbmdzXCIsIChkYXRhOiBhbnkpID0+IHtcbiAgICAgIGNvbnN0IHNldHRpbmdzID0ge1xuICAgICAgICAuLi5kYXRhLnNldHRpbmdzLFxuICAgICAgICByZWRpcmVjdExpbms6IHVybCxcbiAgICAgIH07XG4gICAgICBzZXRTdG9yYWdlKFwic2V0dGluZ3NcIiwgeyBzZXR0aW5ncyB9KTtcbiAgICB9KTtcbiAgfTtcblxuICBjb25zdCBkZWxldGVMaW5rID0gKHVybDogc3RyaW5nKSA9PiB7XG4gICAgZ2V0U3RvcmFnZShcInNldHRpbmdzXCIsIChkYXRhOiBhbnkpID0+IHtcbiAgICAgIGxldCB7IHNpdGVMaXN0IH0gPSBkYXRhLnNldHRpbmdzO1xuICAgICAgc2l0ZUxpc3QgPSBzaXRlTGlzdC5maWx0ZXIoKHNpdGVVUkw6IHN0cmluZykgPT4gc2l0ZVVSTCAhPT0gdXJsKTtcbiAgICAgIGxldCBzZXR0aW5ncyA9IE9iamVjdC5hc3NpZ24oe30sIGRhdGEuc2V0dGluZ3MsIHsgc2l0ZUxpc3QgfSk7XG4gICAgICBzZXRTdG9yYWdlKFwic2V0dGluZ3NcIiwgeyBzZXR0aW5ncyB9KTtcbiAgICB9KTtcbiAgfTtcblxuICBjb25zdCBkZWxldGVXaGl0ZUxpc3RMaW5rID0gYXN5bmMgKHVybDogc3RyaW5nKSA9PiB7XG4gICAgYXdhaXQgY29uZmxpY3RIYW5kbGVyKEZpZWxkVXBkYXRlRW51bS5SRU1PVkVfRlJPTV9XSElURUxJU1QsIHVybCk7XG4gICAgZ2V0U3RvcmFnZShcInNldHRpbmdzXCIsIChkYXRhOiBhbnkpID0+IHtcbiAgICAgIGxldCB7IHdoaXRlTGlzdFNpdGVzIH0gPSBkYXRhLnNldHRpbmdzO1xuICAgICAgd2hpdGVMaXN0U2l0ZXMgPSB3aGl0ZUxpc3RTaXRlcy5maWx0ZXIoKHNpdGVVUkw6IHN0cmluZykgPT4gc2l0ZVVSTCAhPT0gdXJsKTtcbiAgICAgIGxldCBzZXR0aW5ncyA9IE9iamVjdC5hc3NpZ24oe30sIGRhdGEuc2V0dGluZ3MsIHsgd2hpdGVMaXN0U2l0ZXMgfSk7XG4gICAgICBzZXRTdG9yYWdlKFwic2V0dGluZ3NcIiwgeyBzZXR0aW5ncyB9KTtcbiAgICB9KTtcbiAgfTtcblxuICBjb25zdCB1cGRhdGVSZWRpcmVjdE9wdGlvbiA9IGFzeW5jIChyZWRpcmVjdE9wdGlvbjogc3RyaW5nKSA9PiB7XG4gICAgYXdhaXQgY29uZmxpY3RIYW5kbGVyKEZpZWxkVXBkYXRlRW51bS5VUERBVEVfUkVESVJFQ1RfT1BUSU9OLCByZWRpcmVjdE9wdGlvbik7XG4gICAgZ2V0U3RvcmFnZShcInNldHRpbmdzXCIsIChkYXRhOiBhbnkpID0+IHtcbiAgICAgIGxldCBzZXR0aW5ncyA9IE9iamVjdC5hc3NpZ24oe30sIGRhdGEuc2V0dGluZ3MsIHsgcmVkaXJlY3RPcHRpb24gfSk7XG4gICAgICBzZXRTdG9yYWdlKFwic2V0dGluZ3NcIiwgeyBzZXR0aW5ncyB9KTtcbiAgICB9KTtcbiAgfTtcblxuICBjb25zdCBpc1N0YXJ0aW5nU3RyaW5nTWF0Y2ggPSAoc3RyMTogc3RyaW5nLCBzdHIyOiBzdHJpbmcpID0+IHtcbiAgICByZXR1cm4gc3RyMSAmJiBzdHIyICYmIChzdHIxLmluZGV4T2Yoc3RyMikgPT09IDAgfHwgc3RyMi5pbmRleE9mKHN0cjEpID09PSAwKTtcbiAgfTtcblxuICBjb25zdCBoYXNDb25mbGljdFdpdGhXaGl0ZWxpc3QgPSAocmVkaXJlY3RMaW5rOiBzdHJpbmcsIHdoaXRlbGlzdFNpdGVzOiBzdHJpbmdbXSkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICByZWRpcmVjdExpbmsgJiZcbiAgICAgIHdoaXRlbGlzdFNpdGVzLmV2ZXJ5KCh1cmw6IHN0cmluZykgPT4gIWlzU3RhcnRpbmdTdHJpbmdNYXRjaCh1cmwsIHJlZGlyZWN0TGluaykpXG4gICAgKTtcbiAgfTtcblxuICBjb25zdCBoYXNDb25mbGljdFdpdGhCbG9ja2xpc3QgPSAocmVkaXJlY3RMaW5rOiBzdHJpbmcsIGJsb2NrTGlzdFNpdGVzOiBzdHJpbmdbXSkgPT4ge1xuICAgIHJldHVybiByZWRpcmVjdExpbmsgJiYgYmxvY2tMaXN0U2l0ZXMuc29tZSgodXJsKSA9PiBpc1N0YXJ0aW5nU3RyaW5nTWF0Y2godXJsLCByZWRpcmVjdExpbmspKTtcbiAgfTtcblxuICBjb25zdCBjb25mbGljdEhhbmRsZXIgPSBhc3luYyAoYWN0aW9uOiBGaWVsZFVwZGF0ZUVudW0sIHZhbHVlOiBhbnkpID0+IHtcbiAgICBjb25zdCB7IGlzQmxvY2tpbmcsIGlzV2hpdGVMaXN0aW5nLCBzaXRlTGlzdCwgd2hpdGVMaXN0U2l0ZXMsIHJlZGlyZWN0TGluaywgcmVkaXJlY3RPcHRpb24gfSA9XG4gICAgICBkYXRhU3RvcmFnZTtcbiAgICBzd2l0Y2ggKGFjdGlvbikge1xuICAgICAgY2FzZSBGaWVsZFVwZGF0ZUVudW0uVVBEQVRFX1JFRElSRUNUX09QVElPTjoge1xuICAgICAgICBpZiAodmFsdWUgPT09IFJlZGlyZWN0RW51bS5VUkwgJiYgcmVkaXJlY3RMaW5rKSB7XG4gICAgICAgICAgaWYgKGhhc0NvbmZsaWN0V2l0aFdoaXRlbGlzdChyZWRpcmVjdExpbmssIHdoaXRlTGlzdFNpdGVzKSAmJiBpc1doaXRlTGlzdGluZykge1xuICAgICAgICAgICAgYXdhaXQgYWRkV2hpdGVMaXN0U2l0ZShyZWRpcmVjdExpbmspO1xuICAgICAgICAgICAgLy8gYWRkIG5vdGlmaWNhdGlvbiBcIndlIGFkZGVkIDx1cmw+IHRvIHlvdXIgd2hpdGVsaXN0XCJcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKGhhc0NvbmZsaWN0V2l0aEJsb2NrbGlzdChyZWRpcmVjdExpbmssIHNpdGVMaXN0KSAmJiBpc0Jsb2NraW5nKSB7XG4gICAgICAgICAgICBhbGVydChcbiAgICAgICAgICAgICAgYFlvdXIgcmVkaXJlY3Qgd2Vic2l0ZSBjb3VsZCBjYXVzZSBpc3N1ZXMuIFlvdSBoYXZlICR7cmVkaXJlY3RMaW5rfSBhcyB5b3VyIHJlZGlyZWN0IHdlYnNpdGUgYW5kIHRoYXQgd2Vic2l0ZSBpcyBhbHNvIGluIHlvdXIgYmxvY2sgbGlzdGBcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSBGaWVsZFVwZGF0ZUVudW0uVVBEQVRFX1JFRElSRUNUX0xJTks6IHtcbiAgICAgICAgaWYgKHJlZGlyZWN0T3B0aW9uID09PSBSZWRpcmVjdEVudW0uVVJMKSB7XG4gICAgICAgICAgaWYgKGhhc0NvbmZsaWN0V2l0aFdoaXRlbGlzdCh2YWx1ZSwgd2hpdGVMaXN0U2l0ZXMpICYmIGlzV2hpdGVMaXN0aW5nKSB7XG4gICAgICAgICAgICBhd2FpdCBhZGRXaGl0ZUxpc3RTaXRlKHZhbHVlKTtcbiAgICAgICAgICAgIC8vIGFkZCBub3RpZmljYXRpb24gXCJ3ZSBhZGRlZCA8dXJsPiB0byB5b3VyIHdoaXRlbGlzdFwiXG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChoYXNDb25mbGljdFdpdGhCbG9ja2xpc3QodmFsdWUsIHNpdGVMaXN0KSAmJiBpc0Jsb2NraW5nKSB7XG4gICAgICAgICAgICBhbGVydChcbiAgICAgICAgICAgICAgYFVzaW5nIHRoaXMgcmVkaXJlY3Qgd2Vic2l0ZSBjb3VsZCBjYXVzZSBpc3N1ZXMuIFRoaXMgd2Vic2l0ZSBpcyBhbHNvIGluIHlvdXIgYmxvY2sgbGlzdGBcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSBGaWVsZFVwZGF0ZUVudW0uQUREX1RPX1NJVEVMSVNUOiB7XG4gICAgICAgIGlmIChcbiAgICAgICAgICByZWRpcmVjdE9wdGlvbiA9PT0gUmVkaXJlY3RFbnVtLlVSTCAmJlxuICAgICAgICAgIGlzU3RhcnRpbmdTdHJpbmdNYXRjaCh2YWx1ZSwgcmVkaXJlY3RMaW5rKSAmJlxuICAgICAgICAgIGlzQmxvY2tpbmdcbiAgICAgICAgKSB7XG4gICAgICAgICAgYWxlcnQoXG4gICAgICAgICAgICBgQWRkaW5nIHRoaXMgc2l0ZSBjb3VsZCBjYXVzZSBpc3N1ZXMuIFlvdSBoYXZlICR7cmVkaXJlY3RMaW5rfSBhcyB5b3VyIHJlZGlyZWN0IHdlYnNpdGVgXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgRmllbGRVcGRhdGVFbnVtLlVQREFURV9JU19CTE9DS0lORzoge1xuICAgICAgICBpZiAoXG4gICAgICAgICAgcmVkaXJlY3RPcHRpb24gPT09IFJlZGlyZWN0RW51bS5VUkwgJiZcbiAgICAgICAgICB2YWx1ZSAmJlxuICAgICAgICAgIGhhc0NvbmZsaWN0V2l0aEJsb2NrbGlzdChyZWRpcmVjdExpbmssIHNpdGVMaXN0KVxuICAgICAgICApIHtcbiAgICAgICAgICBhbGVydChcbiAgICAgICAgICAgIGBBY3RpdmF0aW5nIGJsb2NraW5nIGNvdWxkIGNhdXNlIGlzc3Vlcy4gWW91IGhhdmUgJHtyZWRpcmVjdExpbmt9IGFzIHlvdXIgcmVkaXJlY3Qgd2Vic2l0ZSBhbmQgdGhhdCB3ZWJzaXRlIGlzIGFsc28gaW4geW91ciBibG9jayBsaXN0YFxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlIEZpZWxkVXBkYXRlRW51bS5VUERBVEVfSVNfV0hJVEVMSVNUSU5HOiB7XG4gICAgICAgIGlmIChcbiAgICAgICAgICByZWRpcmVjdE9wdGlvbiA9PT0gUmVkaXJlY3RFbnVtLlVSTCAmJlxuICAgICAgICAgIHZhbHVlICYmXG4gICAgICAgICAgaGFzQ29uZmxpY3RXaXRoV2hpdGVsaXN0KHJlZGlyZWN0TGluaywgd2hpdGVMaXN0U2l0ZXMpXG4gICAgICAgICkge1xuICAgICAgICAgIGF3YWl0IGFkZFdoaXRlTGlzdFNpdGUocmVkaXJlY3RMaW5rKTtcbiAgICAgICAgICAvLyBhZGQgbm90aWZpY2F0aW9uIFwid2UgYWRkZWQgPHVybD4gdG8geW91ciB3aGl0ZWxpc3RcIlxuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSBGaWVsZFVwZGF0ZUVudW0uUkVNT1ZFX0ZST01fV0hJVEVMSVNUOiB7XG4gICAgICAgIGlmIChcbiAgICAgICAgICByZWRpcmVjdE9wdGlvbiA9PT0gUmVkaXJlY3RFbnVtLlVSTCAmJlxuICAgICAgICAgIGlzV2hpdGVMaXN0aW5nICYmXG4gICAgICAgICAgaXNTdGFydGluZ1N0cmluZ01hdGNoKHZhbHVlLCByZWRpcmVjdExpbmspXG4gICAgICAgICkge1xuICAgICAgICAgIGFsZXJ0KFxuICAgICAgICAgICAgYFJlbW92aW5nIHRoaXMgZnJvbSB0aGUgd2hpdGVsaXN0IGNvdWxkIGNhdXNlIGlzc3Vlcy4gWW91IGhhdmUgJHtyZWRpcmVjdExpbmt9IGFzIHlvdXIgcmVkaXJlY3Qgd2Vic2l0ZWBcbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxDb250ZXh0LlByb3ZpZGVyXG4gICAgICB2YWx1ZT17e1xuICAgICAgICBpc0xvYWRlZCxcbiAgICAgICAgZGF0YVN0b3JhZ2UsXG4gICAgICAgIGRlbGV0ZUxpbmssXG4gICAgICAgIGRlbGV0ZVdoaXRlTGlzdExpbmssXG4gICAgICAgIHNldFRvZ2dsZXMsXG4gICAgICAgIGFkZFNpdGUsXG4gICAgICAgIGFkZFdoaXRlTGlzdFNpdGUsXG4gICAgICAgIHVwZGF0ZVJlZGlyZWN0TGluayxcbiAgICAgICAgdXBkYXRlUmVkaXJlY3RPcHRpb24sXG4gICAgICB9fVxuICAgID5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L0NvbnRleHQuUHJvdmlkZXI+XG4gICk7XG59O1xuXG5leHBvcnQgY29uc3QgdXNlU3RvcmFnZUNvbnRleHQgPSAoKSA9PiB7XG4gIHJldHVybiBSZWFjdC51c2VDb250ZXh0KENvbnRleHQpO1xufTtcbiIsImltcG9ydCB7IGdldFN0b3JhZ2UsIHNldFN0b3JhZ2UsIGdldFN0b3JhZ2VBbGwgfSBmcm9tIFwiLi4vbW9kdWxlcy9zdG9yYWdlXCI7XG5cbmV4cG9ydCBlbnVtIFJlZGlyZWN0RW51bSB7XG4gIFVSTCA9IFwiVVJMXCIsXG4gIEJMQU5LID0gXCJCTEFOS1wiLFxuICBFTkNPVVJBR0lORyA9IFwiRU5DT1VSQUdJTkdcIixcbiAgT0ZGRU5TSVZFID0gXCJPRkZFTlNJVkVcIixcbiAgQ1VTVE9NID0gXCJDVVNUT01cIixcbn1cblxuZXhwb3J0IHR5cGUgVGlwID0ge1xuICB0aXRsZTogc3RyaW5nO1xuICB0ZXh0OiBzdHJpbmc7XG59O1xuXG5leHBvcnQgdHlwZSBUaXBTZXR0aW5ncyA9IHtcbiAgdGlwczogVGlwW107XG4gIHRoZW1lOiB7XG4gICAgY29sb3I6IHtcbiAgICAgIGJhY2tncm91bmRTdGFydDogc3RyaW5nO1xuICAgICAgYmFja2dyb3VuZEVuZDogc3RyaW5nO1xuICAgICAgZm9udEZhbWlseTogc3RyaW5nO1xuICAgICAgZm9udENvbG9yOiBzdHJpbmc7XG4gICAgfTtcbiAgfTtcbn07XG5cbmV4cG9ydCB0eXBlIFNldHRpbmdzID0ge1xuICBpc0Jsb2NraW5nPzogYm9vbGVhbjtcbiAgaXNXaGl0ZUxpc3Rpbmc/OiBib29sZWFuO1xuICBzaXRlTGlzdD86IHN0cmluZ1tdO1xuICB3aGl0ZUxpc3RTaXRlcz86IHN0cmluZ1tdO1xuICByZWRpcmVjdExpbms/OiBzdHJpbmc7XG4gIHJlZGlyZWN0T3B0aW9uPzogUmVkaXJlY3RFbnVtO1xuICB0aXBTZXR0aW5ncz86IFRpcFNldHRpbmdzO1xufTtcblxuKGZ1bmN0aW9uICgpIHtcbiAgZ2V0U3RvcmFnZUFsbChbXCJzZXR0aW5nc1wiXSkudGhlbigoZGF0YSkgPT4ge1xuICAgIGVuc3VyZVNldHRpbmdzKGRhdGEsIChuZXdEYXRhOiBhbnkpID0+IHtcbiAgICAgIGNvbnN0IHsgaXNCbG9ja2luZywgaXNXaGl0ZUxpc3RpbmcsIHNpdGVMaXN0LCB3aGl0ZUxpc3RTaXRlcywgcmVkaXJlY3RMaW5rLCByZWRpcmVjdE9wdGlvbiB9ID1cbiAgICAgICAgbmV3RGF0YS5zZXR0aW5ncyBhcyBTZXR0aW5ncztcbiAgICAgIGlmIChpc0Jsb2NraW5nIHx8IGlzV2hpdGVMaXN0aW5nKSB7XG4gICAgICAgIGNocm9tZS50YWJzLnF1ZXJ5KHt9LCBmdW5jdGlvbiAodGFicykge1xuICAgICAgICAgIGNvbnN0IHNpdGVzID0gaXNXaGl0ZUxpc3RpbmcgPyB3aGl0ZUxpc3RTaXRlcyA6IHNpdGVMaXN0O1xuICAgICAgICAgIEFycmF5LmZyb20odGFicykuZm9yRWFjaCgodGFiKSA9PiB7XG4gICAgICAgICAgICBibG9ja1NpdGVzKHRhYi5pZCwgdGFiLnVybCwgc2l0ZXMsIGlzV2hpdGVMaXN0aW5nLCByZWRpcmVjdExpbmssIHJlZGlyZWN0T3B0aW9uKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH0pO1xufSkoKTtcblxuY2hyb21lLnRhYnMub25VcGRhdGVkLmFkZExpc3RlbmVyKGZ1bmN0aW9uICh0YWJJZCwgY2hhbmdlSW5mbykge1xuICBnZXRTdG9yYWdlKFwic2V0dGluZ3NcIiwgZnVuY3Rpb24gKGRhdGE6IGFueSkge1xuICAgIGNvbnN0IHsgaXNCbG9ja2luZywgaXNXaGl0ZUxpc3RpbmcsIHNpdGVMaXN0LCB3aGl0ZUxpc3RTaXRlcywgcmVkaXJlY3RMaW5rLCByZWRpcmVjdE9wdGlvbiB9ID1cbiAgICAgIGRhdGEuc2V0dGluZ3M7XG4gICAgaWYgKChpc0Jsb2NraW5nIHx8IGlzV2hpdGVMaXN0aW5nKSAmJiBjaGFuZ2VJbmZvLnVybCkge1xuICAgICAgY29uc3Qgc2l0ZXMgPSBpc1doaXRlTGlzdGluZyA/IHdoaXRlTGlzdFNpdGVzIDogc2l0ZUxpc3Q7XG4gICAgICBibG9ja1NpdGVzKHRhYklkLCBjaGFuZ2VJbmZvLnVybCwgc2l0ZXMsIGlzV2hpdGVMaXN0aW5nLCByZWRpcmVjdExpbmssIHJlZGlyZWN0T3B0aW9uKTtcbiAgICB9XG4gIH0pO1xufSk7XG5cbmNocm9tZS5zdG9yYWdlLm9uQ2hhbmdlZC5hZGRMaXN0ZW5lcihmdW5jdGlvbiAoY2hhbmdlcywgbmFtZXNwYWNlKSB7XG4gIGlmIChjaGFuZ2VzLnNldHRpbmdzKSB7XG4gICAgY29uc3QgeyBvbGRWYWx1ZSwgbmV3VmFsdWUgfSA9IGNoYW5nZXMuc2V0dGluZ3M7XG4gICAgaWYgKG9sZFZhbHVlICYmIG5ld1ZhbHVlKSB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIGlzQmxvY2tpbmc6IG5Jc0Jsb2NraW5nLFxuICAgICAgICBzaXRlTGlzdDogblNpdGVMaXN0LFxuICAgICAgICBpc1doaXRlTGlzdGluZzogbklzV2hpdGVMaXN0aW5nLFxuICAgICAgICB3aGl0ZUxpc3RTaXRlczogbldoaXRlTGlzdFNpdGVzLFxuICAgICAgICByZWRpcmVjdExpbmssXG4gICAgICAgIHJlZGlyZWN0T3B0aW9uLFxuICAgICAgfSA9IG5ld1ZhbHVlO1xuICAgICAgLy8gVE9ETyBpbiBmdXR1cmUgY2FuIG1ha2UgaXQgcG9zc2libGUgdG8gdHVybiBvZmYgYmxvY2sgc2l0ZXMgYW5kIHRoZW4gYW55IHBhZ2Ugd291bGQgZ28gYmFjayB0byB3aGF0IHdhcyBvcmlnaW5hbGx5IHNlYXJjaGVkIChpZiBJIHNhdmUgc2VhcmNoZWQgdmlkIHBlciB0YWIgcHJpb3IgdG8gYmxvY2tpbmcgc2FpZCBwYWdlKVxuICAgICAgY29uc3QgYmxvY2tFbmFibGVkID0gbklzQmxvY2tpbmcgfHwgbklzV2hpdGVMaXN0aW5nO1xuICAgICAgaWYgKGJsb2NrRW5hYmxlZCkge1xuICAgICAgICBjaHJvbWUudGFicy5xdWVyeSh7fSwgZnVuY3Rpb24gKHRhYnMpIHtcbiAgICAgICAgICBjb25zdCBzaXRlTGlzdCA9IG5Jc1doaXRlTGlzdGluZyA/IG5XaGl0ZUxpc3RTaXRlcyA6IG5TaXRlTGlzdDtcbiAgICAgICAgICBBcnJheS5mcm9tKHRhYnMpLmZvckVhY2goKHRhYikgPT4ge1xuICAgICAgICAgICAgYmxvY2tTaXRlcyh0YWIuaWQsIHRhYi51cmwsIHNpdGVMaXN0LCBuSXNXaGl0ZUxpc3RpbmcsIHJlZGlyZWN0TGluaywgcmVkaXJlY3RPcHRpb24pO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn0pO1xuXG4vLyBuZXZlciBibG9jayBzaXRlcyB3aXRoIHRoZXNlIHRlcm1zXG5jb25zdCBpZ25vcmVTaXRlID0gKHVybDogc3RyaW5nKSA9PiB7XG4gIGNvbnN0IGlnbm9yZVNpdGVzID0gW1wiY2hyb21lLWV4dGVuc2lvbjovL1wiLCBcImNocm9tZTpcIl07XG4gIHJldHVybiBpZ25vcmVTaXRlcy5zb21lKChzaXRlKSA9PiB1cmwuaW5kZXhPZihzaXRlKSA9PT0gMCk7XG59O1xuXG5mdW5jdGlvbiBibG9ja1NpdGVzKFxuICB0YWJJZDogYW55LFxuICB1cmw6IHN0cmluZyxcbiAgc2l0ZUxpc3Q6IHN0cmluZ1tdLFxuICBpc1doaXRlbGlzdCA9IGZhbHNlLFxuICByZWRpcmVjdExpbms6IHN0cmluZyxcbiAgcmVkaXJlY3RPcHRpb246IFJlZGlyZWN0RW51bVxuKSB7XG4gIGlmIChpZ25vcmVTaXRlKHVybCkpIHJldHVybjtcbiAgY29uc3QgaXNJbkxpc3QgPSBzaXRlTGlzdC5maW5kKChzaXRlKSA9PiB7XG4gICAgcmV0dXJuIHVybC5pbmRleE9mKFwiaHR0cHM6Ly9cIiArIHNpdGUpID09PSAwIHx8IHVybC5pbmRleE9mKFwiaHR0cDovL1wiICsgc2l0ZSkgPT09IDA7XG4gIH0pO1xuICBjb25zdCBzaG91bGRCZUJsb2NrZWQgPSAoaXNJbkxpc3QgJiYgIWlzV2hpdGVsaXN0KSB8fCAoIWlzSW5MaXN0ICYmIGlzV2hpdGVsaXN0KTtcbiAgaWYgKHNob3VsZEJlQmxvY2tlZCkge1xuICAgIC8vIGNhbiBJIHB1c2ggdGhlIGN1cnJlbnQgdXJsIG9udG8gaGlzdG9yeSBzbyBpdCBpc24ndCBsb3N0IGJlZm9yZSByZWRpcmVjdD9cbiAgICBjb25zdCB1cmwgPVxuICAgICAgcmVkaXJlY3RPcHRpb24gPT09IFJlZGlyZWN0RW51bS5VUkwgJiYgcmVkaXJlY3RMaW5rXG4gICAgICAgID8gXCJodHRwczovL1wiICsgcmVkaXJlY3RMaW5rXG4gICAgICAgIDogXCJub3RfYXZhaWxhYmxlL25vdF9hdmFpbGFibGUuaHRtbFwiO1xuICAgIGNocm9tZS50YWJzLnVwZGF0ZSh0YWJJZCwgeyB1cmwgfSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gZW5zdXJlU2V0dGluZ3MoZGF0YTogYW55LCBjYWxsYmFjazogYW55KSB7XG4gIGxldCBwcmV2U2V0dGluZ3MgPSBkYXRhLnNldHRpbmdzIHx8IHt9O1xuXG4gIGxldCB7IGlzQmxvY2tpbmcsIHNpdGVMaXN0LCBpc1doaXRlTGlzdGluZywgd2hpdGVMaXN0U2l0ZXMsIHJlZGlyZWN0TGluaywgcmVkaXJlY3RPcHRpb24gfSA9XG4gICAgcHJldlNldHRpbmdzO1xuXG4gIGlzQmxvY2tpbmcgPSBCb29sZWFuKGlzQmxvY2tpbmcpO1xuICBpc1doaXRlTGlzdGluZyA9IEJvb2xlYW4oaXNXaGl0ZUxpc3RpbmcpO1xuICBzaXRlTGlzdCA9IHNpdGVMaXN0ID09PSB1bmRlZmluZWQgPyBbXSA6IHNpdGVMaXN0O1xuICB3aGl0ZUxpc3RTaXRlcyA9IHdoaXRlTGlzdFNpdGVzID09PSB1bmRlZmluZWQgPyBbXSA6IHdoaXRlTGlzdFNpdGVzO1xuICByZWRpcmVjdExpbmsgPSByZWRpcmVjdExpbmsgfHwgXCJcIjtcbiAgcmVkaXJlY3RPcHRpb24gPSByZWRpcmVjdE9wdGlvbiB8fCBSZWRpcmVjdEVudW0uQkxBTks7XG4gIGNvbnN0IHNldHRpbmdzID0ge1xuICAgIGlzQmxvY2tpbmcsXG4gICAgc2l0ZUxpc3QsXG4gICAgaXNXaGl0ZUxpc3RpbmcsXG4gICAgd2hpdGVMaXN0U2l0ZXMsXG4gICAgcmVkaXJlY3RMaW5rLFxuICAgIHJlZGlyZWN0T3B0aW9uLFxuICB9O1xuICAvL3VwZGF0ZSBzdG9yYWdlIHVzZSB0byBuZXcgc2V0IGZ1bmN0aW9uXG4gIGxldCBuZXdEYXRhID0ge307XG4gIHNldFN0b3JhZ2UoXCJzZXR0aW5nc1wiLCB7IHNldHRpbmdzIH0pLnRoZW4oKGRhdGEpID0+IHtcbiAgICBuZXdEYXRhID0gT2JqZWN0LmFzc2lnbihuZXdEYXRhLCBkYXRhKTtcbiAgICBjYWxsYmFjayhuZXdEYXRhKTtcbiAgfSk7XG59XG4iLCJpbXBvcnQgX2Zvcm1hdE11aUVycm9yTWVzc2FnZSBmcm9tIFwiLi9mb3JtYXRNdWlFcnJvck1lc3NhZ2VcIjtcbi8vIEl0IHNob3VsZCB0byBiZSBub3RlZCB0aGF0IHRoaXMgZnVuY3Rpb24gaXNuJ3QgZXF1aXZhbGVudCB0byBgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemVgLlxuLy9cbi8vIEEgc3RyaWN0IGNhcGl0YWxpemF0aW9uIHNob3VsZCB1cHBlcmNhc2UgdGhlIGZpcnN0IGxldHRlciBvZiBlYWNoIHdvcmQgaW4gdGhlIHNlbnRlbmNlLlxuLy8gV2Ugb25seSBoYW5kbGUgdGhlIGZpcnN0IHdvcmQuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjYXBpdGFsaXplKHN0cmluZykge1xuICBpZiAodHlwZW9mIHN0cmluZyAhPT0gJ3N0cmluZycpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gYE1VSTogXFxgY2FwaXRhbGl6ZShzdHJpbmcpXFxgIGV4cGVjdHMgYSBzdHJpbmcgYXJndW1lbnQuYCA6IF9mb3JtYXRNdWlFcnJvck1lc3NhZ2UoNykpO1xuICB9XG5cbiAgcmV0dXJuIHN0cmluZy5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHN0cmluZy5zbGljZSgxKTtcbn0iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgVGhlbWVDb250ZXh0IGZyb20gJy4vVGhlbWVDb250ZXh0JztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHVzZVRoZW1lKCkge1xuICBjb25zdCB0aGVtZSA9IFJlYWN0LnVzZUNvbnRleHQoVGhlbWVDb250ZXh0KTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC1ob29rcy9ydWxlcy1vZi1ob29rc1xuICAgIFJlYWN0LnVzZURlYnVnVmFsdWUodGhlbWUpO1xuICB9XG5cbiAgcmV0dXJuIHRoZW1lO1xufSIsImltcG9ydCBnZXRUaGVtZVByb3BzIGZyb20gJy4vZ2V0VGhlbWVQcm9wcyc7XG5pbXBvcnQgdXNlVGhlbWUgZnJvbSAnLi4vdXNlVGhlbWUnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXNlVGhlbWVQcm9wcyh7XG4gIHByb3BzLFxuICBuYW1lLFxuICBkZWZhdWx0VGhlbWVcbn0pIHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZShkZWZhdWx0VGhlbWUpO1xuICBjb25zdCBtZXJnZWRQcm9wcyA9IGdldFRoZW1lUHJvcHMoe1xuICAgIHRoZW1lLFxuICAgIG5hbWUsXG4gICAgcHJvcHNcbiAgfSk7XG4gIHJldHVybiBtZXJnZWRQcm9wcztcbn0iLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcblxuLyoqXG4gKiBBZGQga2V5cywgdmFsdWVzIG9mIGBkZWZhdWx0UHJvcHNgIHRoYXQgZG9lcyBub3QgZXhpc3QgaW4gYHByb3BzYFxuICogQHBhcmFtIHtvYmplY3R9IGRlZmF1bHRQcm9wc1xuICogQHBhcmFtIHtvYmplY3R9IHByb3BzXG4gKiBAcmV0dXJucyB7b2JqZWN0fSByZXNvbHZlZCBwcm9wc1xuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZXNvbHZlUHJvcHMoZGVmYXVsdFByb3BzLCBwcm9wcykge1xuICBjb25zdCBvdXRwdXQgPSBfZXh0ZW5kcyh7fSwgcHJvcHMpO1xuXG4gIE9iamVjdC5rZXlzKGRlZmF1bHRQcm9wcykuZm9yRWFjaChwcm9wTmFtZSA9PiB7XG4gICAgaWYgKG91dHB1dFtwcm9wTmFtZV0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgb3V0cHV0W3Byb3BOYW1lXSA9IGRlZmF1bHRQcm9wc1twcm9wTmFtZV07XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIG91dHB1dDtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjb21wb3NlQ2xhc3NlcyhzbG90cywgZ2V0VXRpbGl0eUNsYXNzLCBjbGFzc2VzKSB7XG4gIGNvbnN0IG91dHB1dCA9IHt9O1xuICBPYmplY3Qua2V5cyhzbG90cykuZm9yRWFjaCggLy8gYE9iamV0LmtleXMoc2xvdHMpYCBjYW4ndCBiZSB3aWRlciB0aGFuIGBUYCBiZWNhdXNlIHdlIGluZmVyIGBUYCBmcm9tIGBzbG90c2AuXG4gIC8vIEB0cy1leHBlY3QtZXJyb3IgaHR0cHM6Ly9naXRodWIuY29tL21pY3Jvc29mdC9UeXBlU2NyaXB0L3B1bGwvMTIyNTMjaXNzdWVjb21tZW50LTI2MzEzMjIwOFxuICBzbG90ID0+IHtcbiAgICBvdXRwdXRbc2xvdF0gPSBzbG90c1tzbG90XS5yZWR1Y2UoKGFjYywga2V5KSA9PiB7XG4gICAgICBpZiAoa2V5KSB7XG4gICAgICAgIGlmIChjbGFzc2VzICYmIGNsYXNzZXNba2V5XSkge1xuICAgICAgICAgIGFjYy5wdXNoKGNsYXNzZXNba2V5XSk7XG4gICAgICAgIH1cblxuICAgICAgICBhY2MucHVzaChnZXRVdGlsaXR5Q2xhc3Moa2V5KSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBhY2M7XG4gICAgfSwgW10pLmpvaW4oJyAnKTtcbiAgfSk7XG4gIHJldHVybiBvdXRwdXQ7XG59IiwiY29uc3QgZGVmYXVsdEdlbmVyYXRvciA9IGNvbXBvbmVudE5hbWUgPT4gY29tcG9uZW50TmFtZTtcblxuY29uc3QgY3JlYXRlQ2xhc3NOYW1lR2VuZXJhdG9yID0gKCkgPT4ge1xuICBsZXQgZ2VuZXJhdGUgPSBkZWZhdWx0R2VuZXJhdG9yO1xuICByZXR1cm4ge1xuICAgIGNvbmZpZ3VyZShnZW5lcmF0b3IpIHtcbiAgICAgIGdlbmVyYXRlID0gZ2VuZXJhdG9yO1xuICAgIH0sXG5cbiAgICBnZW5lcmF0ZShjb21wb25lbnROYW1lKSB7XG4gICAgICByZXR1cm4gZ2VuZXJhdGUoY29tcG9uZW50TmFtZSk7XG4gICAgfSxcblxuICAgIHJlc2V0KCkge1xuICAgICAgZ2VuZXJhdGUgPSBkZWZhdWx0R2VuZXJhdG9yO1xuICAgIH1cblxuICB9O1xufTtcblxuY29uc3QgQ2xhc3NOYW1lR2VuZXJhdG9yID0gY3JlYXRlQ2xhc3NOYW1lR2VuZXJhdG9yKCk7XG5leHBvcnQgZGVmYXVsdCBDbGFzc05hbWVHZW5lcmF0b3I7IiwiaW1wb3J0IGdlbmVyYXRlVXRpbGl0eUNsYXNzIGZyb20gJy4uL2dlbmVyYXRlVXRpbGl0eUNsYXNzJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdlbmVyYXRlVXRpbGl0eUNsYXNzZXMoY29tcG9uZW50TmFtZSwgc2xvdHMpIHtcbiAgY29uc3QgcmVzdWx0ID0ge307XG4gIHNsb3RzLmZvckVhY2goc2xvdCA9PiB7XG4gICAgcmVzdWx0W3Nsb3RdID0gZ2VuZXJhdGVVdGlsaXR5Q2xhc3MoY29tcG9uZW50TmFtZSwgc2xvdCk7XG4gIH0pO1xuICByZXR1cm4gcmVzdWx0O1xufSIsImNvbnN0IHNoYXBlID0ge1xuICBib3JkZXJSYWRpdXM6IDRcbn07XG5leHBvcnQgZGVmYXVsdCBzaGFwZTsiLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuY29uc3QgX2V4Y2x1ZGVkID0gW1wiYnJlYWtwb2ludHNcIiwgXCJwYWxldHRlXCIsIFwic3BhY2luZ1wiLCBcInNoYXBlXCJdO1xuaW1wb3J0IHsgZGVlcG1lcmdlIH0gZnJvbSAnQG11aS91dGlscyc7XG5pbXBvcnQgY3JlYXRlQnJlYWtwb2ludHMgZnJvbSAnLi9jcmVhdGVCcmVha3BvaW50cyc7XG5pbXBvcnQgc2hhcGUgZnJvbSAnLi9zaGFwZSc7XG5pbXBvcnQgY3JlYXRlU3BhY2luZyBmcm9tICcuL2NyZWF0ZVNwYWNpbmcnO1xuXG5mdW5jdGlvbiBjcmVhdGVUaGVtZShvcHRpb25zID0ge30sIC4uLmFyZ3MpIHtcbiAgY29uc3Qge1xuICAgIGJyZWFrcG9pbnRzOiBicmVha3BvaW50c0lucHV0ID0ge30sXG4gICAgcGFsZXR0ZTogcGFsZXR0ZUlucHV0ID0ge30sXG4gICAgc3BhY2luZzogc3BhY2luZ0lucHV0LFxuICAgIHNoYXBlOiBzaGFwZUlucHV0ID0ge31cbiAgfSA9IG9wdGlvbnMsXG4gICAgICAgIG90aGVyID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uob3B0aW9ucywgX2V4Y2x1ZGVkKTtcblxuICBjb25zdCBicmVha3BvaW50cyA9IGNyZWF0ZUJyZWFrcG9pbnRzKGJyZWFrcG9pbnRzSW5wdXQpO1xuICBjb25zdCBzcGFjaW5nID0gY3JlYXRlU3BhY2luZyhzcGFjaW5nSW5wdXQpO1xuICBsZXQgbXVpVGhlbWUgPSBkZWVwbWVyZ2Uoe1xuICAgIGJyZWFrcG9pbnRzLFxuICAgIGRpcmVjdGlvbjogJ2x0cicsXG4gICAgY29tcG9uZW50czoge30sXG4gICAgLy8gSW5qZWN0IGNvbXBvbmVudCBkZWZpbml0aW9ucy5cbiAgICBwYWxldHRlOiBfZXh0ZW5kcyh7XG4gICAgICBtb2RlOiAnbGlnaHQnXG4gICAgfSwgcGFsZXR0ZUlucHV0KSxcbiAgICBzcGFjaW5nLFxuICAgIHNoYXBlOiBfZXh0ZW5kcyh7fSwgc2hhcGUsIHNoYXBlSW5wdXQpXG4gIH0sIG90aGVyKTtcbiAgbXVpVGhlbWUgPSBhcmdzLnJlZHVjZSgoYWNjLCBhcmd1bWVudCkgPT4gZGVlcG1lcmdlKGFjYywgYXJndW1lbnQpLCBtdWlUaGVtZSk7XG4gIHJldHVybiBtdWlUaGVtZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlVGhlbWU7IiwiaW1wb3J0IG1lcmdlIGZyb20gJy4uL21lcmdlJztcbmltcG9ydCB7IHN0eWxlRnVuY3Rpb25NYXBwaW5nIGFzIGRlZmF1bHRTdHlsZUZ1bmN0aW9uTWFwcGluZyB9IGZyb20gJy4uL2dldFRoZW1lVmFsdWUnO1xuaW1wb3J0IHsgaGFuZGxlQnJlYWtwb2ludHMsIGNyZWF0ZUVtcHR5QnJlYWtwb2ludE9iamVjdCwgcmVtb3ZlVW51c2VkQnJlYWtwb2ludHMgfSBmcm9tICcuLi9icmVha3BvaW50cyc7XG5cbmZ1bmN0aW9uIG9iamVjdHNIYXZlU2FtZUtleXMoLi4ub2JqZWN0cykge1xuICBjb25zdCBhbGxLZXlzID0gb2JqZWN0cy5yZWR1Y2UoKGtleXMsIG9iamVjdCkgPT4ga2V5cy5jb25jYXQoT2JqZWN0LmtleXMob2JqZWN0KSksIFtdKTtcbiAgY29uc3QgdW5pb24gPSBuZXcgU2V0KGFsbEtleXMpO1xuICByZXR1cm4gb2JqZWN0cy5ldmVyeShvYmplY3QgPT4gdW5pb24uc2l6ZSA9PT0gT2JqZWN0LmtleXMob2JqZWN0KS5sZW5ndGgpO1xufVxuXG5mdW5jdGlvbiBjYWxsSWZGbihtYXliZUZuLCBhcmcpIHtcbiAgcmV0dXJuIHR5cGVvZiBtYXliZUZuID09PSAnZnVuY3Rpb24nID8gbWF5YmVGbihhcmcpIDogbWF5YmVGbjtcbn0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uYW1pbmctY29udmVudGlvblxuXG5cbmV4cG9ydCBmdW5jdGlvbiB1bnN0YWJsZV9jcmVhdGVTdHlsZUZ1bmN0aW9uU3goc3R5bGVGdW5jdGlvbk1hcHBpbmcgPSBkZWZhdWx0U3R5bGVGdW5jdGlvbk1hcHBpbmcpIHtcbiAgY29uc3QgcHJvcFRvU3R5bGVGdW5jdGlvbiA9IE9iamVjdC5rZXlzKHN0eWxlRnVuY3Rpb25NYXBwaW5nKS5yZWR1Y2UoKGFjYywgc3R5bGVGbk5hbWUpID0+IHtcbiAgICBzdHlsZUZ1bmN0aW9uTWFwcGluZ1tzdHlsZUZuTmFtZV0uZmlsdGVyUHJvcHMuZm9yRWFjaChwcm9wTmFtZSA9PiB7XG4gICAgICBhY2NbcHJvcE5hbWVdID0gc3R5bGVGdW5jdGlvbk1hcHBpbmdbc3R5bGVGbk5hbWVdO1xuICAgIH0pO1xuICAgIHJldHVybiBhY2M7XG4gIH0sIHt9KTtcblxuICBmdW5jdGlvbiBnZXRUaGVtZVZhbHVlKHByb3AsIHZhbHVlLCB0aGVtZSkge1xuICAgIGNvbnN0IGlucHV0UHJvcHMgPSB7XG4gICAgICBbcHJvcF06IHZhbHVlLFxuICAgICAgdGhlbWVcbiAgICB9O1xuICAgIGNvbnN0IHN0eWxlRnVuY3Rpb24gPSBwcm9wVG9TdHlsZUZ1bmN0aW9uW3Byb3BdO1xuICAgIHJldHVybiBzdHlsZUZ1bmN0aW9uID8gc3R5bGVGdW5jdGlvbihpbnB1dFByb3BzKSA6IHtcbiAgICAgIFtwcm9wXTogdmFsdWVcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gc3R5bGVGdW5jdGlvblN4KHByb3BzKSB7XG4gICAgY29uc3Qge1xuICAgICAgc3gsXG4gICAgICB0aGVtZSA9IHt9XG4gICAgfSA9IHByb3BzIHx8IHt9O1xuXG4gICAgaWYgKCFzeCkge1xuICAgICAgcmV0dXJuIG51bGw7IC8vIGVtb3Rpb24gJiBzdHlsZWQtY29tcG9uZW50cyB3aWxsIG5lZ2xlY3QgbnVsbFxuICAgIH1cbiAgICAvKlxuICAgICAqIFJlY2VpdmUgYHN4SW5wdXRgIGFzIG9iamVjdCBvciBjYWxsYmFja1xuICAgICAqIGFuZCB0aGVuIHJlY3Vyc2l2ZWx5IGNoZWNrIGtleXMgJiB2YWx1ZXMgdG8gY3JlYXRlIG1lZGlhIHF1ZXJ5IG9iamVjdCBzdHlsZXMuXG4gICAgICogKHRoZSByZXN1bHQgd2lsbCBiZSB1c2VkIGluIGBzdHlsZWRgKVxuICAgICAqL1xuXG5cbiAgICBmdW5jdGlvbiB0cmF2ZXJzZShzeElucHV0KSB7XG4gICAgICBsZXQgc3hPYmplY3QgPSBzeElucHV0O1xuXG4gICAgICBpZiAodHlwZW9mIHN4SW5wdXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgc3hPYmplY3QgPSBzeElucHV0KHRoZW1lKTtcbiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHN4SW5wdXQgIT09ICdvYmplY3QnKSB7XG4gICAgICAgIC8vIHZhbHVlXG4gICAgICAgIHJldHVybiBzeElucHV0O1xuICAgICAgfVxuXG4gICAgICBpZiAoIXN4T2JqZWN0KSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBlbXB0eUJyZWFrcG9pbnRzID0gY3JlYXRlRW1wdHlCcmVha3BvaW50T2JqZWN0KHRoZW1lLmJyZWFrcG9pbnRzKTtcbiAgICAgIGNvbnN0IGJyZWFrcG9pbnRzS2V5cyA9IE9iamVjdC5rZXlzKGVtcHR5QnJlYWtwb2ludHMpO1xuICAgICAgbGV0IGNzcyA9IGVtcHR5QnJlYWtwb2ludHM7XG4gICAgICBPYmplY3Qua2V5cyhzeE9iamVjdCkuZm9yRWFjaChzdHlsZUtleSA9PiB7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gY2FsbElmRm4oc3hPYmplY3Rbc3R5bGVLZXldLCB0aGVtZSk7XG5cbiAgICAgICAgaWYgKHZhbHVlICE9PSBudWxsICYmIHZhbHVlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgaWYgKHByb3BUb1N0eWxlRnVuY3Rpb25bc3R5bGVLZXldKSB7XG4gICAgICAgICAgICAgIGNzcyA9IG1lcmdlKGNzcywgZ2V0VGhlbWVWYWx1ZShzdHlsZUtleSwgdmFsdWUsIHRoZW1lKSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBjb25zdCBicmVha3BvaW50c1ZhbHVlcyA9IGhhbmRsZUJyZWFrcG9pbnRzKHtcbiAgICAgICAgICAgICAgICB0aGVtZVxuICAgICAgICAgICAgICB9LCB2YWx1ZSwgeCA9PiAoe1xuICAgICAgICAgICAgICAgIFtzdHlsZUtleV06IHhcbiAgICAgICAgICAgICAgfSkpO1xuXG4gICAgICAgICAgICAgIGlmIChvYmplY3RzSGF2ZVNhbWVLZXlzKGJyZWFrcG9pbnRzVmFsdWVzLCB2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICBjc3Nbc3R5bGVLZXldID0gc3R5bGVGdW5jdGlvblN4KHtcbiAgICAgICAgICAgICAgICAgIHN4OiB2YWx1ZSxcbiAgICAgICAgICAgICAgICAgIHRoZW1lXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgY3NzID0gbWVyZ2UoY3NzLCBicmVha3BvaW50c1ZhbHVlcyk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY3NzID0gbWVyZ2UoY3NzLCBnZXRUaGVtZVZhbHVlKHN0eWxlS2V5LCB2YWx1ZSwgdGhlbWUpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHJlbW92ZVVudXNlZEJyZWFrcG9pbnRzKGJyZWFrcG9pbnRzS2V5cywgY3NzKTtcbiAgICB9XG5cbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShzeCkgPyBzeC5tYXAodHJhdmVyc2UpIDogdHJhdmVyc2Uoc3gpO1xuICB9XG5cbiAgcmV0dXJuIHN0eWxlRnVuY3Rpb25TeDtcbn1cbmNvbnN0IHN0eWxlRnVuY3Rpb25TeCA9IHVuc3RhYmxlX2NyZWF0ZVN0eWxlRnVuY3Rpb25TeCgpO1xuc3R5bGVGdW5jdGlvblN4LmZpbHRlclByb3BzID0gWydzeCddO1xuZXhwb3J0IGRlZmF1bHQgc3R5bGVGdW5jdGlvblN4OyIsImltcG9ydCB7IFRpcCwgUmVkaXJlY3RFbnVtIH0gZnJvbSBcIi4uL2JhY2tncm91bmRcIjtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgcmVuZGVyIH0gZnJvbSBcInJlYWN0LWRvbVwiO1xuaW1wb3J0IHsgU3RvcmFnZVByb3ZpZGVyLCB1c2VTdG9yYWdlQ29udGV4dCB9IGZyb20gXCIuLi9jb250ZXh0cy9zdG9yYWdlLmNvbnRleHRcIjtcbmltcG9ydCBQYXBlciBmcm9tIFwiQG11aS9tYXRlcmlhbC9QYXBlclwiO1xuXG5jb25zdCBnZXRSYW5kb20gPSAocXVvdGVzOiBUaXBbXSkgPT4ge1xuICBjb25zdCBpbmRleCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHF1b3Rlcy5sZW5ndGgpO1xuICByZXR1cm4gcXVvdGVzW2luZGV4XTtcbn07XG5cbmNvbnN0IE5vdEF2YWlsYWJsZSA9ICgpID0+IHtcbiAgY29uc3QgeyBkYXRhU3RvcmFnZSB9ID0gdXNlU3RvcmFnZUNvbnRleHQoKTtcbiAgY29uc3QgeyByZWRpcmVjdE9wdGlvbiB9ID0gZGF0YVN0b3JhZ2U7XG4gIGxldCBxdW90ZTogVGlwO1xuICBjb25zdCBlbmNvdXJhZ2luZ1RpcHMgPSBbXG4gICAge1xuICAgICAgdGl0bGU6IFwiS2VlcCBpdCBzaW1wbGVcIixcbiAgICAgIHRleHQ6IFwiSWYgeW91J3JlIGZlZWxpbmcgcmVzdGxlc3MsIHRyeSBzZXR0aW5nIGEgc21hbGwgZ29hbCB3aXRoaW4geW91ciB3b3JrIGFuZCBjaG9vc2UgdG8gZmVlbCBnb29kIGFib3V0IHlvdXJzZWxmIHdoZW4geW91IGFjaGlldmUgaXRcIixcbiAgICB9LFxuICAgIHtcbiAgICAgIHRpdGxlOiBcIlRha2UgYSBtb21lbnRcIixcbiAgICAgIHRleHQ6IFwiWW91IHdlcmUgZG9pbmcgc29tZXRoaW5nIGFuZCBnb3QgZGlzdHJhY3RlZCwgdGhhdCdzIG9rYXkgdGhvdWdoLiBUYWtlIGEgbW9tZW50IHRvIHNldCBhbiBpbnRlbnRpb24gYW5kIGhlYWQgYmFjayBpbnRvIHdoYXQgeW91IHdlcmUgZG9pbmcgcHJvcGVybHkgbW90aXZhdGVkXCIsXG4gICAgfSxcbiAgICB7XG4gICAgICB0aXRsZTogXCJSZWZyZXNoIHlvdXIgZW5lcmd5XCIsXG4gICAgICB0ZXh0OiBcIklmIHlvdSBhcmUgZ2V0dGluZyBkaXN0cmFjdGVkIHlvdXIgbWluZCBtaWdodCBiZSB0aXJlZCwgbWFrZSBzdXJlIHRvIHRha2UgYW4gaW50ZW50aW9uYWwgYnJlYWsgc29vbiB0byByZXNldCB5b3VyIHN0YW1pbmFcIixcbiAgICB9LFxuICAgIHtcbiAgICAgIHRpdGxlOiBcIkJlIG1pbmRmdWxcIixcbiAgICAgIHRleHQ6IFwiRXZlbiBqdXN0IHJlYWRpbmcgdGhpcyBhbmQgdGFraW5nIGEgbW9tZW50IHRvIG5vdGljZSB5b3VyIHN0cmVzcyBjYW4gbGVhZCB5b3UgdG93YXJkIGJldHRlciB3b3JrIGhhYml0cy4gQWx3YXlzIGdvIGludG8geW91ciB3b3JrIHdpdGggZnJlc2ggaW50ZW50aW9uLlwiLFxuICAgIH0sXG4gICAge1xuICAgICAgdGl0bGU6IFwiUmlnaHQgbm93IHlvdSdyZSBtb3JlIHRoYW4gZW5vdWdoXCIsXG4gICAgICB0ZXh0OiBcIlN0cmVzcyBpcyB0aGUgd2VpZ2h0IG9mIHRoZSBwYXN0IHByb2plY3RlZCBpbnRvIHRoZSBmdXR1cmUuIEV2ZXJ5IHRpbWUgd2UgbGV0IHRoZSBwcmVzZW50IG1vbWVudCBzaW1wbHkgZXhpc3QgYW5kIGFjY2VwdCBvdXIgc3RyZXNzLCB3ZSByZWdhaW4gdGhlIGFiaWxpdHkgdG8gaGF2ZSBhIGJldHRlciBmdXR1cmVcIixcbiAgICB9LFxuICBdIGFzIFRpcFtdO1xuXG4gIGNvbnN0IG9mZmVuc2l2ZVRpcHMgPSBbXG4gICAgeyB0aXRsZTogXCJGb2N1c1wiLCB0ZXh0OiBcIkRvbid0IGdldCBkaXN0cmFjdGVkIHlvdSBwaWVjZSBvZiBkb29kb29cIiB9LFxuICAgIHtcbiAgICAgIHRpdGxlOiBcIldoeSBhcmUgeW91IHJlYWRpbmcgdGhpcz9cIixcbiAgICAgIHRleHQ6IFwiWW91ciBicmFpbiBzbyBzbWFsbCBhbmQgdW5mb2N1c2VkIEkgY2FuJ3Qgc2VlIGl0LiBXaHkgZG9uJ3QgeW91IGdldCBiYWNrIHRvIHdvcms/XCIsXG4gICAgfSxcbiAgICB7XG4gICAgICB0aXRsZTogXCJZb3UncmUgbG9zaW5nIGl0XCIsXG4gICAgICB0ZXh0OiBcIkl0J3Mgb2ZmaWNpYWwsIHlvdXIgYXR0ZW50aW9uIHNwYW4gaXMgbGVzcyB0aGFuIHRoYXQgb2YgYSBnb2xkZmlzaFwiLFxuICAgIH0sXG4gICAge1xuICAgICAgdGl0bGU6IFwiRGlzdHJhY3RlZCBEdW1teVwiLFxuICAgICAgdGV4dDogXCJJIGRvbid0IGhhdmUgYW55dGhpbmcgZWxzZSB0byBzYXksIGFuZCBubyBJJ20gbm90IHNvcnJ5XCIsXG4gICAgfSxcbiAgXSBhcyBUaXBbXTtcbiAgbGV0IHRoZW1lID0gXCJcIjtcbiAgc3dpdGNoIChyZWRpcmVjdE9wdGlvbikge1xuICAgIGNhc2UgUmVkaXJlY3RFbnVtLkJMQU5LOlxuICAgICAgcmV0dXJuIDw+PC8+O1xuICAgIGNhc2UgUmVkaXJlY3RFbnVtLkVOQ09VUkFHSU5HOiB7XG4gICAgICBxdW90ZSA9IGdldFJhbmRvbShlbmNvdXJhZ2luZ1RpcHMpO1xuICAgICAgdGhlbWUgPSBcImVuY291cmFnaW5nLXRoZW1lXCI7XG4gICAgICBicmVhaztcbiAgICB9XG4gICAgY2FzZSBSZWRpcmVjdEVudW0uT0ZGRU5TSVZFOiB7XG4gICAgICBxdW90ZSA9IGdldFJhbmRvbShvZmZlbnNpdmVUaXBzKTtcbiAgICAgIHRoZW1lID0gXCJvZmZlbnNpdmUtdGhlbWVcIjtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIDw+PC8+O1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cInF1b3Rlcy1jb250YWluZXJcIj5cbiAgICAgIDxQYXBlciBlbGV2YXRpb249ezV9IGNsYXNzTmFtZT17YHF1b3Rlcy1jYXJkICR7dGhlbWV9YH0+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicXVvdGVzLWNhcmQtY29udGVudFwiPlxuICAgICAgICAgIDxoMyBzdHlsZT17eyBtYXJnaW46IFwiMjBweFwiIH19PntxdW90ZS50aXRsZX08L2gzPlxuICAgICAgICAgIDxzcGFuPntxdW90ZS50ZXh0fTwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L1BhcGVyPlxuICAgIDwvZGl2PlxuICApO1xufTtcblxuY29uc3QgQXBwID0gKCkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxTdG9yYWdlUHJvdmlkZXI+XG4gICAgICA8Tm90QXZhaWxhYmxlIC8+XG4gICAgPC9TdG9yYWdlUHJvdmlkZXI+XG4gICk7XG59O1xuXG5yZW5kZXIoPEFwcCAvPiwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJyb290XCIpKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=